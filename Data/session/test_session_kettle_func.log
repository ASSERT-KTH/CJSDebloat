/data/js-variants/multee
3
kettle is testing ./Variants/session/variant3/session
/data/js-variants/multee
************* npm unlink module *************

up to date, audited 949 packages in 6s

109 packages are looking for funding
  run `npm fund` for details

20 vulnerabilities (4 moderate, 14 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible, run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

up to date, audited 1 package in 106ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

changed 1 package, and audited 3 packages in 747ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************
************* npm link module done *************
************* start run test *************

> kettle@2.3.0 pretest
> npx rimraf coverage/*


> kettle@2.3.0 test
> nyc --reporter=html node tests/all-tests.js

Infusion at path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion is at top level 
20:40:05.004:  Registering module subbifier from path /data/js-variants/multee/
20:40:05.004:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle/
20:40:05.005:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/
20:40:05.005:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:05.228:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/node-jqunit/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:06.668:  Successfully queued test JSON line number diagnostic test
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:06.941:  Registering module fluid-pouchdb from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb
20:40:07.202:  Registering module fluid-express from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/fluid-express
20:40:08.005:  ASSERTION FAILED: kettle.JSON.parse called on non-string object 3
20:40:08.009:  Unhandled promise rejection: {
    "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING'"
}
20:40:08.023:  jq: Test concluded - Test name "kettle JSON parsing error tests": 2/2 passed - PASS
20:40:08.024:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:40:08.037:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON": 2/2 passed - PASS
20:40:08.051:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON": 1/1 passed - PASS
20:40:08.053:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:40:08.066:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON5": 2/2 passed - PASS
20:40:08.080:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON5": 1/1 passed - PASS
20:40:08.094:  jq: Test concluded - Test name "kettle.JSON.readFileSync of nonexistent file": 1/1 passed - PASS
20:40:08.123:  Initializing the Express app
20:40:08.124:  Initializing the HTTP server
20:40:08.128:  Opening Kettle Server on port 8081
20:40:08.130:  Kettle Server 1y26uivy-176 is listening on port 8081
20:40:08.130:  Stopping Kettle Server 1y26uivy-176 on port 8081
20:40:08.131:  Kettle Server 1y26uivy-176 on port 8081 is stopped
20:40:08.144:  jq: Test concluded - Test name "Kettle server initialisation test": 1/1 passed - PASS
20:40:08.145:  Loader running configuration name kettle.tests.HTTPMethods.config
20:40:08.183:  Initializing the Express app
20:40:08.184:  Initializing the HTTP server
20:40:08.188:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:08.189:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:08.189:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:08.189:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:08.190:  Opening Kettle Server on port 8081
20:40:08.198:  Sending a GET request to: http://127.0.0.1:8081/
20:40:08.202:  Kettle Server 1y26uivy-241 is listening on port 8081
20:40:08.207:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:08.214:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:08.222:  Stopping Kettle Server 1y26uivy-241 on port 8081
20:40:08.223:  Kettle Server 1y26uivy-241 on port 8081 is stopped
20:40:08.236:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and args": 2/2 passed - PASS
20:40:08.236:  Loader running configuration name kettle.tests.HTTPMethods.config
20:40:08.279:  Initializing the Express app
20:40:08.280:  Initializing the HTTP server
20:40:08.283:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:08.283:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:08.283:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:08.283:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:08.283:  Opening Kettle Server on port 8081
20:40:08.287:  Sending a GET request to: http://127.0.0.1:8081/
20:40:08.287:  Kettle Server 1y26uivy-351 is listening on port 8081
20:40:08.288:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:08.293:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:08.295:  Stopping Kettle Server 1y26uivy-351 on port 8081
20:40:08.296:  Kettle Server 1y26uivy-351 on port 8081 is stopped
20:40:08.309:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and NODE_ENV": 2/2 passed - PASS
20:40:08.310:  ASSERTION FAILED: No configuration specified in either 1st command line argument, NODE_ENV or internal default
20:40:08.323:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config name": 1/1 passed - PASS
20:40:08.323:  ASSERTION FAILED: Config path must be specified as 1st command line argument
20:40:08.337:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config path": 1/1 passed - PASS
20:40:08.342:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:40:08.358:  Successfully queued test JSON line number diagnostic test
20:40:08.358:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:40:08.372:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "GPII-2147: Testing that localhost is properly replaced by 127.0.0.1 in prepareRequestOptions": 1/1 passed - PASS
20:40:08.401:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource basic init tests": 8/8 passed - PASS
20:40:08.411:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "x-custom-header": "x-custom-value",
        "x-custom-header2": "x-custom-value2"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": 999,
    "pathname": "/path",
    "search": "",
    "family": 4,
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:999/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:08.425:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:40:08.432:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "pathname": "/device",
    "search": "",
    "url": "http://localhost:998/device",
    "port": 998,
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:08.446:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:40:08.453:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:08.461:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:08.475:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-73 censoring test": 6/6 passed - PASS
20:40:08.500:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-38 derived writable dataSource test": 1/1 passed - PASS
20:40:08.521:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Reading file in formenc encoding": 1/1 passed - PASS
20:40:08.543:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Writing file in formenc encoding": 1/1 passed - PASS
20:40:08.550:  ASSERTION FAILED: Cannot operate file dataSource {
    "typeName": "kettle.tests.dataSource.fileWithoutPath",
    "id": "1y26uivy-628",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "fluid.contextAware",
            "fluid.dataSource",
            "kettle.dataSource.file",
            "kettle.tests.dataSource.fileWithoutPath"
        ],
        "contextAwareness": {
            "writable": {
                "checks": {
                    "writableValue": {
                        "contextValue": "{fluid.dataSource}.options.writable",
                        "gradeNames": "{fluid.dataSource}.options.writableGrade"
                    }
                }
            }
        },
        "writable": false,
        "components": {
            "encoding": {
                "0": {
                    "type": "fluid.dataSource.encoding.JSON"
                },
                "length": 1
            }
        },
        "events": {
            .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] without an option named "path"
20:40:08.550:  Current activity: 
20:40:08.551:      while firing to listener to event named onRead of component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: 1y26uivy-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-1y26uivy-628
20:40:08.551:      while invoking invoker with name get and record {
    "func": undefined,
    "funcName": "fluid.dataSource.get",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "{that}",
        "{arguments}.0",
        "{arguments}.1"
    ],
    "componentSource": "fluid.dataSource"
} holding component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: 1y26uivy-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-1y26uivy-628
20:40:08.564:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource without path": 2/2 passed - PASS
20:40:08.599:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Attached URLResolver tests": 2/2 passed - PASS
20:40:08.621:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present environment substitution": 1/1 passed - PASS
20:40:08.639:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent environment substitution": 1/1 passed - PASS
20:40:08.657:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present file substitution": 1/1 passed - PASS
20:40:08.676:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent file substitution": 1/1 passed - PASS
20:40:08.694:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test args substitution": 1/1 passed - PASS
20:40:08.708:  Registering module test-module from path /data/js-variants/multee/Clients/session/kettle/tests/configs/node_modules/test-module
20:40:08.746:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults with types": 14/14 passed - PASS
20:40:08.762:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults without type": 4/4 passed - PASS
20:40:08.780:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config with "loadConfig" directive": 2/2 passed - PASS
20:40:08.794:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test parsing command line arguments": 4/4 passed - PASS
20:40:08.795:  ASSERTION FAILED: Error in config file at path undefined - key "distributeOptions" found, where the only legal options are type, options, loadConfigs, mergeConfigs, require
20:40:08.808:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Config with bad top-level keys": 1/1 passed - PASS
20:40:08.810:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:40:08.830:  Successfully queued test Simple get test
20:40:08.830:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:40:08.850:  Successfully queued test Simple get test
20:40:08.850:  jq: Test concluded - Module "1. Testing file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:08.874:  Successfully queued test Simple get test
20:40:08.874:  jq: Test concluded - Module "2. Testing file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:08.893:  Successfully queued test Simple get test
20:40:08.900:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:08.918:  Successfully queued test Simple get test
20:40:08.918:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:08.935:  Successfully queued test Simple get test
20:40:08.935:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:40:08.951:  Successfully queued test Simple get test
20:40:08.952:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response" Test name "Simple get test": 1/1 passed - PASS
20:40:08.969:  Successfully queued test Simple get test
20:40:08.969:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:08.991:  Successfully queued test Simple get test
20:40:08.992:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:09.020:  Successfully queued test Simple get test
20:40:09.021:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:09.055:  Successfully queued test Simple get test
20:40:09.055:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:09.086:  Successfully queued test Simple get test
20:40:09.086:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:09.124:  Successfully queued test Simple set test
20:40:09.135:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:09.155:  Successfully queued test Simple set test
20:40:09.155:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:40:09.182:  Successfully queued test Simple set test
20:40:09.183:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding" Test name "Simple set test": 1/1 passed - PASS
20:40:09.207:  Successfully queued test Simple set test
20:40:09.208:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:40:09.228:  Successfully queued test Simple set test
20:40:09.229:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:40:09.249:  Successfully queued test Simple set test
20:40:09.249:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:40:09.268:  Successfully queued test Simple get test
20:40:09.268:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:40:09.284:  Successfully queued test Simple get test
20:40:09.284:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:09.302:  Successfully queued test Simple get test
20:40:09.310:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:09.326:  Successfully queued test Simple get test
20:40:09.326:  jq: Test concluded - Module "1. Testing file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.358:  Successfully queued test Simple get test
20:40:09.358:  jq: Test concluded - Module "2. Testing file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.380:  Successfully queued test Simple get test
20:40:09.381:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.402:  Successfully queued test Simple get test
20:40:09.402:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.419:  Successfully queued test Simple get test
20:40:09.419:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.437:  Successfully queued test Simple get test
20:40:09.437:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.453:  Successfully queued test Simple get test
20:40:09.453:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.472:  Successfully queued test Simple get test
20:40:09.472:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.488:  Successfully queued test Simple get test
20:40:09.496:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.514:  Successfully queued test Simple get test
20:40:09.514:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.533:  Successfully queued test Simple get test
20:40:09.533:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.554:  Successfully queued test Simple set test
20:40:09.554:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.573:  Successfully queued test Simple set test
20:40:09.573:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:09.593:  Successfully queued test Simple set test
20:40:09.593:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:09.614:  Successfully queued test Simple set test
20:40:09.614:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:09.642:  Successfully queued test Simple set test
20:40:09.642:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:09.663:  Successfully queued test Simple set test
20:40:09.670:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:09.689:  Successfully queued test Simple get test
20:40:09.689:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:09.710:  Successfully queued test Simple get test
20:40:09.710:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.751:  Initializing the Express app
20:40:09.752:  Initializing the HTTP server
20:40:09.754:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:09.754:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.redirectingRequestHandler",
    "route": "/redirect",
    "method": "get"
}
20:40:09.755:  Opening Kettle Server on port 8081
20:40:09.755:  Successfully queued test Simple get test
20:40:09.755:  Kettle Server 1y26uivy-2853 is listening on port 8081
20:40:09.755:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:09.757:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/redirect",
    "search": "",
    "url": "http://localhost:8081/redirect",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:09.759:  Invoking handler kettle.tests.dataSource.URL.redirectingRequestHandler for route /redirect with expectedGrade kettle.request.http
20:40:09.765:  Kettle server allocated request object with type kettle.tests.dataSource.URL.redirectingRequestHandler
20:40:09.770:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:09.776:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:09.778:  Stopping Kettle Server 1y26uivy-2853 on port 8081
20:40:09.779:  Kettle Server 1y26uivy-2853 on port 8081 is stopped
20:40:09.812:  Initializing the Express app
20:40:09.813:  Initializing the HTTP server
20:40:09.815:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:09.816:  Opening Kettle Server on port 8081
20:40:09.816:  Successfully queued test Resource model is initialised
20:40:09.816:  Kettle Server 1y26uivy-3005 is listening on port 8081
20:40:09.824:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "dataSource": {
        "typeName": "kettle.dataSource.URL",
        "id": "1y26uivy-3007",
        "lifecycleStatus": "treeConstructed",
        "destroy": { Function
            
        },
        "options": {
            "gradeNames": [
                "fluid.component",
                "fluid.contextAware",
                "fluid.dataSource",
                "fluid.dataSource.URL",
                "kettle.dataSource.URL"
            ],
            "contextAwareness": {
                "writable": {
                    "checks": {
                        "writableValue": {
                            "contextValue": "{fluid.dataSource}.options.writable",
                            "gradeNames": "{fluid.dataSource}.options.writableGrade"
                        }
    .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:09.825:  jq: Test concluded - Module "KETTLE-89: DataSource support for redirects" Test name "Simple get test": 3/3 passed - PASS
20:40:09.826:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:09.831:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:09.836:  Stopping Kettle Server 1y26uivy-3005 on port 8081
20:40:09.837:  Kettle Server 1y26uivy-3005 on port 8081 is stopped
20:40:09.872:  Initializing the Express app
20:40:09.873:  Initializing the HTTP server
20:40:09.875:  Registering request handler {
    "type": "kettle.request.http",
    "route": "/",
    "method": "get"
}
20:40:09.875:  Opening Kettle Server on port 8081
20:40:09.884:  Successfully queued test Simple get test
20:40:09.884:  Kettle Server 1y26uivy-3171 is listening on port 8081
20:40:09.884:  jq: Test concluded - Module "DataSource during init" Test name "Resource model is initialised": 2/2 passed - PASS
20:40:09.886:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notfound",
    "search": "?search",
    "url": "http://(SENSITIVE):(SENSITIVE)@localhost:8081/notfound?search",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:09.888:  Kettle server getDispatcher found no matching handlers, continuing
20:40:09.891:  Stopping Kettle Server 1y26uivy-3171 on port 8081
20:40:09.891:  Kettle Server 1y26uivy-3171 on port 8081 is stopped
20:40:09.926:  Initializing the Express app
20:40:09.927:  Initializing the HTTP server
20:40:09.927:  Initializing the HTTPS server
20:40:09.978:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:09.979:  Opening Kettle Server on port 8081
20:40:09.979:  Successfully queued test Simple get test
20:40:09.979:  Kettle Server 1y26uivy-3284 is listening on port 8081
20:40:09.979:  jq: Test concluded - Module "w. Testing URL dataSource with sensitive info in URL" Test name "Simple get test": 4/4 passed - PASS
20:40:09.981:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "https:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "https://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:09.988:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:09.993:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:09.996:  Stopping Kettle Server 1y26uivy-3284 on port 8081
20:40:09.997:  Kettle Server 1y26uivy-3284 on port 8081 is stopped
20:40:10.036:  Initializing the Express app
20:40:10.036:  Initializing the HTTP server
20:40:10.039:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:10.039:  Opening Kettle Server on port 8081
20:40:10.040:  Successfully queued test Simple get test
20:40:10.040:  Kettle Server 1y26uivy-3418 is listening on port 8081
20:40:10.041:  jq: Test concluded - Module "HTTPS dataSource test" Test name "Simple get test": 2/2 passed - PASS
20:40:10.042:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:10.044:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:40:10.052:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:40:10.054:  Stopping Kettle Server 1y26uivy-3418 on port 8081
20:40:10.055:  Kettle Server 1y26uivy-3418 on port 8081 is stopped
20:40:10.091:  Initializing the Express app
20:40:10.091:  Initializing the HTTP server
20:40:10.094:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:10.094:  Opening Kettle Server on port 8081
20:40:10.094:  Successfully queued test Simple get test
20:40:10.095:  Kettle Server 1y26uivy-3554 is listening on port 8081
20:40:10.095:  jq: Test concluded - Module "x. Testing URL dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:10.096:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:10.106:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:40:10.112:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:40:10.114:  Stopping Kettle Server 1y26uivy-3554 on port 8081
20:40:10.114:  Kettle Server 1y26uivy-3554 on port 8081 is stopped
20:40:10.162:  Initializing the Express app
20:40:10.162:  Initializing the HTTP server
20:40:10.165:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:10.165:  Opening Kettle Server on port 8081
20:40:10.166:  Successfully queued test Simple get test
20:40:10.166:  Kettle Server 1y26uivy-3691 is listening on port 8081
20:40:10.166:  jq: Test concluded - Module "y. Testing CouchDB dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:10.167:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notFound",
    "search": "",
    "url": "http://localhost:8081/notFound",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:10.168:  Kettle server getDispatcher found no matching handlers, continuing
20:40:10.170:  Stopping Kettle Server 1y26uivy-3691 on port 8081
20:40:10.171:  Kettle Server 1y26uivy-3691 on port 8081 is stopped
20:40:10.210:  Initializing the Express app
20:40:10.210:  Initializing the HTTP server
20:40:10.212:  Registering request handler {
    "method": "put",
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/"
}
20:40:10.212:  Opening Kettle Server on port 8081
20:40:10.213:  Successfully queued test Simple set test
20:40:10.213:  Kettle Server 1y26uivy-3804 is listening on port 8081
20:40:10.213:  jq: Test concluded - Module "z. Testing HTTP dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:10.214:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 24
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:10.216:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:10.222:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:10.234:  Stopping Kettle Server 1y26uivy-3804 on port 8081
20:40:10.235:  Kettle Server 1y26uivy-3804 on port 8081 is stopped
20:40:10.254:  Successfully queued test Simple get test
20:40:10.254:  jq: Test concluded - Module "HTTPS dataSource set with special chars test" Test name "Simple set test": 2/2 passed - PASS
20:40:10.270:  express pouchdb instance '1y26uivy-4002' initalizing...
20:40:10.271:  Creating directory '/tmp/1y26uivy-4002' for express pouchdb instance '1y26uivy-4002'...
20:40:10.330:  express baseDir: '/tmp/1y26uivy-4002'...
20:40:10.332:  Express server listening on port 6789
20:40:10.332:  Express started...
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/@the-t-in-rtf/pouchdb-all-dbs/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:10.568:  Data loaded for database 'testFile'...
20:40:10.570:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT",
    "url": "http://localhost:6789/testFile/test_id"
}
20:40:10.613:  Successfully queued test Simple get test
20:40:10.613:  Express stopped...
20:40:10.613:  jq: Test concluded - Module "3. Testing CouchDB URL DataSource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:10.629:  express pouchdb instance '1y26uivy-4156' initalizing...
20:40:10.633:  Creating directory '/tmp/1y26uivy-4156' for express pouchdb instance '1y26uivy-4156'...
20:40:10.652:  express baseDir: '/tmp/1y26uivy-4156'...
20:40:10.653:  Express server listening on port 6789
20:40:10.653:  Express started...
20:40:10.675:  Data loaded for database 'testFile'...
20:40:10.678:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": false,
    "writeMethod": "PUT"
}
20:40:10.736:  Successfully queued test Simple get test
20:40:10.737:  Express stopped...
20:40:10.737:  jq: Test concluded - Module "5. Testing CouchDB URL datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:40:10.767:  express pouchdb instance '1y26uivy-4293' initalizing...
20:40:10.767:  Creating directory '/tmp/1y26uivy-4293' for express pouchdb instance '1y26uivy-4293'...
20:40:10.806:  express baseDir: '/tmp/1y26uivy-4293'...
20:40:10.808:  Express server listening on port 6789
20:40:10.808:  Express started...
20:40:10.825:  Data loaded for database 'testFile'...
20:40:10.826:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": true,
    "writeMethod": "PUT"
}
20:40:10.872:  Successfully queued test Simple set test
20:40:10.872:  Express stopped...
20:40:10.873:  jq: Test concluded - Module "5a. Testing CouchDB URL datasource with missing file and notFoundIsEmpty" Test name "Simple get test": 1/1 passed - PASS
20:40:10.887:  express pouchdb instance '1y26uivy-4437' initalizing...
20:40:10.888:  Creating directory '/tmp/1y26uivy-4437' for express pouchdb instance '1y26uivy-4437'...
20:40:10.903:  express baseDir: '/tmp/1y26uivy-4437'...
20:40:10.904:  Express server listening on port 6789
20:40:10.904:  Express started...
20:40:10.932:  Data loaded for database 'testFile'...
20:40:10.934:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:10.953:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 47
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:10.958:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:10.986:  Successfully queued test Simple set test
20:40:10.986:  Express stopped...
20:40:10.986:  jq: Test concluded - Module "14. Testing CouchDB URL datasource with HTTP - set" Test name "Simple set test": 1/1 passed - PASS
20:40:10.998:  express pouchdb instance '1y26uivy-4600' initalizing...
20:40:10.999:  Creating directory '/tmp/1y26uivy-4600' for express pouchdb instance '1y26uivy-4600'...
20:40:11.015:  express baseDir: '/tmp/1y26uivy-4600'...
20:40:11.016:  Express server listening on port 6789
20:40:11.016:  Express started...
20:40:11.037:  Data loaded for database 'testFile'...
20:40:11.039:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:11.057:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 119
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:11.061:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:11.131:  Initializing the Express app
20:40:11.132:  Initializing the HTTP server
20:40:11.135:  Initializing the Express app
20:40:11.135:  Initializing the HTTP server
20:40:11.139:  Registering request handler {
    "type": "kettle.tests.serverPair.getRelay",
    "route": "/relay",
    "method": "get"
}
20:40:11.139:  Registering request handler {
    "type": "kettle.tests.serverPair.postRelay",
    "route": "/relay",
    "method": "post"
}
20:40:11.139:  Registering request handler {
    "type": "kettle.tests.serverPair.putRelay",
    "route": "/relay",
    "method": "put"
}
20:40:11.139:  Registering request handler {
    "type": "kettle.tests.serverPair.errorRelay",
    "route": "/errorRelay",
    "method": "get"
}
20:40:11.139:  Opening Kettle Server on port 8086
20:40:11.140:  Registering request handler {
    "type": "kettle.tests.serverPair.getEndpoint",
    "route": "/endpoint",
    "method": "get"
}
20:40:11.140:  Registering request handler {
    "type": "kettle.tests.serverPair.postEndpoint",
    "route": "/endpoint",
    "method": "post"
}
20:40:11.140:  Registering request handler {
    "type": "kettle.tests.serverPair.putEndpoint",
    "route": "/endpoint",
    "method": "put"
}
20:40:11.140:  Registering request handler {
    "type": "kettle.tests.serverPair.errorEndpoint",
    "route": "/errorEndpoint",
    "method": "get"
}
20:40:11.140:  Opening Kettle Server on port 8087
20:40:11.141:  Successfully queued test Access GET request
20:40:11.141:  Successfully queued test Access SET request via POST
20:40:11.142:  Successfully queued test Access SET request via PUT
20:40:11.142:  Successfully queued test Relay error state via GET
20:40:11.142:  Kettle Server 1y26uivy-4695 is listening on port 8086
20:40:11.142:  Kettle Server 1y26uivy-4693 is listening on port 8087
20:40:11.143:  Express stopped...
20:40:11.143:  jq: Test concluded - Module "15. Testing CouchDB URL datasource with HTTP existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:40:11.144:  Sending a GET request to: http://127.0.0.1:8086/relay
20:40:11.146:  Invoking handler kettle.tests.serverPair.getRelay for route /relay with expectedGrade kettle.request.http
20:40:11.157:  Kettle server allocated request object with type kettle.tests.serverPair.getRelay
20:40:11.158:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "get",
    "writeMethod": "POST"
}
20:40:11.178:  Invoking handler kettle.tests.serverPair.getEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:11.191:  Kettle server allocated request object with type kettle.tests.serverPair.getEndpoint
20:40:11.193:  ENDPOINT Resolving with value 42
20:40:11.213:  jq: Test concluded - Module "Cross server datasource access" Test name "Access GET request": 3/3 passed - PASS
20:40:11.214:  Sending a POST request to: http://127.0.0.1:8086/relay
20:40:11.215:  Invoking handler kettle.tests.serverPair.postRelay for route /relay with expectedGrade kettle.request.http
20:40:11.223:  Kettle server allocated request object with type kettle.tests.serverPair.postRelay
20:40:11.225:  DataSource Issuing HTTP request with options {
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "set",
    "writeMethod": "POST"
}
20:40:11.227:  Invoking handler kettle.tests.serverPair.postEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:11.233:  Kettle server allocated request object with type kettle.tests.serverPair.postEndpoint
20:40:11.235:  ENDPOINT Resolving with value {
    "payload": "post return value"
}
20:40:11.252:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via POST": 4/4 passed - PASS
20:40:11.252:  Sending a PUT request to: http://127.0.0.1:8086/relay
20:40:11.253:  Invoking handler kettle.tests.serverPair.putRelay for route /relay with expectedGrade kettle.request.http
20:40:11.259:  Kettle server allocated request object with type kettle.tests.serverPair.putRelay
20:40:11.261:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "writeMethod": "PUT",
    "operation": "set"
}
20:40:11.262:  Invoking handler kettle.tests.serverPair.putEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:11.268:  Kettle server allocated request object with type kettle.tests.serverPair.putEndpoint
20:40:11.269:  ENDPOINT Resolving with value {
    "payload": "put return value"
}
20:40:11.286:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via PUT": 4/4 passed - PASS
20:40:11.287:  Sending a GET request to: http://127.0.0.1:8086/errorRelay
20:40:11.288:  Invoking handler kettle.tests.serverPair.errorRelay for route /errorRelay with expectedGrade kettle.request.http
20:40:11.294:  Kettle server allocated request object with type kettle.tests.serverPair.errorRelay
20:40:11.296:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/errorEndpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/errorEndpoint",
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:11.305:  Invoking handler kettle.tests.serverPair.errorEndpoint for route /errorEndpoint with expectedGrade kettle.request.http
20:40:11.311:  Kettle server allocated request object with type kettle.tests.serverPair.errorEndpoint
20:40:11.316:  Stopping Kettle Server 1y26uivy-4693 on port 8087
20:40:11.316:  Stopping Kettle Server 1y26uivy-4695 on port 8086
20:40:11.317:  Kettle Server 1y26uivy-4693 on port 8087 is stopped
20:40:11.317:  Kettle Server 1y26uivy-4695 on port 8086 is stopped
20:40:11.335:  Successfully queued test HTTPMethods GET test
20:40:11.335:  jq: Test concluded - Module "Cross server datasource access" Test name "Relay error state via GET": 2/2 passed - PASS
20:40:11.364:  Initializing the Express app
20:40:11.365:  Initializing the HTTP server
20:40:11.366:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:11.366:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:11.366:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:11.367:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:11.367:  Opening Kettle Server on port 8081
20:40:11.367:  Kettle Server 1y26uivy-5127 is listening on port 8081
20:40:11.368:  Sending a GET request to: http://127.0.0.1:8081/
20:40:11.369:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:11.374:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:11.376:  Stopping Kettle Server 1y26uivy-5127 on port 8081
20:40:11.376:  Kettle Server 1y26uivy-5127 on port 8081 is stopped
20:40:11.392:  Successfully queued test HTTPMethods POST test
20:40:11.392:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods GET test": 2/2 passed - PASS
20:40:11.413:  Initializing the Express app
20:40:11.414:  Initializing the HTTP server
20:40:11.415:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:11.415:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:11.415:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:11.415:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:11.415:  Opening Kettle Server on port 8081
20:40:11.416:  Kettle Server 1y26uivy-5264 is listening on port 8081
20:40:11.416:  Sending a POST request to: http://127.0.0.1:8081/
20:40:11.417:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:11.423:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:11.426:  Stopping Kettle Server 1y26uivy-5264 on port 8081
20:40:11.426:  Kettle Server 1y26uivy-5264 on port 8081 is stopped
20:40:11.441:  Successfully queued test HTTPMethods PUT test
20:40:11.441:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods POST test": 2/2 passed - PASS
20:40:11.462:  Initializing the Express app
20:40:11.462:  Initializing the HTTP server
20:40:11.464:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:11.464:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:11.464:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:11.464:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:11.464:  Opening Kettle Server on port 8081
20:40:11.464:  Kettle Server 1y26uivy-5401 is listening on port 8081
20:40:11.465:  Sending a PUT request to: http://127.0.0.1:8081/
20:40:11.475:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:11.480:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:11.483:  Stopping Kettle Server 1y26uivy-5401 on port 8081
20:40:11.483:  Kettle Server 1y26uivy-5401 on port 8081 is stopped
20:40:11.504:  Successfully queued test HTTPMethods PUT & POST in sequence test
20:40:11.504:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test": 2/2 passed - PASS
20:40:11.525:  Initializing the Express app
20:40:11.526:  Initializing the HTTP server
20:40:11.527:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:11.527:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:11.527:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:11.527:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:11.527:  Opening Kettle Server on port 8081
20:40:11.528:  Kettle Server 1y26uivy-5554 is listening on port 8081
20:40:11.528:  Sending a POST request to: http://127.0.0.1:8081/
20:40:11.529:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:11.534:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:11.537:  Sending a PUT request to: http://127.0.0.1:8081/
20:40:11.538:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:11.543:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:11.546:  Sending a POST request to: http://127.0.0.1:8081/
20:40:11.547:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:11.552:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:11.554:  Stopping Kettle Server 1y26uivy-5554 on port 8081
20:40:11.554:  Kettle Server 1y26uivy-5554 on port 8081 is stopped
20:40:11.569:  Successfully queued test HTTPMethods PUT test with alternate response status code
20:40:11.569:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT & POST in sequence test": 6/6 passed - PASS
20:40:11.590:  Initializing the Express app
20:40:11.591:  Initializing the HTTP server
20:40:11.592:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:11.592:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:11.593:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:11.593:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:11.593:  Opening Kettle Server on port 8081
20:40:11.593:  Kettle Server 1y26uivy-5735 is listening on port 8081
20:40:11.593:  Sending a PUT request to: http://127.0.0.1:8081/201
20:40:11.594:  Invoking handler kettle.tests.HTTPMethods.put201.handler for route /201 with expectedGrade kettle.request.http
20:40:11.600:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put201.handler
20:40:11.603:  Stopping Kettle Server 1y26uivy-5735 on port 8081
20:40:11.603:  Kettle Server 1y26uivy-5735 on port 8081 is stopped
20:40:11.635:  Successfully queued test CORS middleware tests
20:40:11.635:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test with alternate response status code": 3/3 passed - PASS
20:40:11.664:  Initializing the Express app
20:40:11.665:  Initializing the HTTP server
20:40:11.666:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:11.667:  Opening Kettle Server on port 8081
20:40:11.667:  Kettle Server 1y26uivy-5880 is listening on port 8081
20:40:11.667:  Sending a GET request to: http://127.0.0.1:8081/
20:40:11.678:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:11.684:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:11.687:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:40:11.688:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:11.693:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:11.696:  Stopping Kettle Server 1y26uivy-5880 on port 8081
20:40:11.696:  Kettle Server 1y26uivy-5880 on port 8081 is stopped
20:40:11.711:  Successfully queued test CORS middleware no credential tests
20:40:11.712:  jq: Test concluded - Module "kettle.tests.CORS.config tests" Test name "CORS middleware tests": 11/11 passed - PASS
20:40:11.737:  Initializing the Express app
20:40:11.738:  Initializing the HTTP server
20:40:11.740:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:11.741:  Opening Kettle Server on port 8081
20:40:11.741:  Kettle Server 1y26uivy-6041 is listening on port 8081
20:40:11.742:  Sending a GET request to: http://127.0.0.1:8081/
20:40:11.743:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:11.751:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:11.753:  Stopping Kettle Server 1y26uivy-6041 on port 8081
20:40:11.753:  Kettle Server 1y26uivy-6041 on port 8081 is stopped
20:40:11.771:  Successfully queued test CORS middleware custom origin tests
20:40:11.771:  jq: Test concluded - Module "kettle.tests.CORS.noCred.config tests" Test name "CORS middleware no credential tests": 7/7 passed - PASS
20:40:11.793:  Initializing the Express app
20:40:11.793:  Initializing the HTTP server
20:40:11.795:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:11.795:  Opening Kettle Server on port 8081
20:40:11.795:  Kettle Server 1y26uivy-6188 is listening on port 8081
20:40:11.796:  Sending a GET request to: http://127.0.0.1:8081/
20:40:11.797:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:11.802:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:11.804:  Sending a GET request to: http://127.0.0.1:8081/
20:40:11.805:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:11.811:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:11.813:  Stopping Kettle Server 1y26uivy-6188 on port 8081
20:40:11.813:  Kettle Server 1y26uivy-6188 on port 8081 is stopped
20:40:11.830:  Successfully queued test No CORS middleware tests
20:40:11.830:  jq: Test concluded - Module "kettle.tests.CORS.origin.config tests" Test name "CORS middleware custom origin tests": 14/14 passed - PASS
20:40:11.852:  Initializing the Express app
20:40:11.852:  Initializing the HTTP server
20:40:11.854:  Registering request handler {
    "type": "kettle.tests.noCORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:11.854:  Opening Kettle Server on port 8081
20:40:11.854:  Kettle Server 1y26uivy-6349 is listening on port 8081
20:40:11.855:  Sending a GET request to: http://127.0.0.1:8081/
20:40:11.866:  Invoking handler kettle.tests.noCORS.handler for route / with expectedGrade kettle.request.http
20:40:11.877:  Kettle server allocated request object with type kettle.tests.noCORS.handler
20:40:11.881:  Stopping Kettle Server 1y26uivy-6349 on port 8081
20:40:11.881:  Kettle Server 1y26uivy-6349 on port 8081 is stopped
20:40:11.918:  Successfully queued test Session tests
20:40:11.918:  jq: Test concluded - Module "kettle.tests.CORS.noCORS.config tests" Test name "No CORS middleware tests": 6/6 passed - PASS
20:40:11.950:  Initializing the Express app
20:40:11.950:  Initializing the HTTP server
20:40:11.952:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:40:11.952:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:40:11.952:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:40:11.952:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:40:11.952:  Opening Kettle Server on port 8081
20:40:11.953:  Kettle Server 1y26uivy-6526 is listening on port 8081
20:40:11.953:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:11.954:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:11.960:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:11.963:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:11.964:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:11.973:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:11.977:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:40:11.978:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:40:11.985:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:40:11.990:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:11.991:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:11.999:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:12.003:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:12.004:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:12.009:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:12.012:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:40:12.013:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:40:12.020:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:40:12.023:  Stopping Kettle Server 1y26uivy-6526 on port 8081
20:40:12.023:  Kettle Server 1y26uivy-6526 on port 8081 is stopped
20:40:12.050:  Successfully queued test WebSockets tests
20:40:12.050:  jq: Test concluded - Module "kettle.tests.session.config tests" Test name "Session tests": 24/24 passed - PASS
20:40:12.082:  Initializing the Express app
20:40:12.082:  Initializing the HTTP server
20:40:12.083:  Initializing the ws server
20:40:12.084:  Registering request handler {
    "type": "kettle.tests.ws.testSocket.handler",
    "route": "/socket_path"
}
20:40:12.084:  Registering request handler {
    "type": "kettle.tests.ws.testGet.handler",
    "route": "/"
}
20:40:12.084:  Registering request handler {
    "type": "kettle.tests.ws.testClose.handler",
    "route": "/close_path"
}
20:40:12.085:  Opening Kettle Server on port 8081
20:40:12.085:  Kettle Server 1y26uivy-6838 is listening on port 8081
20:40:12.085:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:12.088:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:12.095:  Kettle server allocated request object with type kettle.tests.ws.testSocket.handler
20:40:12.097:  Received WebSockets connection on path /socket_path
20:40:12.102:  kettle.test.request.ws client message{"success":true}
20:40:12.105:  kettle.test.request.ws client message{"success":true}
20:40:12.105:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.107:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.http
20:40:12.113:  Kettle server allocated request object with type kettle.tests.ws.testGet.handler
20:40:12.118:  Sending a GET request to: http://127.0.0.1:8081/socket_path
20:40:12.118:  kettle.test.request.ws closed, response code: 1005, reason: ""
20:40:12.119:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.http
20:40:12.125:  Kettle server allocated request object with type kettle.request.http.mismatch
20:40:12.128:  connecting ws.WebSocket to: ws://127.0.0.1:8081/ with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/"
}
20:40:12.129:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.ws
20:40:12.137:  Kettle server allocated request object with type kettle.request.ws.mismatch
20:40:12.140:  connecting ws.WebSocket to: ws://127.0.0.1:8081/close_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/close_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/close_path"
}
20:40:12.141:  Invoking handler kettle.tests.ws.testClose.handler for route /close_path with expectedGrade kettle.request.ws
20:40:12.148:  Kettle server allocated request object with type kettle.tests.ws.testClose.handler
20:40:12.150:  Received WebSockets connection on path /close_path
20:40:12.156:  kettle.test.request.ws closed, response code: 1000, reason: ""
20:40:12.157:  Stopping Kettle Server 1y26uivy-6838 on port 8081
20:40:12.157:  Kettle Server 1y26uivy-6838 on port 8081 is stopped
20:40:12.158:  kettle.test.request.ws client error{
    
}
20:40:12.159:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:12.198:  Successfully queued test WebSockets Session tests
20:40:12.199:  jq: Test concluded - Module "kettle.tests.webSockets.config tests" Test name "WebSockets tests": 17/17 passed - PASS
20:40:12.226:  Initializing the Express app
20:40:12.226:  Initializing the HTTP server
20:40:12.228:  Initializing the ws server
20:40:12.228:  Registering request handler {
    "type": "kettle.tests.session.ws.testSocket.handler",
    "route": "/socket_path"
}
20:40:12.229:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:40:12.229:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:40:12.229:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:40:12.229:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:40:12.229:  Opening Kettle Server on port 8081
20:40:12.230:  Kettle Server 1y26uivy-7145 is listening on port 8081
20:40:12.230:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:12.231:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:12.237:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:12.240:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:12.241:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:12.262:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:12.276:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:40:12.277:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:40:12.283:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:40:12.286:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:12.287:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:12.295:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:12.298:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        "Cookie": [
            "kettle.sid=s%3A-za_krK4IeRz4oz6IFVjU90echWUO60V.NqbWTNf%2F02GCPhdGAIzOUJyFzUBJnCLZlGuDTJ9AwBA; Path=/; HttpOnly"
        ]
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:12.299:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:12.309:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:40:12.312:  Received WebSockets connection on path /socket_path
20:40:12.315:  testSocket.receiveMessage got session {
    "cookie": {
        "path": "/",
        "_expires": null,
        "originalMaxAge": null,
        "httpOnly": true,
        "secure": false,
        "expires": [Synthetic property],
        "maxAge": [Synthetic property],
        "data": [Synthetic property],
        "serialize": [Synthetic property],
        "toJSON": [Synthetic property]
    },
    "token": "123"
}
20:40:12.317:  kettle.test.request.ws client message{"type":"midSuccess","payload":{"token":"123","success":true}}
20:40:12.317:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:12.318:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:12.327:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:40:12.330:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:12.330:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:12.336:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:12.338:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:40:12.339:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:40:12.346:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:40:12.350:  Stopping Kettle Server 1y26uivy-7145 on port 8081
20:40:12.350:  Kettle Server 1y26uivy-7145 on port 8081 is stopped
20:40:12.351:  kettle.test.request.ws client error{
    
}
20:40:12.352:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:12.385:  Successfully queued test Error tests I
20:40:12.385:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:12.385:  Failing to resume callback for request 1y26uivy-7323 which has already concluded
20:40:12.386:  jq: Test concluded - Module "kettle.tests.session.webSockets.config tests" Test name "WebSockets Session tests": 31/31 passed - PASS
20:40:12.429:  Initializing the Express app
20:40:12.429:  Initializing the HTTP server
20:40:12.432:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:12.432:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:12.432:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:12.433:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:12.433:  Opening Kettle Server on port 8081
20:40:12.433:  Kettle Server 1y26uivy-7496 is listening on port 8081
20:40:12.434:  FATAL ERROR: Uncaught exception: "Global Error Triggered".triggerError is not a function
TypeError: "Global Error Triggered".triggerError is not a function
    at kettle.tests.triggerGlobalErrorSync (/data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:15:778)
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:16:14
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:12.436:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.437:  Invoking handler kettle.tests.error.requestError for route / with expectedGrade kettle.request.http
20:40:12.449:  Kettle server allocated request object with type kettle.tests.error.requestError
20:40:12.449:  ASSERTION FAILED: Simulated assertion failed in request - this failure is expected: 
20:40:12.450:  Current activity: 
20:40:12.450:      while invoking invoker with name handleRequest and record {
    "func": undefined,
    "funcName": "fluid.fail",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "Simulated assertion failed in request - this failure is expected: "
    ],
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: 1y26uivy-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1y26uivy-7437.tests.configuration.server.app.requests.request
20:40:12.450:      while firing to listener to event named onHandle of component component { typeName: "kettle.tests.error.requestError id: 1y26uivy-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1y26uivy-7437.tests.configuration.server.app.requests.request
20:40:12.450:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.error.requestError id: 1y26uivy-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1y26uivy-7437.tests.configuration.server.app.requests.request
20:40:12.453:  kettle.tests.error.handleFullRequest forwarding error to express
20:40:12.453:  kettle.tests.server.upgradeError received error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:12.453:  kettle.tests.server.upgradeError throwing uncaught exception error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:12.453:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2781:25)
    at kettle.request.handleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:97:157)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.request.handleRequestTask (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:104:25)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.sequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:270:19)
    at kettle.request.sequenceRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:120:169)
    at kettle.request.initiateHandleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:132:530)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.concludeComponentInit (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1536:26)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2208:25
    at Array.forEach (<anonymous>)
    at localWorkflowTask (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2207:37)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2329:27)
    at fluid.tryCatch (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:241:20)
    at fluid.commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2314:11)
    at fluid.concludeAnyTreeTransaction (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1429:15)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.server.checkCreateRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:53:303)
    at fluid.componentConstructor.dispatcher (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:59:232)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:69:213
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at expressInit (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/init.js:40:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at query (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/query.js:45:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:174:3)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/application.js:174:10)
    at Server.app (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/express.js:39:9)
    at Server.emit (node:events:527:28)
    at parserOnIncoming (node:_http_server:993:12)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)
20:40:12.453:  Current activity: 
20:40:12.453:      while invoking invoker with name handleFullRequest and record {
    "func": undefined,
    "funcName": "kettle.tests.error.handleFullRequest",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": {
        "value": "NO_ARGUMENTS"
    },
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: 1y26uivy-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1y26uivy-7437.tests.configuration.server.app.requests.request
20:40:12.454:  ASSERTION FAILED: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
20:40:12.454:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:5 .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
Error: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:51:23)
    at that.complete (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:72:21)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:58:18)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:444
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:12.456:  Sending a GET request to: http://127.0.0.1:8081/errorCode
20:40:12.456:  Invoking handler kettle.tests.error.requestErrorCode.handler for route /errorCode with expectedGrade kettle.request.http
20:40:12.465:  Kettle server allocated request object with type kettle.tests.error.requestErrorCode.handler
20:40:12.468:  Stopping Kettle Server 1y26uivy-7496 on port 8081
20:40:12.469:  Kettle Server 1y26uivy-7496 on port 8081 is stopped
20:40:12.489:  Successfully queued test Error tests II
20:40:12.489:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests I": 4/4 passed - PASS
20:40:12.510:  Initializing the Express app
20:40:12.510:  Initializing the HTTP server
20:40:12.512:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:12.512:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:12.512:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:12.512:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:12.512:  Opening Kettle Server on port 8081
20:40:12.512:  Kettle Server 1y26uivy-7658 is listening on port 8081
20:40:12.513:  Sending a GET request to: http://127.0.0.1:8081/errorAsync
20:40:12.523:  Invoking handler kettle.tests.error.requestErrorAsync.handler for route /errorAsync with expectedGrade kettle.request.http
20:40:12.529:  Kettle server allocated request object with type kettle.tests.error.requestErrorAsync.handler
20:40:12.531:  FATAL ERROR: Uncaught exception: Uncharacterised error which should cause request failure
Error: Uncharacterised error which should cause request failure
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:13:1376
    at wrappedCallback (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:51:625)
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:12.533:  Stopping Kettle Server 1y26uivy-7658 on port 8081
20:40:12.534:  Kettle Server 1y26uivy-7658 on port 8081 is stopped
20:40:12.548:  Successfully queued test Plaintext response error test
20:40:12.548:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests II": 1/1 passed - PASS
20:40:12.569:  Initializing the Express app
20:40:12.570:  Initializing the HTTP server
20:40:12.571:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:12.571:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:12.571:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:12.571:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:12.572:  Opening Kettle Server on port 8081
20:40:12.572:  Kettle Server 1y26uivy-7796 is listening on port 8081
20:40:12.572:  Sending a GET request to: http://127.0.0.1:8081/plainRequestError
20:40:12.573:  Invoking handler kettle.tests.error.plainRequestError.handler for route /plainRequestError with expectedGrade kettle.request.http
20:40:12.579:  Kettle server allocated request object with type kettle.tests.error.plainRequestError.handler
20:40:12.582:  Stopping Kettle Server 1y26uivy-7796 on port 8081
20:40:12.582:  Kettle Server 1y26uivy-7796 on port 8081 is stopped
20:40:12.600:  Successfully queued test Bad config: missing handler test
20:40:12.600:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Plaintext response error test": 2/2 passed - PASS
20:40:12.623:  Initializing the Express app
20:40:12.623:  Initializing the HTTP server
20:40:12.625:  Registering request handler {
    "type": "kettle.tests.badRequest.missing.handler",
    "route": "/",
    "method": "get"
}
20:40:12.625:  Opening Kettle Server on port 8081
20:40:12.625:  Kettle Server 1y26uivy-7940 is listening on port 8081
20:40:12.626:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.626:  Invoking handler kettle.tests.badRequest.missing.handler for route / with expectedGrade kettle.request.http
20:40:12.627:  ASSERTION FAILED: Error in Kettle application definition - couldn't load handler kettle.tests.badRequest.missing.handler and gradeNames [] to a component derived from kettle.request - got defaults of undefined
20:40:12.628:  Stopping Kettle Server 1y26uivy-7940 on port 8081
20:40:12.628:  Kettle Server 1y26uivy-7940 on port 8081 is stopped
20:40:12.650:  Successfully queued test Bad config: missing handler type test
20:40:12.650:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:40:12.677:  Initializing the Express app
20:40:12.678:  Initializing the HTTP server
20:40:12.681:  Registering request handler {
    "type": null,
    "route": "/",
    "method": "get"
}
20:40:12.681:  Opening Kettle Server on port 8081
20:40:12.681:  Kettle Server 1y26uivy-8066 is listening on port 8081
20:40:12.682:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.696:  ASSERTION FAILED: Error in Kettle application definition - handler {
    "method": "get",
    "type": null,
    "route": "/",
    "keys": [],
    "regexp": {
        "keys": []
    }
} must have a request grade name registered as member "type"
20:40:12.698:  Stopping Kettle Server 1y26uivy-8066 on port 8081
20:40:12.698:  Kettle Server 1y26uivy-8066 on port 8081 is stopped
20:40:12.716:  Successfully queued test Bad config: missing handler test
20:40:12.716:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handlerType.config.mergedConfig tests" Test name "Bad config: missing handler type test": 4/4 passed - PASS
20:40:12.738:  Initializing the Express app
20:40:12.739:  Initializing the HTTP server
20:40:12.740:  Registering request handler {
    "type": "kettle.tests.badRequest.throwing.handler",
    "route": "/",
    "method": "get"
}
20:40:12.740:  Opening Kettle Server on port 8081
20:40:12.741:  Kettle Server 1y26uivy-8192 is listening on port 8081
20:40:12.741:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.742:  Invoking handler kettle.tests.badRequest.throwing.handler for route / with expectedGrade kettle.request.http
20:40:12.748:  Kettle server allocated request object with type kettle.tests.badRequest.throwing.handler
20:40:12.752:  Stopping Kettle Server 1y26uivy-8192 on port 8081
20:40:12.752:  Kettle Server 1y26uivy-8192 on port 8081 is stopped
20:40:12.770:  Successfully queued test Bad config: missing middleware test
20:40:12.770:  jq: Test concluded - Module "kettle.tests.badRequest.throwing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:40:12.792:  Initializing the Express app
20:40:12.793:  Initializing the HTTP server
20:40:12.794:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.missing.handler",
    "route": "/",
    "method": "get"
}
20:40:12.795:  Opening Kettle Server on port 8081
20:40:12.795:  Kettle Server 1y26uivy-8339 is listening on port 8081
20:40:12.795:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.796:  Invoking handler kettle.tests.badRequest.middleware.missing.handler for route / with expectedGrade kettle.request.http
20:40:12.803:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.missing.handler
20:40:12.803:  ASSERTION FAILED: Couldn't resolve reference {middlewareHolder}.missingMiddleware from member "middleware" of record {
    "middleware": "{middlewareHolder}.missingMiddleware"
} to a middleware component for a kettle.tests.badRequest.middleware.missing.handler requestMiddleware  entry: got undefined
20:40:12.803:  Current activity: 
20:40:12.803:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.missing.handler id: 1y26uivy-8410" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.missing.handler"]} at path serverEnvironment-1y26uivy-8285.tests.configuration.server.app.requests.request
20:40:12.805:  Unhandled promise rejection: {
    "isError": true,
    "message": "Couldn't resolve reference {middlewareHolder}.missingMiddleware from member \"middleware\" of record "
}
20:40:12.806:  Stopping Kettle Server 1y26uivy-8339 on port 8081
20:40:12.806:  Kettle Server 1y26uivy-8339 on port 8081 is stopped
20:40:12.824:  Successfully queued test Bad config: bad middleware test
20:40:12.825:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.missing.config.mergedConfig tests" Test name "Bad config: missing middleware test": 4/4 passed - PASS
20:40:12.847:  Initializing the Express app
20:40:12.848:  Initializing the HTTP server
20:40:12.849:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.bad.handler",
    "route": "/",
    "method": "get"
}
20:40:12.849:  Opening Kettle Server on port 8081
20:40:12.849:  Kettle Server 1y26uivy-8485 is listening on port 8081
20:40:12.850:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.859:  Invoking handler kettle.tests.badRequest.middleware.bad.handler for route / with expectedGrade kettle.request.http
20:40:12.868:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.bad.handler
20:40:12.868:  ASSERTION FAILED: Middleware component {
    "typeName": "kettle.tests.badRequest.bad.middleware",
    "id": "1y26uivy-8557",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "kettle.middleware",
            "kettle.plainMiddleware",
            "kettle.tests.badRequest.bad.middleware"
        ],
        "events": {
            "onCreate": "promise",
            "onDestroy": "promise",
            "afterDestroy": "promise"
        },
        "invokers": {
            "handle": {
                "func": undefined,
                "funcName": "kettle.plainMiddleware.resolve",
                "listener": undefined,
                "this": undefined,
                "method": undefined,
                "changePath": undefined,
                "value": undefined,
                "componentSource": "kettle.plainMiddleware",
                "args": [
                    "{that}",
                    "{arguments}.0",
                    " .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] with type kettle.tests.badRequest.bad.middleware is improperly configured - an option named "middleware" of function type is required - got undefined
20:40:12.868:  Current activity: 
20:40:12.868:      while invoking invoker with name handle and record {
    "func": undefined,
    "funcName": "kettle.plainMiddleware.resolve",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "componentSource": "kettle.plainMiddleware",
    "args": [
        "{that}",
        "{arguments}.0",
        "{plainMiddleware}.options.asyncMiddleware"
    ]
} holding component component { typeName: "kettle.tests.badRequest.bad.middleware id: 1y26uivy-8557" gradeNames: ["kettle.middleware","kettle.plainMiddleware","kettle.tests.badRequest.bad.middleware"]} at path serverEnvironment-1y26uivy-8431.tests.configuration.server.app.requests.request.badMiddleware
20:40:12.868:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.bad.handler id: 1y26uivy-8556" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.bad.handler"]} at path serverEnvironment-1y26uivy-8431.tests.configuration.server.app.requests.request
20:40:12.871:  Unhandled promise rejection: {
    "isError": true,
    "message": "Middleware component "
}
20:40:12.872:  Stopping Kettle Server 1y26uivy-8485 on port 8081
20:40:12.872:  Kettle Server 1y26uivy-8485 on port 8081 is stopped
20:40:12.890:  Successfully queued test Bad config: static middleware with no path test
20:40:12.890:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.bad.config.mergedConfig tests" Test name "Bad config: bad middleware test": 4/4 passed - PASS
20:40:12.913:  Initializing the Express app
20:40:12.913:  Initializing the HTTP server
20:40:12.915:  Registering request handler {
    "type": "kettle.tests.badRequest.static.nopath.handler",
    "route": "/",
    "method": "get"
}
20:40:12.915:  Opening Kettle Server on port 8081
20:40:12.915:  Kettle Server 1y26uivy-8635 is listening on port 8081
20:40:12.916:  Sending a GET request to: http://127.0.0.1:8081/
20:40:12.916:  Invoking handler kettle.tests.badRequest.static.nopath.handler for route / with expectedGrade kettle.request.http
20:40:12.923:  ASSERTION FAILED: Static middleware must have a root path configured to serve options - got undefined
20:40:12.923:  Current activity: 
20:40:12.923:      while constructing component of type kettle.middleware.static at path serverEnvironment-1y26uivy-8581.tests.configuration.server.app.requests.request.badStatic
20:40:12.925:  Stopping Kettle Server 1y26uivy-8635 on port 8081
20:40:12.925:  Kettle Server 1y26uivy-8635 on port 8081 is stopped
20:40:12.953:  Successfully queued test Bad request: bad URL-encoded request parameter
20:40:12.953:  jq: Test concluded - Module "kettle.tests.badRequest.static.nopath.config.mergedConfig tests" Test name "Bad config: static middleware with no path test": 3/3 passed - PASS
20:40:12.984:  Initializing the Express app
20:40:12.984:  Initializing the HTTP server
20:40:12.987:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/route/:key",
    "method": "get"
}
20:40:12.987:  Opening Kettle Server on port 8081
20:40:12.988:  Kettle Server 1y26uivy-8788 is listening on port 8081
20:40:12.989:  Sending a GET request to: http://127.0.0.1:8081/route/%ZZ
20:40:12.992:  Stopping Kettle Server 1y26uivy-8788 on port 8081
20:40:12.992:  Kettle Server 1y26uivy-8788 on port 8081 is stopped
20:40:13.010:  Successfully queued test Good request: bad URL-encoded request parameter
20:40:13.010:  jq: Test concluded - Module "kettle.tests.badRequest.badURL.config.mergedConfig tests" Test name "Bad request: bad URL-encoded request parameter": 3/3 passed - PASS
20:40:13.033:  Initializing the Express app
20:40:13.034:  Initializing the HTTP server
20:40:13.036:  Registering request handler {
    "type": "kettle.tests.goodRequest.emptyParameter.handler",
    "route": "/route/:key?",
    "method": "get"
}
20:40:13.037:  Opening Kettle Server on port 8081
20:40:13.037:  Kettle Server 1y26uivy-8914 is listening on port 8081
20:40:13.038:  Sending a GET request to: http://127.0.0.1:8081/route
20:40:13.048:  Invoking handler kettle.tests.goodRequest.emptyParameter.handler for route /route/:key? with expectedGrade kettle.request.http
20:40:13.055:  Kettle server allocated request object with type kettle.tests.goodRequest.emptyParameter.handler
20:40:13.058:  Stopping Kettle Server 1y26uivy-8914 on port 8081
20:40:13.058:  Kettle Server 1y26uivy-8914 on port 8081 is stopped
20:40:13.084:  Successfully queued test Good request: double handling test
20:40:13.084:  jq: Test concluded - Module "kettle.tests.goodRequest.emptyParameter.config.mergedConfig tests" Test name "Good request: bad URL-encoded request parameter": 2/2 passed - PASS
20:40:13.106:  Initializing the Express app
20:40:13.106:  Initializing the HTTP server
20:40:13.108:  Registering request handler {
    "type": "kettle.tests.goodRequest.doubleResponse.handler",
    "route": "/",
    "method": "get"
}
20:40:13.108:  Opening Kettle Server on port 8081
20:40:13.108:  Kettle Server 1y26uivy-9055 is listening on port 8081
20:40:13.108:  Sending a GET request to: http://127.0.0.1:8081/
20:40:13.109:  Invoking handler kettle.tests.goodRequest.doubleResponse.handler for route / with expectedGrade kettle.request.http
20:40:13.116:  Kettle server allocated request object with type kettle.tests.goodRequest.doubleResponse.handler
20:40:13.116:  Error in forwarding result {
    "message": "Second response"
} to promise resolve: promise has already received resolve
20:40:13.119:  Stopping Kettle Server 1y26uivy-9055 on port 8081
20:40:13.119:  Kettle Server 1y26uivy-9055 on port 8081 is stopped
20:40:13.138:  Successfully queued test Good request: options request
20:40:13.138:  jq: Test concluded - Module "kettle.tests.goodRequest.doubleResponse.config.mergedConfig tests" Test name "Good request: double handling test": 2/2 passed - PASS
20:40:13.162:  Initializing the Express app
20:40:13.162:  Initializing the HTTP server
20:40:13.165:  Registering request handler {
    "type": "kettle.tests.goodRequest.options.handler",
    "method": "options",
    "route": "/"
}
20:40:13.165:  Opening Kettle Server on port 8081
20:40:13.166:  Kettle Server 1y26uivy-9199 is listening on port 8081
20:40:13.166:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:40:13.167:  Invoking handler kettle.tests.goodRequest.options.handler for route / with expectedGrade kettle.request.http
20:40:13.175:  Kettle server allocated request object with type kettle.tests.goodRequest.options.handler
20:40:13.178:  Stopping Kettle Server 1y26uivy-9199 on port 8081
20:40:13.178:  Kettle Server 1y26uivy-9199 on port 8081 is stopped
20:40:13.197:  Successfully queued test Good request: mismatched route
20:40:13.197:  jq: Test concluded - Module "kettle.tests.goodRequest.options.config.mergedConfig tests" Test name "Good request: options request": 2/2 passed - PASS
20:40:13.229:  Initializing the Express app
20:40:13.230:  Initializing the HTTP server
20:40:13.233:  Skipping empty handler with key testHandler for app { typeName: "kettle.app id: 1y26uivy-9346" gradeNames: ["kettle.app"]}
20:40:13.233:  Opening Kettle Server on port 8081
20:40:13.233:  Kettle Server 1y26uivy-9343 is listening on port 8081
20:40:13.234:  Sending a GET request to: http://127.0.0.1:8081/route
20:40:13.250:  Kettle server getDispatcher found no matching handlers, continuing
20:40:13.252:  Stopping Kettle Server 1y26uivy-9343 on port 8081
20:40:13.252:  Kettle Server 1y26uivy-9343 on port 8081 is stopped
20:40:13.308:  Successfully queued test Good request: gradeNames for handler
20:40:13.308:  jq: Test concluded - Module "kettle.tests.goodRequest.mismatchRoute.config.mergedConfig tests" Test name "Good request: mismatched route": 2/2 passed - PASS
20:40:13.340:  Initializing the Express app
20:40:13.340:  Initializing the HTTP server
20:40:13.341:  Registering request handler {
    "type": "kettle.tests.goodRequest.gradeNames.handler",
    "gradeNames": "kettle.tests.goodRequest.gradeNames.mixin",
    "method": "get",
    "route": "/"
}
20:40:13.342:  Opening Kettle Server on port 8081
20:40:13.342:  Kettle Server 1y26uivy-9463 is listening on port 8081
20:40:13.342:  Sending a GET request to: http://127.0.0.1:8081/
20:40:13.343:  Invoking handler kettle.tests.goodRequest.gradeNames.handler for route / with expectedGrade kettle.request.http
20:40:13.352:  Kettle server allocated request object with type kettle.tests.goodRequest.gradeNames.handler
20:40:13.356:  Stopping Kettle Server 1y26uivy-9463 on port 8081
20:40:13.356:  Kettle Server 1y26uivy-9463 on port 8081 is stopped
20:40:13.382:  Successfully queued test Simple MultiConfig Test
20:40:13.383:  jq: Test concluded - Module "kettle.tests.goodRequest.gradeNames.config.mergedConfig tests" Test name "Good request: gradeNames for handler": 2/2 passed - PASS
20:40:13.442:  Initializing the Express app
20:40:13.443:  Initializing the HTTP server
20:40:13.444:  Initializing the Express app
20:40:13.445:  Initializing the HTTP server
20:40:13.447:  Registering request handler {
    "type": "kettle.tests.multiConfig.target.get.handler",
    "route": "/",
    "method": "get"
}
20:40:13.447:  Opening Kettle Server on port 8088
20:40:13.447:  Registering request handler {
    "type": "kettle.tests.multiConfig.source.get.handler",
    "route": "/",
    "method": "get"
}
20:40:13.447:  Opening Kettle Server on port 8081
20:40:13.448:  Kettle Server 1y26uivy-9605 is listening on port 8088
20:40:13.448:  Kettle Server 1y26uivy-9604 is listening on port 8081
20:40:13.448:  Sending a GET request to: http://127.0.0.1:8081/
20:40:13.449:  Invoking handler kettle.tests.multiConfig.source.get.handler for route / with expectedGrade kettle.request.http
20:40:13.462:  Kettle server allocated request object with type kettle.tests.multiConfig.source.get.handler
20:40:13.463:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8088",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8088/",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:13.465:  Invoking handler kettle.tests.multiConfig.target.get.handler for route / with expectedGrade kettle.request.http
20:40:13.471:  Kettle server allocated request object with type kettle.tests.multiConfig.target.get.handler
20:40:13.488:  Stopping Kettle Server 1y26uivy-9604 on port 8081
20:40:13.488:  Stopping Kettle Server 1y26uivy-9605 on port 8088
20:40:13.488:  Kettle Server 1y26uivy-9604 on port 8081 is stopped
20:40:13.488:  Kettle Server 1y26uivy-9605 on port 8088 is stopped
20:40:13.510:  Successfully queued test Static hosting tests
20:40:13.511:  jq: Test concluded - Module "kettle.tests.multiConfig.head.config tests" Test name "Simple MultiConfig Test": 2/2 passed - PASS
20:40:13.544:  Initializing the Express app
20:40:13.545:  Initializing the HTTP server
20:40:13.546:  Registering request handler {
    "type": "kettle.tests.static.handler",
    "prefix": "/infusion",
    "route": "/*",
    "method": "get"
}
20:40:13.546:  Opening Kettle Server on port 8081
20:40:13.547:  Kettle Server 1y26uivy-9870 is listening on port 8081
20:40:13.547:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:40:13.548:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:40:13.549:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:13.555:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:13.560:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:13.566:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:13.575:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.jsonx
20:40:13.576:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:13.582:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:13.589:  Stopping Kettle Server 1y26uivy-9870 on port 8081
20:40:13.589:  Kettle Server 1y26uivy-9870 on port 8081 is stopped
20:40:13.625:  Successfully queued test Multer tests
20:40:13.625:  jq: Test concluded - Module "kettle.tests.static.config tests" Test name "Static hosting tests": 9/9 passed - PASS
20:40:13.679:  Initializing the Express app
20:40:13.680:  Initializing the HTTP server
20:40:13.681:  Registering request handler {
    "type": "kettle.tests.multer.handler.single",
    "route": "/multer-single",
    "method": "post"
}
20:40:13.681:  Registering request handler {
    "type": "kettle.tests.multer.handler.array",
    "route": "/multer-array",
    "method": "post"
}
20:40:13.681:  Registering request handler {
    "type": "kettle.tests.multer.handler.fields",
    "route": "/multer-fields",
    "method": "post"
}
20:40:13.681:  Registering request handler {
    "type": "kettle.tests.multer.handler.imageOnly",
    "route": "/multer-image-only",
    "method": "post"
}
20:40:13.681:  Registering request handler {
    "type": "kettle.tests.multer.handler.diskStorage",
    "route": "/multer-disk-storage",
    "method": "post"
}
20:40:13.691:  Opening Kettle Server on port 8081
20:40:13.691:  Kettle Server 1y26uivy-10111 is listening on port 8081
20:40:13.692:  Sending a POST request to: http://127.0.0.1:8081/multer-single
20:40:13.695:  Invoking handler kettle.tests.multer.handler.single for route /multer-single with expectedGrade kettle.request.http
20:40:13.702:  Kettle server allocated request object with type kettle.tests.multer.handler.single
20:40:13.714:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:40:13.716:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:40:13.723:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:40:13.732:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:40:13.733:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:40:13.739:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:40:13.748:  Sending a POST request to: http://127.0.0.1:8081/multer-fields
20:40:13.750:  Invoking handler kettle.tests.multer.handler.fields for route /multer-fields with expectedGrade kettle.request.http
20:40:13.757:  Kettle server allocated request object with type kettle.tests.multer.handler.fields
20:40:13.769:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:40:13.770:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:40:13.777:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:40:13.787:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:40:13.788:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:40:13.794:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:40:13.800:  Sending a POST request to: http://127.0.0.1:8081/multer-disk-storage
20:40:13.802:  Invoking handler kettle.tests.multer.handler.diskStorage for route /multer-disk-storage with expectedGrade kettle.request.http
20:40:13.809:  Kettle server allocated request object with type kettle.tests.multer.handler.diskStorage
20:40:13.816:  Stopping Kettle Server 1y26uivy-10111 on port 8081
20:40:13.816:  Kettle Server 1y26uivy-10111 on port 8081 is stopped
20:40:13.835:  Successfully queued test Asynchronous request startup: basic fetch test
20:40:13.835:  jq: Test concluded - Module "kettle.tests.multer.config tests" Test name "Multer tests": 29/29 passed - PASS
20:40:13.857:  Initializing the Express app
20:40:13.857:  Initializing the HTTP server
20:40:13.859:  Registering request handler {
    "type": "kettle.tests.asyncRequest.handler",
    "route": "/",
    "method": "get"
}
20:40:13.859:  Opening Kettle Server on port 8081
20:40:13.859:  Kettle Server 1y26uivy-10444 is listening on port 8081
20:40:13.860:  Sending a GET request to: http://127.0.0.1:8081/
20:40:13.860:  Invoking handler kettle.tests.asyncRequest.handler for route / with expectedGrade kettle.request.http
20:40:13.881:  Kettle server allocated request object with type kettle.tests.asyncRequest.handler
20:40:13.885:  Stopping Kettle Server 1y26uivy-10444 on port 8081
20:40:13.886:  Kettle Server 1y26uivy-10444 on port 8081 is stopped
20:40:13.908:  Successfully queued test Request abort test
20:40:13.908:  jq: Test concluded - Module "kettle.tests.asyncRequest.handler.config.mergedConfig tests" Test name "Asynchronous request startup: basic fetch test": 2/2 passed - PASS
20:40:13.929:  Initializing the Express app
20:40:13.930:  Initializing the HTTP server
20:40:13.931:  Registering request handler {
    "type": "kettle.tests.requestAbort.handler",
    "route": "/",
    "method": "get"
}
20:40:13.931:  Opening Kettle Server on port 8081
20:40:13.932:  Kettle Server 1y26uivy-10616 is listening on port 8081
20:40:13.932:  Sending a GET request to: http://127.0.0.1:8081/
20:40:13.933:  Invoking handler kettle.tests.requestAbort.handler for route / with expectedGrade kettle.request.http
20:40:13.945:  Kettle server allocated request object with type kettle.tests.requestAbort.handler
20:40:14.449:  Error marking thread to request 1y26uivy-10685 which has already been destroyed
20:40:14.951:  Stopping Kettle Server 1y26uivy-10616 on port 8081
20:40:14.951:  Kettle Server 1y26uivy-10616 on port 8081 is stopped
20:40:14.964:  jq: Test concluded - Module "kettle.tests.requestAbort.config.mergedConfig tests" Test name "Request abort test": 2/2 passed - PASS
20:40:14.966:  jq: ***************
20:40:14.966:  jq: All tests concluded: 358/358 total passed in 8559ms - PASS
20:40:14.966:  jq: ***************
************* run test done *************
kettle is testing ./Variants/session/variant2/session
/data/js-variants/multee
************* npm unlink module *************

changed 2 packages, and audited 949 packages in 2s

109 packages are looking for funding
  run `npm fund` for details

20 vulnerabilities (4 moderate, 14 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible, run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

up to date, audited 1 package in 103ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

changed 1 package, and audited 3 packages in 732ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************
************* npm link module done *************
************* start run test *************

> kettle@2.3.0 pretest
> npx rimraf coverage/*


> kettle@2.3.0 test
> nyc --reporter=html node tests/all-tests.js

Infusion at path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion is at top level 
20:40:20.892:  Registering module subbifier from path /data/js-variants/multee/
20:40:20.893:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle/
20:40:20.893:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/
20:40:20.893:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:20.900:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/node-jqunit/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:21.317:  Successfully queued test JSON line number diagnostic test
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:21.469:  Registering module fluid-pouchdb from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb
20:40:21.601:  Registering module fluid-express from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/fluid-express
20:40:21.947:  ASSERTION FAILED: kettle.JSON.parse called on non-string object 3
20:40:21.952:  Unhandled promise rejection: {
    "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING'"
}
20:40:21.966:  jq: Test concluded - Test name "kettle JSON parsing error tests": 2/2 passed - PASS
20:40:21.967:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:40:21.980:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON": 2/2 passed - PASS
20:40:21.995:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON": 1/1 passed - PASS
20:40:21.996:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:40:22.009:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON5": 2/2 passed - PASS
20:40:22.023:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON5": 1/1 passed - PASS
20:40:22.037:  jq: Test concluded - Test name "kettle.JSON.readFileSync of nonexistent file": 1/1 passed - PASS
20:40:22.064:  Initializing the Express app
20:40:22.066:  Initializing the HTTP server
20:40:22.069:  Opening Kettle Server on port 8081
20:40:22.071:  Kettle Server or99a8g-176 is listening on port 8081
20:40:22.071:  Stopping Kettle Server or99a8g-176 on port 8081
20:40:22.072:  Kettle Server or99a8g-176 on port 8081 is stopped
20:40:22.085:  jq: Test concluded - Test name "Kettle server initialisation test": 1/1 passed - PASS
20:40:22.085:  Loader running configuration name kettle.tests.HTTPMethods.config
20:40:22.120:  Initializing the Express app
20:40:22.121:  Initializing the HTTP server
20:40:22.125:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:22.126:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:22.126:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:22.126:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:22.127:  Opening Kettle Server on port 8081
20:40:22.133:  Sending a GET request to: http://127.0.0.1:8081/
20:40:22.136:  Kettle Server or99a8g-241 is listening on port 8081
20:40:22.142:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:22.149:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:22.157:  Stopping Kettle Server or99a8g-241 on port 8081
20:40:22.157:  Kettle Server or99a8g-241 on port 8081 is stopped
20:40:22.171:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and args": 2/2 passed - PASS
20:40:22.171:  Loader running configuration name kettle.tests.HTTPMethods.config
20:40:22.211:  Initializing the Express app
20:40:22.212:  Initializing the HTTP server
20:40:22.215:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:22.215:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:22.216:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:22.216:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:22.216:  Opening Kettle Server on port 8081
20:40:22.219:  Sending a GET request to: http://127.0.0.1:8081/
20:40:22.220:  Kettle Server or99a8g-351 is listening on port 8081
20:40:22.229:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:22.234:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:22.236:  Stopping Kettle Server or99a8g-351 on port 8081
20:40:22.237:  Kettle Server or99a8g-351 on port 8081 is stopped
20:40:22.250:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and NODE_ENV": 2/2 passed - PASS
20:40:22.251:  ASSERTION FAILED: No configuration specified in either 1st command line argument, NODE_ENV or internal default
20:40:22.264:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config name": 1/1 passed - PASS
20:40:22.264:  ASSERTION FAILED: Config path must be specified as 1st command line argument
20:40:22.278:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config path": 1/1 passed - PASS
20:40:22.282:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:40:22.298:  Successfully queued test JSON line number diagnostic test
20:40:22.299:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:40:22.312:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "GPII-2147: Testing that localhost is properly replaced by 127.0.0.1 in prepareRequestOptions": 1/1 passed - PASS
20:40:22.340:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource basic init tests": 8/8 passed - PASS
20:40:22.350:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "x-custom-header": "x-custom-value",
        "x-custom-header2": "x-custom-value2"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": 999,
    "pathname": "/path",
    "search": "",
    "family": 4,
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:999/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:22.364:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:40:22.371:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "pathname": "/device",
    "search": "",
    "url": "http://localhost:998/device",
    "port": 998,
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:22.384:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:40:22.392:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:22.399:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:22.413:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-73 censoring test": 6/6 passed - PASS
20:40:22.438:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-38 derived writable dataSource test": 1/1 passed - PASS
20:40:22.460:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Reading file in formenc encoding": 1/1 passed - PASS
20:40:22.481:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Writing file in formenc encoding": 1/1 passed - PASS
20:40:22.487:  ASSERTION FAILED: Cannot operate file dataSource {
    "typeName": "kettle.tests.dataSource.fileWithoutPath",
    "id": "or99a8g-628",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "fluid.contextAware",
            "fluid.dataSource",
            "kettle.dataSource.file",
            "kettle.tests.dataSource.fileWithoutPath"
        ],
        "contextAwareness": {
            "writable": {
                "checks": {
                    "writableValue": {
                        "contextValue": "{fluid.dataSource}.options.writable",
                        "gradeNames": "{fluid.dataSource}.options.writableGrade"
                    }
                }
            }
        },
        "writable": false,
        "components": {
            "encoding": {
                "0": {
                    "type": "fluid.dataSource.encoding.JSON"
                },
                "length": 1
            }
        },
        "events": {
             .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] without an option named "path"
20:40:22.487:  Current activity: 
20:40:22.488:      while firing to listener to event named onRead of component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: or99a8g-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-or99a8g-628
20:40:22.488:      while invoking invoker with name get and record {
    "func": undefined,
    "funcName": "fluid.dataSource.get",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "{that}",
        "{arguments}.0",
        "{arguments}.1"
    ],
    "componentSource": "fluid.dataSource"
} holding component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: or99a8g-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-or99a8g-628
20:40:22.501:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource without path": 2/2 passed - PASS
20:40:22.534:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Attached URLResolver tests": 2/2 passed - PASS
20:40:22.555:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present environment substitution": 1/1 passed - PASS
20:40:22.572:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent environment substitution": 1/1 passed - PASS
20:40:22.590:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present file substitution": 1/1 passed - PASS
20:40:22.609:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent file substitution": 1/1 passed - PASS
20:40:22.626:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test args substitution": 1/1 passed - PASS
20:40:22.630:  Registering module test-module from path /data/js-variants/multee/Clients/session/kettle/tests/configs/node_modules/test-module
20:40:22.661:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults with types": 14/14 passed - PASS
20:40:22.677:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults without type": 4/4 passed - PASS
20:40:22.695:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config with "loadConfig" directive": 2/2 passed - PASS
20:40:22.709:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test parsing command line arguments": 4/4 passed - PASS
20:40:22.710:  ASSERTION FAILED: Error in config file at path undefined - key "distributeOptions" found, where the only legal options are type, options, loadConfigs, mergeConfigs, require
20:40:22.724:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Config with bad top-level keys": 1/1 passed - PASS
20:40:22.726:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:40:22.745:  Successfully queued test Simple get test
20:40:22.746:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:40:22.763:  Successfully queued test Simple get test
20:40:22.763:  jq: Test concluded - Module "1. Testing file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:22.787:  Successfully queued test Simple get test
20:40:22.787:  jq: Test concluded - Module "2. Testing file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:22.806:  Successfully queued test Simple get test
20:40:22.806:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:22.823:  Successfully queued test Simple get test
20:40:22.823:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:22.840:  Successfully queued test Simple get test
20:40:22.840:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:40:22.856:  Successfully queued test Simple get test
20:40:22.856:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response" Test name "Simple get test": 1/1 passed - PASS
20:40:22.873:  Successfully queued test Simple get test
20:40:22.881:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:22.903:  Successfully queued test Simple get test
20:40:22.903:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:22.919:  Successfully queued test Simple get test
20:40:22.919:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:22.937:  Successfully queued test Simple get test
20:40:22.937:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:22.954:  Successfully queued test Simple get test
20:40:22.955:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:22.975:  Successfully queued test Simple set test
20:40:22.975:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:22.994:  Successfully queued test Simple set test
20:40:22.995:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:40:23.021:  Successfully queued test Simple set test
20:40:23.022:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding" Test name "Simple set test": 1/1 passed - PASS
20:40:23.046:  Successfully queued test Simple set test
20:40:23.054:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:40:23.074:  Successfully queued test Simple set test
20:40:23.074:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:40:23.094:  Successfully queued test Simple set test
20:40:23.094:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:40:23.119:  Successfully queued test Simple get test
20:40:23.119:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:40:23.136:  Successfully queued test Simple get test
20:40:23.136:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:23.154:  Successfully queued test Simple get test
20:40:23.155:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:23.171:  Successfully queued test Simple get test
20:40:23.171:  jq: Test concluded - Module "1. Testing file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.207:  Successfully queued test Simple get test
20:40:23.207:  jq: Test concluded - Module "2. Testing file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.225:  Successfully queued test Simple get test
20:40:23.225:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.247:  Successfully queued test Simple get test
20:40:23.254:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.271:  Successfully queued test Simple get test
20:40:23.271:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.288:  Successfully queued test Simple get test
20:40:23.288:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.304:  Successfully queued test Simple get test
20:40:23.304:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.322:  Successfully queued test Simple get test
20:40:23.322:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.339:  Successfully queued test Simple get test
20:40:23.339:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.360:  Successfully queued test Simple get test
20:40:23.360:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.381:  Successfully queued test Simple get test
20:40:23.381:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.403:  Successfully queued test Simple set test
20:40:23.403:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.421:  Successfully queued test Simple set test
20:40:23.428:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:23.448:  Successfully queued test Simple set test
20:40:23.448:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:23.468:  Successfully queued test Simple set test
20:40:23.469:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:23.496:  Successfully queued test Simple set test
20:40:23.496:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:23.521:  Successfully queued test Simple set test
20:40:23.521:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:23.539:  Successfully queued test Simple get test
20:40:23.539:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:23.555:  Successfully queued test Simple get test
20:40:23.555:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.595:  Initializing the Express app
20:40:23.596:  Initializing the HTTP server
20:40:23.598:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:23.598:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.redirectingRequestHandler",
    "route": "/redirect",
    "method": "get"
}
20:40:23.599:  Opening Kettle Server on port 8081
20:40:23.599:  Successfully queued test Simple get test
20:40:23.599:  Kettle Server or99a8g-2853 is listening on port 8081
20:40:23.607:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:23.609:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/redirect",
    "search": "",
    "url": "http://localhost:8081/redirect",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:23.612:  Invoking handler kettle.tests.dataSource.URL.redirectingRequestHandler for route /redirect with expectedGrade kettle.request.http
20:40:23.624:  Kettle server allocated request object with type kettle.tests.dataSource.URL.redirectingRequestHandler
20:40:23.631:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:23.641:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:23.645:  Stopping Kettle Server or99a8g-2853 on port 8081
20:40:23.646:  Kettle Server or99a8g-2853 on port 8081 is stopped
20:40:23.697:  Initializing the Express app
20:40:23.697:  Initializing the HTTP server
20:40:23.700:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:23.700:  Opening Kettle Server on port 8081
20:40:23.701:  Successfully queued test Resource model is initialised
20:40:23.701:  Kettle Server or99a8g-3005 is listening on port 8081
20:40:23.709:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "dataSource": {
        "typeName": "kettle.dataSource.URL",
        "id": "or99a8g-3007",
        "lifecycleStatus": "treeConstructed",
        "destroy": { Function
            
        },
        "options": {
            "gradeNames": [
                "fluid.component",
                "fluid.contextAware",
                "fluid.dataSource",
                "fluid.dataSource.URL",
                "kettle.dataSource.URL"
            ],
            "contextAwareness": {
                "writable": {
                    "checks": {
                        "writableValue": {
                            "contextValue": "{fluid.dataSource}.options.writable",
                            "gradeNames": "{fluid.dataSource}.options.writableGrade"
                        }
     .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:23.711:  jq: Test concluded - Module "KETTLE-89: DataSource support for redirects" Test name "Simple get test": 3/3 passed - PASS
20:40:23.720:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:23.737:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:23.752:  Stopping Kettle Server or99a8g-3005 on port 8081
20:40:23.764:  Kettle Server or99a8g-3005 on port 8081 is stopped
20:40:23.844:  Initializing the Express app
20:40:23.845:  Initializing the HTTP server
20:40:23.847:  Registering request handler {
    "type": "kettle.request.http",
    "route": "/",
    "method": "get"
}
20:40:23.847:  Opening Kettle Server on port 8081
20:40:23.848:  Successfully queued test Simple get test
20:40:23.848:  Kettle Server or99a8g-3171 is listening on port 8081
20:40:23.848:  jq: Test concluded - Module "DataSource during init" Test name "Resource model is initialised": 2/2 passed - PASS
20:40:23.850:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notfound",
    "search": "?search",
    "url": "http://(SENSITIVE):(SENSITIVE)@localhost:8081/notfound?search",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:23.852:  Kettle server getDispatcher found no matching handlers, continuing
20:40:23.855:  Stopping Kettle Server or99a8g-3171 on port 8081
20:40:23.855:  Kettle Server or99a8g-3171 on port 8081 is stopped
20:40:23.889:  Initializing the Express app
20:40:23.889:  Initializing the HTTP server
20:40:23.890:  Initializing the HTTPS server
20:40:23.941:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:23.941:  Opening Kettle Server on port 8081
20:40:23.941:  Successfully queued test Simple get test
20:40:23.942:  Kettle Server or99a8g-3284 is listening on port 8081
20:40:23.942:  jq: Test concluded - Module "w. Testing URL dataSource with sensitive info in URL" Test name "Simple get test": 4/4 passed - PASS
20:40:23.943:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "https:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "https://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:23.950:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:23.955:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:23.958:  Stopping Kettle Server or99a8g-3284 on port 8081
20:40:23.959:  Kettle Server or99a8g-3284 on port 8081 is stopped
20:40:23.998:  Initializing the Express app
20:40:23.998:  Initializing the HTTP server
20:40:24.000:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:24.001:  Opening Kettle Server on port 8081
20:40:24.002:  Successfully queued test Simple get test
20:40:24.002:  Kettle Server or99a8g-3418 is listening on port 8081
20:40:24.002:  jq: Test concluded - Module "HTTPS dataSource test" Test name "Simple get test": 2/2 passed - PASS
20:40:24.004:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.005:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:40:24.012:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:40:24.015:  Stopping Kettle Server or99a8g-3418 on port 8081
20:40:24.015:  Kettle Server or99a8g-3418 on port 8081 is stopped
20:40:24.049:  Initializing the Express app
20:40:24.050:  Initializing the HTTP server
20:40:24.052:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:24.052:  Opening Kettle Server on port 8081
20:40:24.053:  Successfully queued test Simple get test
20:40:24.053:  Kettle Server or99a8g-3554 is listening on port 8081
20:40:24.053:  jq: Test concluded - Module "x. Testing URL dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:24.054:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.061:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:40:24.066:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:40:24.067:  Stopping Kettle Server or99a8g-3554 on port 8081
20:40:24.068:  Kettle Server or99a8g-3554 on port 8081 is stopped
20:40:24.115:  Initializing the Express app
20:40:24.115:  Initializing the HTTP server
20:40:24.117:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:24.118:  Opening Kettle Server on port 8081
20:40:24.118:  Successfully queued test Simple get test
20:40:24.119:  Kettle Server or99a8g-3691 is listening on port 8081
20:40:24.119:  jq: Test concluded - Module "y. Testing CouchDB dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:24.120:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notFound",
    "search": "",
    "url": "http://localhost:8081/notFound",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.121:  Kettle server getDispatcher found no matching handlers, continuing
20:40:24.123:  Stopping Kettle Server or99a8g-3691 on port 8081
20:40:24.123:  Kettle Server or99a8g-3691 on port 8081 is stopped
20:40:24.161:  Initializing the Express app
20:40:24.161:  Initializing the HTTP server
20:40:24.164:  Registering request handler {
    "method": "put",
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/"
}
20:40:24.164:  Opening Kettle Server on port 8081
20:40:24.164:  Successfully queued test Simple set test
20:40:24.164:  Kettle Server or99a8g-3804 is listening on port 8081
20:40:24.165:  jq: Test concluded - Module "z. Testing HTTP dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:24.166:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 24
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:24.167:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:24.173:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:24.183:  Stopping Kettle Server or99a8g-3804 on port 8081
20:40:24.184:  Kettle Server or99a8g-3804 on port 8081 is stopped
20:40:24.202:  Successfully queued test Simple get test
20:40:24.202:  jq: Test concluded - Module "HTTPS dataSource set with special chars test" Test name "Simple set test": 2/2 passed - PASS
20:40:24.218:  express pouchdb instance 'or99a8g-4002' initalizing...
20:40:24.219:  Creating directory '/tmp/or99a8g-4002' for express pouchdb instance 'or99a8g-4002'...
20:40:24.266:  express baseDir: '/tmp/or99a8g-4002'...
20:40:24.268:  Express server listening on port 6789
20:40:24.268:  Express started...
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/@the-t-in-rtf/pouchdb-all-dbs/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:24.440:  Data loaded for database 'testFile'...
20:40:24.442:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT",
    "url": "http://localhost:6789/testFile/test_id"
}
20:40:24.491:  Successfully queued test Simple get test
20:40:24.491:  Express stopped...
20:40:24.491:  jq: Test concluded - Module "3. Testing CouchDB URL DataSource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:24.506:  express pouchdb instance 'or99a8g-4156' initalizing...
20:40:24.507:  Creating directory '/tmp/or99a8g-4156' for express pouchdb instance 'or99a8g-4156'...
20:40:24.528:  express baseDir: '/tmp/or99a8g-4156'...
20:40:24.530:  Express server listening on port 6789
20:40:24.530:  Express started...
20:40:24.549:  Data loaded for database 'testFile'...
20:40:24.551:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": false,
    "writeMethod": "PUT"
}
20:40:24.591:  Successfully queued test Simple get test
20:40:24.592:  Express stopped...
20:40:24.592:  jq: Test concluded - Module "5. Testing CouchDB URL datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:40:24.606:  express pouchdb instance 'or99a8g-4293' initalizing...
20:40:24.607:  Creating directory '/tmp/or99a8g-4293' for express pouchdb instance 'or99a8g-4293'...
20:40:24.627:  express baseDir: '/tmp/or99a8g-4293'...
20:40:24.628:  Express server listening on port 6789
20:40:24.628:  Express started...
20:40:24.646:  Data loaded for database 'testFile'...
20:40:24.648:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": true,
    "writeMethod": "PUT"
}
20:40:24.692:  Successfully queued test Simple set test
20:40:24.693:  Express stopped...
20:40:24.693:  jq: Test concluded - Module "5a. Testing CouchDB URL datasource with missing file and notFoundIsEmpty" Test name "Simple get test": 1/1 passed - PASS
20:40:24.707:  express pouchdb instance 'or99a8g-4437' initalizing...
20:40:24.707:  Creating directory '/tmp/or99a8g-4437' for express pouchdb instance 'or99a8g-4437'...
20:40:24.723:  express baseDir: '/tmp/or99a8g-4437'...
20:40:24.724:  Express server listening on port 6789
20:40:24.724:  Express started...
20:40:24.743:  Data loaded for database 'testFile'...
20:40:24.745:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.771:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 47
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:24.776:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.804:  Successfully queued test Simple set test
20:40:24.804:  Express stopped...
20:40:24.804:  jq: Test concluded - Module "14. Testing CouchDB URL datasource with HTTP - set" Test name "Simple set test": 1/1 passed - PASS
20:40:24.816:  express pouchdb instance 'or99a8g-4600' initalizing...
20:40:24.817:  Creating directory '/tmp/or99a8g-4600' for express pouchdb instance 'or99a8g-4600'...
20:40:24.833:  express baseDir: '/tmp/or99a8g-4600'...
20:40:24.834:  Express server listening on port 6789
20:40:24.834:  Express started...
20:40:24.852:  Data loaded for database 'testFile'...
20:40:24.854:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.891:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 119
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:24.896:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:24.965:  Initializing the Express app
20:40:24.965:  Initializing the HTTP server
20:40:24.967:  Initializing the Express app
20:40:24.967:  Initializing the HTTP server
20:40:24.969:  Registering request handler {
    "type": "kettle.tests.serverPair.getRelay",
    "route": "/relay",
    "method": "get"
}
20:40:24.969:  Registering request handler {
    "type": "kettle.tests.serverPair.postRelay",
    "route": "/relay",
    "method": "post"
}
20:40:24.969:  Registering request handler {
    "type": "kettle.tests.serverPair.putRelay",
    "route": "/relay",
    "method": "put"
}
20:40:24.969:  Registering request handler {
    "type": "kettle.tests.serverPair.errorRelay",
    "route": "/errorRelay",
    "method": "get"
}
20:40:24.970:  Opening Kettle Server on port 8086
20:40:24.970:  Registering request handler {
    "type": "kettle.tests.serverPair.getEndpoint",
    "route": "/endpoint",
    "method": "get"
}
20:40:24.970:  Registering request handler {
    "type": "kettle.tests.serverPair.postEndpoint",
    "route": "/endpoint",
    "method": "post"
}
20:40:24.970:  Registering request handler {
    "type": "kettle.tests.serverPair.putEndpoint",
    "route": "/endpoint",
    "method": "put"
}
20:40:24.970:  Registering request handler {
    "type": "kettle.tests.serverPair.errorEndpoint",
    "route": "/errorEndpoint",
    "method": "get"
}
20:40:24.970:  Opening Kettle Server on port 8087
20:40:24.971:  Successfully queued test Access GET request
20:40:24.971:  Successfully queued test Access SET request via POST
20:40:24.971:  Successfully queued test Access SET request via PUT
20:40:24.971:  Successfully queued test Relay error state via GET
20:40:24.971:  Kettle Server or99a8g-4695 is listening on port 8086
20:40:24.971:  Kettle Server or99a8g-4693 is listening on port 8087
20:40:24.971:  Express stopped...
20:40:24.972:  jq: Test concluded - Module "15. Testing CouchDB URL datasource with HTTP existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:40:24.972:  Sending a GET request to: http://127.0.0.1:8086/relay
20:40:24.973:  Invoking handler kettle.tests.serverPair.getRelay for route /relay with expectedGrade kettle.request.http
20:40:24.979:  Kettle server allocated request object with type kettle.tests.serverPair.getRelay
20:40:24.980:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "get",
    "writeMethod": "POST"
}
20:40:24.997:  Invoking handler kettle.tests.serverPair.getEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:25.004:  Kettle server allocated request object with type kettle.tests.serverPair.getEndpoint
20:40:25.006:  ENDPOINT Resolving with value 42
20:40:25.022:  jq: Test concluded - Module "Cross server datasource access" Test name "Access GET request": 3/3 passed - PASS
20:40:25.022:  Sending a POST request to: http://127.0.0.1:8086/relay
20:40:25.023:  Invoking handler kettle.tests.serverPair.postRelay for route /relay with expectedGrade kettle.request.http
20:40:25.029:  Kettle server allocated request object with type kettle.tests.serverPair.postRelay
20:40:25.030:  DataSource Issuing HTTP request with options {
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "set",
    "writeMethod": "POST"
}
20:40:25.032:  Invoking handler kettle.tests.serverPair.postEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:25.038:  Kettle server allocated request object with type kettle.tests.serverPair.postEndpoint
20:40:25.039:  ENDPOINT Resolving with value {
    "payload": "post return value"
}
20:40:25.056:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via POST": 4/4 passed - PASS
20:40:25.056:  Sending a PUT request to: http://127.0.0.1:8086/relay
20:40:25.057:  Invoking handler kettle.tests.serverPair.putRelay for route /relay with expectedGrade kettle.request.http
20:40:25.063:  Kettle server allocated request object with type kettle.tests.serverPair.putRelay
20:40:25.064:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "writeMethod": "PUT",
    "operation": "set"
}
20:40:25.065:  Invoking handler kettle.tests.serverPair.putEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:25.071:  Kettle server allocated request object with type kettle.tests.serverPair.putEndpoint
20:40:25.072:  ENDPOINT Resolving with value {
    "payload": "put return value"
}
20:40:25.089:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via PUT": 4/4 passed - PASS
20:40:25.090:  Sending a GET request to: http://127.0.0.1:8086/errorRelay
20:40:25.091:  Invoking handler kettle.tests.serverPair.errorRelay for route /errorRelay with expectedGrade kettle.request.http
20:40:25.097:  Kettle server allocated request object with type kettle.tests.serverPair.errorRelay
20:40:25.098:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/errorEndpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/errorEndpoint",
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:25.099:  Invoking handler kettle.tests.serverPair.errorEndpoint for route /errorEndpoint with expectedGrade kettle.request.http
20:40:25.105:  Kettle server allocated request object with type kettle.tests.serverPair.errorEndpoint
20:40:25.109:  Stopping Kettle Server or99a8g-4693 on port 8087
20:40:25.110:  Stopping Kettle Server or99a8g-4695 on port 8086
20:40:25.110:  Kettle Server or99a8g-4693 on port 8087 is stopped
20:40:25.111:  Kettle Server or99a8g-4695 on port 8086 is stopped
20:40:25.128:  Successfully queued test HTTPMethods GET test
20:40:25.129:  jq: Test concluded - Module "Cross server datasource access" Test name "Relay error state via GET": 2/2 passed - PASS
20:40:25.172:  Initializing the Express app
20:40:25.172:  Initializing the HTTP server
20:40:25.174:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:25.174:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:25.174:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:25.174:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:25.174:  Opening Kettle Server on port 8081
20:40:25.175:  Kettle Server or99a8g-5127 is listening on port 8081
20:40:25.175:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.176:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:25.182:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:25.184:  Stopping Kettle Server or99a8g-5127 on port 8081
20:40:25.184:  Kettle Server or99a8g-5127 on port 8081 is stopped
20:40:25.199:  Successfully queued test HTTPMethods POST test
20:40:25.199:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods GET test": 2/2 passed - PASS
20:40:25.220:  Initializing the Express app
20:40:25.220:  Initializing the HTTP server
20:40:25.222:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:25.222:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:25.222:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:25.222:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:25.222:  Opening Kettle Server on port 8081
20:40:25.222:  Kettle Server or99a8g-5264 is listening on port 8081
20:40:25.223:  Sending a POST request to: http://127.0.0.1:8081/
20:40:25.224:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:25.230:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:25.232:  Stopping Kettle Server or99a8g-5264 on port 8081
20:40:25.232:  Kettle Server or99a8g-5264 on port 8081 is stopped
20:40:25.247:  Successfully queued test HTTPMethods PUT test
20:40:25.248:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods POST test": 2/2 passed - PASS
20:40:25.268:  Initializing the Express app
20:40:25.269:  Initializing the HTTP server
20:40:25.270:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:25.270:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:25.270:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:25.270:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:25.270:  Opening Kettle Server on port 8081
20:40:25.271:  Kettle Server or99a8g-5401 is listening on port 8081
20:40:25.271:  Sending a PUT request to: http://127.0.0.1:8081/
20:40:25.282:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:25.287:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:25.289:  Stopping Kettle Server or99a8g-5401 on port 8081
20:40:25.289:  Kettle Server or99a8g-5401 on port 8081 is stopped
20:40:25.310:  Successfully queued test HTTPMethods PUT & POST in sequence test
20:40:25.311:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test": 2/2 passed - PASS
20:40:25.331:  Initializing the Express app
20:40:25.332:  Initializing the HTTP server
20:40:25.333:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:25.334:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:25.334:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:25.334:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:25.334:  Opening Kettle Server on port 8081
20:40:25.334:  Kettle Server or99a8g-5554 is listening on port 8081
20:40:25.335:  Sending a POST request to: http://127.0.0.1:8081/
20:40:25.336:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:25.341:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:25.344:  Sending a PUT request to: http://127.0.0.1:8081/
20:40:25.344:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:25.350:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:25.352:  Sending a POST request to: http://127.0.0.1:8081/
20:40:25.353:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:25.358:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:25.360:  Stopping Kettle Server or99a8g-5554 on port 8081
20:40:25.360:  Kettle Server or99a8g-5554 on port 8081 is stopped
20:40:25.375:  Successfully queued test HTTPMethods PUT test with alternate response status code
20:40:25.375:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT & POST in sequence test": 6/6 passed - PASS
20:40:25.396:  Initializing the Express app
20:40:25.396:  Initializing the HTTP server
20:40:25.398:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:25.398:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:25.398:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:25.398:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:25.398:  Opening Kettle Server on port 8081
20:40:25.398:  Kettle Server or99a8g-5735 is listening on port 8081
20:40:25.399:  Sending a PUT request to: http://127.0.0.1:8081/201
20:40:25.400:  Invoking handler kettle.tests.HTTPMethods.put201.handler for route /201 with expectedGrade kettle.request.http
20:40:25.406:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put201.handler
20:40:25.408:  Stopping Kettle Server or99a8g-5735 on port 8081
20:40:25.408:  Kettle Server or99a8g-5735 on port 8081 is stopped
20:40:25.427:  Successfully queued test CORS middleware tests
20:40:25.427:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test with alternate response status code": 3/3 passed - PASS
20:40:25.448:  Initializing the Express app
20:40:25.448:  Initializing the HTTP server
20:40:25.450:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:25.450:  Opening Kettle Server on port 8081
20:40:25.450:  Kettle Server or99a8g-5880 is listening on port 8081
20:40:25.451:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.462:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:25.468:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:25.470:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:40:25.471:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:25.476:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:25.479:  Stopping Kettle Server or99a8g-5880 on port 8081
20:40:25.479:  Kettle Server or99a8g-5880 on port 8081 is stopped
20:40:25.494:  Successfully queued test CORS middleware no credential tests
20:40:25.494:  jq: Test concluded - Module "kettle.tests.CORS.config tests" Test name "CORS middleware tests": 11/11 passed - PASS
20:40:25.518:  Initializing the Express app
20:40:25.518:  Initializing the HTTP server
20:40:25.519:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:25.520:  Opening Kettle Server on port 8081
20:40:25.520:  Kettle Server or99a8g-6041 is listening on port 8081
20:40:25.520:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.521:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:25.526:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:25.528:  Stopping Kettle Server or99a8g-6041 on port 8081
20:40:25.529:  Kettle Server or99a8g-6041 on port 8081 is stopped
20:40:25.546:  Successfully queued test CORS middleware custom origin tests
20:40:25.546:  jq: Test concluded - Module "kettle.tests.CORS.noCred.config tests" Test name "CORS middleware no credential tests": 7/7 passed - PASS
20:40:25.569:  Initializing the Express app
20:40:25.569:  Initializing the HTTP server
20:40:25.571:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:25.571:  Opening Kettle Server on port 8081
20:40:25.571:  Kettle Server or99a8g-6188 is listening on port 8081
20:40:25.572:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.572:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:25.578:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:25.580:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.581:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:25.586:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:25.588:  Stopping Kettle Server or99a8g-6188 on port 8081
20:40:25.588:  Kettle Server or99a8g-6188 on port 8081 is stopped
20:40:25.604:  Successfully queued test No CORS middleware tests
20:40:25.605:  jq: Test concluded - Module "kettle.tests.CORS.origin.config tests" Test name "CORS middleware custom origin tests": 14/14 passed - PASS
20:40:25.626:  Initializing the Express app
20:40:25.627:  Initializing the HTTP server
20:40:25.628:  Registering request handler {
    "type": "kettle.tests.noCORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:25.628:  Opening Kettle Server on port 8081
20:40:25.629:  Kettle Server or99a8g-6349 is listening on port 8081
20:40:25.630:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.641:  Invoking handler kettle.tests.noCORS.handler for route / with expectedGrade kettle.request.http
20:40:25.652:  Kettle server allocated request object with type kettle.tests.noCORS.handler
20:40:25.655:  Stopping Kettle Server or99a8g-6349 on port 8081
20:40:25.656:  Kettle Server or99a8g-6349 on port 8081 is stopped
20:40:25.693:  Successfully queued test Session tests
20:40:25.693:  jq: Test concluded - Module "kettle.tests.CORS.noCORS.config tests" Test name "No CORS middleware tests": 6/6 passed - PASS
20:40:25.724:  Initializing the Express app
20:40:25.725:  Initializing the HTTP server
20:40:25.727:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:40:25.727:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:40:25.727:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:40:25.727:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:40:25.727:  Opening Kettle Server on port 8081
20:40:25.728:  Kettle Server or99a8g-6526 is listening on port 8081
20:40:25.728:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:25.729:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:25.735:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:25.737:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:25.738:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:25.747:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:25.752:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:40:25.753:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:40:25.759:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:40:25.764:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:25.765:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:25.772:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:25.776:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:25.777:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:25.782:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:25.784:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:40:25.785:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:40:25.792:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:40:25.795:  Stopping Kettle Server or99a8g-6526 on port 8081
20:40:25.795:  Kettle Server or99a8g-6526 on port 8081 is stopped
20:40:25.821:  Successfully queued test WebSockets tests
20:40:25.821:  jq: Test concluded - Module "kettle.tests.session.config tests" Test name "Session tests": 24/24 passed - PASS
20:40:25.844:  Initializing the Express app
20:40:25.854:  Initializing the HTTP server
20:40:25.855:  Initializing the ws server
20:40:25.856:  Registering request handler {
    "type": "kettle.tests.ws.testSocket.handler",
    "route": "/socket_path"
}
20:40:25.856:  Registering request handler {
    "type": "kettle.tests.ws.testGet.handler",
    "route": "/"
}
20:40:25.856:  Registering request handler {
    "type": "kettle.tests.ws.testClose.handler",
    "route": "/close_path"
}
20:40:25.856:  Opening Kettle Server on port 8081
20:40:25.857:  Kettle Server or99a8g-6838 is listening on port 8081
20:40:25.857:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:25.860:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:25.867:  Kettle server allocated request object with type kettle.tests.ws.testSocket.handler
20:40:25.868:  Received WebSockets connection on path /socket_path
20:40:25.873:  kettle.test.request.ws client message{"success":true}
20:40:25.875:  kettle.test.request.ws client message{"success":true}
20:40:25.875:  Sending a GET request to: http://127.0.0.1:8081/
20:40:25.877:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.http
20:40:25.883:  Kettle server allocated request object with type kettle.tests.ws.testGet.handler
20:40:25.887:  Sending a GET request to: http://127.0.0.1:8081/socket_path
20:40:25.887:  kettle.test.request.ws closed, response code: 1005, reason: ""
20:40:25.888:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.http
20:40:25.894:  Kettle server allocated request object with type kettle.request.http.mismatch
20:40:25.897:  connecting ws.WebSocket to: ws://127.0.0.1:8081/ with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/"
}
20:40:25.898:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.ws
20:40:25.905:  Kettle server allocated request object with type kettle.request.ws.mismatch
20:40:25.907:  connecting ws.WebSocket to: ws://127.0.0.1:8081/close_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/close_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/close_path"
}
20:40:25.908:  Invoking handler kettle.tests.ws.testClose.handler for route /close_path with expectedGrade kettle.request.ws
20:40:25.916:  Kettle server allocated request object with type kettle.tests.ws.testClose.handler
20:40:25.916:  Received WebSockets connection on path /close_path
20:40:25.922:  kettle.test.request.ws closed, response code: 1000, reason: ""
20:40:25.922:  Stopping Kettle Server or99a8g-6838 on port 8081
20:40:25.923:  Kettle Server or99a8g-6838 on port 8081 is stopped
20:40:25.924:  kettle.test.request.ws client error{
    
}
20:40:25.924:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:25.965:  Successfully queued test WebSockets Session tests
20:40:25.966:  jq: Test concluded - Module "kettle.tests.webSockets.config tests" Test name "WebSockets tests": 17/17 passed - PASS
20:40:26.039:  Initializing the Express app
20:40:26.040:  Initializing the HTTP server
20:40:26.043:  Initializing the ws server
20:40:26.044:  Registering request handler {
    "type": "kettle.tests.session.ws.testSocket.handler",
    "route": "/socket_path"
}
20:40:26.044:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:40:26.044:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:40:26.044:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:40:26.044:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:40:26.045:  Opening Kettle Server on port 8081
20:40:26.045:  Kettle Server or99a8g-7145 is listening on port 8081
20:40:26.046:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:26.047:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:26.057:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:26.060:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:26.062:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:26.076:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:26.090:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:40:26.091:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:40:26.096:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:40:26.099:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:26.100:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:26.108:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:26.111:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        "Cookie": [
            "kettle.sid=s%3AukWbXnEP9-rdJs4OODI8RX_9han6UzXE.8%2B3Ko6c3SYW%2Fw1s8xMYfQ0ye%2F5Cn%2BeHIgs%2BW4%2Ba1APo; Path=/; HttpOnly"
        ]
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:26.112:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:26.122:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:40:26.123:  Received WebSockets connection on path /socket_path
20:40:26.126:  testSocket.receiveMessage got session {
    "cookie": {
        "path": "/",
        "_expires": null,
        "originalMaxAge": null,
        "httpOnly": true,
        "secure": false,
        "expires": [Synthetic property],
        "maxAge": [Synthetic property],
        "data": [Synthetic property],
        "serialize": [Synthetic property],
        "toJSON": [Synthetic property]
    },
    "token": "123"
}
20:40:26.127:  kettle.test.request.ws client message{"type":"midSuccess","payload":{"token":"123","success":true}}
20:40:26.128:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:26.129:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:26.137:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:40:26.139:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:26.140:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:26.145:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:26.147:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:40:26.148:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:40:26.154:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:40:26.157:  Stopping Kettle Server or99a8g-7145 on port 8081
20:40:26.157:  Kettle Server or99a8g-7145 on port 8081 is stopped
20:40:26.157:  kettle.test.request.ws client error{
    
}
20:40:26.158:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:26.184:  Successfully queued test Error tests I
20:40:26.184:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:26.184:  Failing to resume callback for request or99a8g-7323 which has already concluded
20:40:26.184:  jq: Test concluded - Module "kettle.tests.session.webSockets.config tests" Test name "WebSockets Session tests": 31/31 passed - PASS
20:40:26.212:  Initializing the Express app
20:40:26.213:  Initializing the HTTP server
20:40:26.216:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:26.216:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:26.216:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:26.216:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:26.216:  Opening Kettle Server on port 8081
20:40:26.217:  Kettle Server or99a8g-7496 is listening on port 8081
20:40:26.218:  FATAL ERROR: Uncaught exception: "Global Error Triggered".triggerError is not a function
TypeError: "Global Error Triggered".triggerError is not a function
    at kettle.tests.triggerGlobalErrorSync (/data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:15:778)
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:16:14
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:26.219:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.220:  Invoking handler kettle.tests.error.requestError for route / with expectedGrade kettle.request.http
20:40:26.232:  Kettle server allocated request object with type kettle.tests.error.requestError
20:40:26.232:  ASSERTION FAILED: Simulated assertion failed in request - this failure is expected: 
20:40:26.232:  Current activity: 
20:40:26.232:      while invoking invoker with name handleRequest and record {
    "func": undefined,
    "funcName": "fluid.fail",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "Simulated assertion failed in request - this failure is expected: "
    ],
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: or99a8g-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-or99a8g-7437.tests.configuration.server.app.requests.request
20:40:26.232:      while firing to listener to event named onHandle of component component { typeName: "kettle.tests.error.requestError id: or99a8g-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-or99a8g-7437.tests.configuration.server.app.requests.request
20:40:26.232:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.error.requestError id: or99a8g-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-or99a8g-7437.tests.configuration.server.app.requests.request
20:40:26.235:  kettle.tests.error.handleFullRequest forwarding error to express
20:40:26.235:  kettle.tests.server.upgradeError received error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:26.235:  kettle.tests.server.upgradeError throwing uncaught exception error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:26.235:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2781:25)
    at kettle.request.handleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:97:157)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.request.handleRequestTask (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:104:25)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.sequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:270:19)
    at kettle.request.sequenceRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:120:169)
    at kettle.request.initiateHandleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:132:530)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.concludeComponentInit (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1536:26)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2208:25
    at Array.forEach (<anonymous>)
    at localWorkflowTask (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2207:37)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2329:27)
    at fluid.tryCatch (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:241:20)
    at fluid.commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2314:11)
    at fluid.concludeAnyTreeTransaction (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1429:15)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.server.checkCreateRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:53:303)
    at fluid.componentConstructor.dispatcher (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:59:232)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:69:213
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at expressInit (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/init.js:40:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at query (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/query.js:45:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:174:3)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/application.js:174:10)
    at Server.app (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/express.js:39:9)
    at Server.emit (node:events:527:28)
    at parserOnIncoming (node:_http_server:993:12)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)
20:40:26.236:  Current activity: 
20:40:26.236:      while invoking invoker with name handleFullRequest and record {
    "func": undefined,
    "funcName": "kettle.tests.error.handleFullRequest",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": {
        "value": "NO_ARGUMENTS"
    },
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: or99a8g-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-or99a8g-7437.tests.configuration.server.app.requests.request
20:40:26.236:  ASSERTION FAILED: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
20:40:26.237:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:5 .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
Error: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:51:23)
    at that.complete (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:72:21)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:58:18)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:444
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:26.239:  Sending a GET request to: http://127.0.0.1:8081/errorCode
20:40:26.240:  Invoking handler kettle.tests.error.requestErrorCode.handler for route /errorCode with expectedGrade kettle.request.http
20:40:26.249:  Kettle server allocated request object with type kettle.tests.error.requestErrorCode.handler
20:40:26.251:  Stopping Kettle Server or99a8g-7496 on port 8081
20:40:26.251:  Kettle Server or99a8g-7496 on port 8081 is stopped
20:40:26.272:  Successfully queued test Error tests II
20:40:26.272:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests I": 4/4 passed - PASS
20:40:26.299:  Initializing the Express app
20:40:26.300:  Initializing the HTTP server
20:40:26.302:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:26.303:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:26.303:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:26.303:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:26.303:  Opening Kettle Server on port 8081
20:40:26.303:  Kettle Server or99a8g-7658 is listening on port 8081
20:40:26.304:  Sending a GET request to: http://127.0.0.1:8081/errorAsync
20:40:26.315:  Invoking handler kettle.tests.error.requestErrorAsync.handler for route /errorAsync with expectedGrade kettle.request.http
20:40:26.321:  Kettle server allocated request object with type kettle.tests.error.requestErrorAsync.handler
20:40:26.322:  FATAL ERROR: Uncaught exception: Uncharacterised error which should cause request failure
Error: Uncharacterised error which should cause request failure
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:13:1376
    at wrappedCallback (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:51:625)
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:26.324:  Stopping Kettle Server or99a8g-7658 on port 8081
20:40:26.324:  Kettle Server or99a8g-7658 on port 8081 is stopped
20:40:26.339:  Successfully queued test Plaintext response error test
20:40:26.339:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests II": 1/1 passed - PASS
20:40:26.359:  Initializing the Express app
20:40:26.360:  Initializing the HTTP server
20:40:26.361:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:26.361:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:26.361:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:26.361:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:26.361:  Opening Kettle Server on port 8081
20:40:26.362:  Kettle Server or99a8g-7796 is listening on port 8081
20:40:26.362:  Sending a GET request to: http://127.0.0.1:8081/plainRequestError
20:40:26.363:  Invoking handler kettle.tests.error.plainRequestError.handler for route /plainRequestError with expectedGrade kettle.request.http
20:40:26.369:  Kettle server allocated request object with type kettle.tests.error.plainRequestError.handler
20:40:26.371:  Stopping Kettle Server or99a8g-7796 on port 8081
20:40:26.371:  Kettle Server or99a8g-7796 on port 8081 is stopped
20:40:26.393:  Successfully queued test Bad config: missing handler test
20:40:26.393:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Plaintext response error test": 2/2 passed - PASS
20:40:26.419:  Initializing the Express app
20:40:26.419:  Initializing the HTTP server
20:40:26.421:  Registering request handler {
    "type": "kettle.tests.badRequest.missing.handler",
    "route": "/",
    "method": "get"
}
20:40:26.421:  Opening Kettle Server on port 8081
20:40:26.421:  Kettle Server or99a8g-7940 is listening on port 8081
20:40:26.422:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.422:  Invoking handler kettle.tests.badRequest.missing.handler for route / with expectedGrade kettle.request.http
20:40:26.423:  ASSERTION FAILED: Error in Kettle application definition - couldn't load handler kettle.tests.badRequest.missing.handler and gradeNames [] to a component derived from kettle.request - got defaults of undefined
20:40:26.424:  Stopping Kettle Server or99a8g-7940 on port 8081
20:40:26.424:  Kettle Server or99a8g-7940 on port 8081 is stopped
20:40:26.445:  Successfully queued test Bad config: missing handler type test
20:40:26.445:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:40:26.472:  Initializing the Express app
20:40:26.473:  Initializing the HTTP server
20:40:26.476:  Registering request handler {
    "type": null,
    "route": "/",
    "method": "get"
}
20:40:26.476:  Opening Kettle Server on port 8081
20:40:26.476:  Kettle Server or99a8g-8066 is listening on port 8081
20:40:26.477:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.491:  ASSERTION FAILED: Error in Kettle application definition - handler {
    "method": "get",
    "type": null,
    "route": "/",
    "keys": [],
    "regexp": {
        "keys": []
    }
} must have a request grade name registered as member "type"
20:40:26.493:  Stopping Kettle Server or99a8g-8066 on port 8081
20:40:26.493:  Kettle Server or99a8g-8066 on port 8081 is stopped
20:40:26.511:  Successfully queued test Bad config: missing handler test
20:40:26.511:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handlerType.config.mergedConfig tests" Test name "Bad config: missing handler type test": 4/4 passed - PASS
20:40:26.533:  Initializing the Express app
20:40:26.533:  Initializing the HTTP server
20:40:26.535:  Registering request handler {
    "type": "kettle.tests.badRequest.throwing.handler",
    "route": "/",
    "method": "get"
}
20:40:26.535:  Opening Kettle Server on port 8081
20:40:26.535:  Kettle Server or99a8g-8192 is listening on port 8081
20:40:26.536:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.536:  Invoking handler kettle.tests.badRequest.throwing.handler for route / with expectedGrade kettle.request.http
20:40:26.542:  Kettle server allocated request object with type kettle.tests.badRequest.throwing.handler
20:40:26.545:  Stopping Kettle Server or99a8g-8192 on port 8081
20:40:26.545:  Kettle Server or99a8g-8192 on port 8081 is stopped
20:40:26.563:  Successfully queued test Bad config: missing middleware test
20:40:26.563:  jq: Test concluded - Module "kettle.tests.badRequest.throwing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:40:26.585:  Initializing the Express app
20:40:26.586:  Initializing the HTTP server
20:40:26.587:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.missing.handler",
    "route": "/",
    "method": "get"
}
20:40:26.587:  Opening Kettle Server on port 8081
20:40:26.587:  Kettle Server or99a8g-8339 is listening on port 8081
20:40:26.588:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.589:  Invoking handler kettle.tests.badRequest.middleware.missing.handler for route / with expectedGrade kettle.request.http
20:40:26.595:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.missing.handler
20:40:26.595:  ASSERTION FAILED: Couldn't resolve reference {middlewareHolder}.missingMiddleware from member "middleware" of record {
    "middleware": "{middlewareHolder}.missingMiddleware"
} to a middleware component for a kettle.tests.badRequest.middleware.missing.handler requestMiddleware  entry: got undefined
20:40:26.595:  Current activity: 
20:40:26.595:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.missing.handler id: or99a8g-8410" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.missing.handler"]} at path serverEnvironment-or99a8g-8285.tests.configuration.server.app.requests.request
20:40:26.597:  Unhandled promise rejection: {
    "isError": true,
    "message": "Couldn't resolve reference {middlewareHolder}.missingMiddleware from member \"middleware\" of record "
}
20:40:26.598:  Stopping Kettle Server or99a8g-8339 on port 8081
20:40:26.598:  Kettle Server or99a8g-8339 on port 8081 is stopped
20:40:26.616:  Successfully queued test Bad config: bad middleware test
20:40:26.616:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.missing.config.mergedConfig tests" Test name "Bad config: missing middleware test": 4/4 passed - PASS
20:40:26.639:  Initializing the Express app
20:40:26.639:  Initializing the HTTP server
20:40:26.641:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.bad.handler",
    "route": "/",
    "method": "get"
}
20:40:26.641:  Opening Kettle Server on port 8081
20:40:26.641:  Kettle Server or99a8g-8485 is listening on port 8081
20:40:26.642:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.651:  Invoking handler kettle.tests.badRequest.middleware.bad.handler for route / with expectedGrade kettle.request.http
20:40:26.659:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.bad.handler
20:40:26.659:  ASSERTION FAILED: Middleware component {
    "typeName": "kettle.tests.badRequest.bad.middleware",
    "id": "or99a8g-8557",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "kettle.middleware",
            "kettle.plainMiddleware",
            "kettle.tests.badRequest.bad.middleware"
        ],
        "events": {
            "onCreate": "promise",
            "onDestroy": "promise",
            "afterDestroy": "promise"
        },
        "invokers": {
            "handle": {
                "func": undefined,
                "funcName": "kettle.plainMiddleware.resolve",
                "listener": undefined,
                "this": undefined,
                "method": undefined,
                "changePath": undefined,
                "value": undefined,
                "componentSource": "kettle.plainMiddleware",
                "args": [
                    "{that}",
                    "{arguments}.0",
                    "{ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] with type kettle.tests.badRequest.bad.middleware is improperly configured - an option named "middleware" of function type is required - got undefined
20:40:26.659:  Current activity: 
20:40:26.659:      while invoking invoker with name handle and record {
    "func": undefined,
    "funcName": "kettle.plainMiddleware.resolve",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "componentSource": "kettle.plainMiddleware",
    "args": [
        "{that}",
        "{arguments}.0",
        "{plainMiddleware}.options.asyncMiddleware"
    ]
} holding component component { typeName: "kettle.tests.badRequest.bad.middleware id: or99a8g-8557" gradeNames: ["kettle.middleware","kettle.plainMiddleware","kettle.tests.badRequest.bad.middleware"]} at path serverEnvironment-or99a8g-8431.tests.configuration.server.app.requests.request.badMiddleware
20:40:26.660:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.bad.handler id: or99a8g-8556" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.bad.handler"]} at path serverEnvironment-or99a8g-8431.tests.configuration.server.app.requests.request
20:40:26.661:  Unhandled promise rejection: {
    "isError": true,
    "message": "Middleware component "
}
20:40:26.662:  Stopping Kettle Server or99a8g-8485 on port 8081
20:40:26.662:  Kettle Server or99a8g-8485 on port 8081 is stopped
20:40:26.680:  Successfully queued test Bad config: static middleware with no path test
20:40:26.680:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.bad.config.mergedConfig tests" Test name "Bad config: bad middleware test": 4/4 passed - PASS
20:40:26.702:  Initializing the Express app
20:40:26.703:  Initializing the HTTP server
20:40:26.704:  Registering request handler {
    "type": "kettle.tests.badRequest.static.nopath.handler",
    "route": "/",
    "method": "get"
}
20:40:26.704:  Opening Kettle Server on port 8081
20:40:26.704:  Kettle Server or99a8g-8635 is listening on port 8081
20:40:26.705:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.706:  Invoking handler kettle.tests.badRequest.static.nopath.handler for route / with expectedGrade kettle.request.http
20:40:26.712:  ASSERTION FAILED: Static middleware must have a root path configured to serve options - got undefined
20:40:26.712:  Current activity: 
20:40:26.713:      while constructing component of type kettle.middleware.static at path serverEnvironment-or99a8g-8581.tests.configuration.server.app.requests.request.badStatic
20:40:26.714:  Stopping Kettle Server or99a8g-8635 on port 8081
20:40:26.714:  Kettle Server or99a8g-8635 on port 8081 is stopped
20:40:26.742:  Successfully queued test Bad request: bad URL-encoded request parameter
20:40:26.742:  jq: Test concluded - Module "kettle.tests.badRequest.static.nopath.config.mergedConfig tests" Test name "Bad config: static middleware with no path test": 3/3 passed - PASS
20:40:26.767:  Initializing the Express app
20:40:26.767:  Initializing the HTTP server
20:40:26.768:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/route/:key",
    "method": "get"
}
20:40:26.769:  Opening Kettle Server on port 8081
20:40:26.769:  Kettle Server or99a8g-8788 is listening on port 8081
20:40:26.769:  Sending a GET request to: http://127.0.0.1:8081/route/%ZZ
20:40:26.771:  Stopping Kettle Server or99a8g-8788 on port 8081
20:40:26.772:  Kettle Server or99a8g-8788 on port 8081 is stopped
20:40:26.789:  Successfully queued test Good request: bad URL-encoded request parameter
20:40:26.790:  jq: Test concluded - Module "kettle.tests.badRequest.badURL.config.mergedConfig tests" Test name "Bad request: bad URL-encoded request parameter": 3/3 passed - PASS
20:40:26.812:  Initializing the Express app
20:40:26.813:  Initializing the HTTP server
20:40:26.815:  Registering request handler {
    "type": "kettle.tests.goodRequest.emptyParameter.handler",
    "route": "/route/:key?",
    "method": "get"
}
20:40:26.816:  Opening Kettle Server on port 8081
20:40:26.816:  Kettle Server or99a8g-8914 is listening on port 8081
20:40:26.816:  Sending a GET request to: http://127.0.0.1:8081/route
20:40:26.827:  Invoking handler kettle.tests.goodRequest.emptyParameter.handler for route /route/:key? with expectedGrade kettle.request.http
20:40:26.833:  Kettle server allocated request object with type kettle.tests.goodRequest.emptyParameter.handler
20:40:26.836:  Stopping Kettle Server or99a8g-8914 on port 8081
20:40:26.836:  Kettle Server or99a8g-8914 on port 8081 is stopped
20:40:26.854:  Successfully queued test Good request: double handling test
20:40:26.855:  jq: Test concluded - Module "kettle.tests.goodRequest.emptyParameter.config.mergedConfig tests" Test name "Good request: bad URL-encoded request parameter": 2/2 passed - PASS
20:40:26.875:  Initializing the Express app
20:40:26.875:  Initializing the HTTP server
20:40:26.877:  Registering request handler {
    "type": "kettle.tests.goodRequest.doubleResponse.handler",
    "route": "/",
    "method": "get"
}
20:40:26.877:  Opening Kettle Server on port 8081
20:40:26.877:  Kettle Server or99a8g-9055 is listening on port 8081
20:40:26.878:  Sending a GET request to: http://127.0.0.1:8081/
20:40:26.879:  Invoking handler kettle.tests.goodRequest.doubleResponse.handler for route / with expectedGrade kettle.request.http
20:40:26.885:  Kettle server allocated request object with type kettle.tests.goodRequest.doubleResponse.handler
20:40:26.885:  Error in forwarding result {
    "message": "Second response"
} to promise resolve: promise has already received resolve
20:40:26.888:  Stopping Kettle Server or99a8g-9055 on port 8081
20:40:26.888:  Kettle Server or99a8g-9055 on port 8081 is stopped
20:40:26.906:  Successfully queued test Good request: options request
20:40:26.906:  jq: Test concluded - Module "kettle.tests.goodRequest.doubleResponse.config.mergedConfig tests" Test name "Good request: double handling test": 2/2 passed - PASS
20:40:26.929:  Initializing the Express app
20:40:26.930:  Initializing the HTTP server
20:40:26.932:  Registering request handler {
    "type": "kettle.tests.goodRequest.options.handler",
    "method": "options",
    "route": "/"
}
20:40:26.933:  Opening Kettle Server on port 8081
20:40:26.933:  Kettle Server or99a8g-9199 is listening on port 8081
20:40:26.934:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:40:26.935:  Invoking handler kettle.tests.goodRequest.options.handler for route / with expectedGrade kettle.request.http
20:40:26.942:  Kettle server allocated request object with type kettle.tests.goodRequest.options.handler
20:40:26.945:  Stopping Kettle Server or99a8g-9199 on port 8081
20:40:26.945:  Kettle Server or99a8g-9199 on port 8081 is stopped
20:40:26.963:  Successfully queued test Good request: mismatched route
20:40:26.963:  jq: Test concluded - Module "kettle.tests.goodRequest.options.config.mergedConfig tests" Test name "Good request: options request": 2/2 passed - PASS
20:40:26.986:  Initializing the Express app
20:40:26.986:  Initializing the HTTP server
20:40:26.988:  Skipping empty handler with key testHandler for app { typeName: "kettle.app id: or99a8g-9346" gradeNames: ["kettle.app"]}
20:40:26.988:  Opening Kettle Server on port 8081
20:40:26.988:  Kettle Server or99a8g-9343 is listening on port 8081
20:40:26.988:  Sending a GET request to: http://127.0.0.1:8081/route
20:40:26.997:  Kettle server getDispatcher found no matching handlers, continuing
20:40:26.998:  Stopping Kettle Server or99a8g-9343 on port 8081
20:40:26.998:  Kettle Server or99a8g-9343 on port 8081 is stopped
20:40:27.015:  Successfully queued test Good request: gradeNames for handler
20:40:27.016:  jq: Test concluded - Module "kettle.tests.goodRequest.mismatchRoute.config.mergedConfig tests" Test name "Good request: mismatched route": 2/2 passed - PASS
20:40:27.037:  Initializing the Express app
20:40:27.037:  Initializing the HTTP server
20:40:27.039:  Registering request handler {
    "type": "kettle.tests.goodRequest.gradeNames.handler",
    "gradeNames": "kettle.tests.goodRequest.gradeNames.mixin",
    "method": "get",
    "route": "/"
}
20:40:27.039:  Opening Kettle Server on port 8081
20:40:27.039:  Kettle Server or99a8g-9463 is listening on port 8081
20:40:27.039:  Sending a GET request to: http://127.0.0.1:8081/
20:40:27.040:  Invoking handler kettle.tests.goodRequest.gradeNames.handler for route / with expectedGrade kettle.request.http
20:40:27.048:  Kettle server allocated request object with type kettle.tests.goodRequest.gradeNames.handler
20:40:27.051:  Stopping Kettle Server or99a8g-9463 on port 8081
20:40:27.051:  Kettle Server or99a8g-9463 on port 8081 is stopped
20:40:27.077:  Successfully queued test Simple MultiConfig Test
20:40:27.077:  jq: Test concluded - Module "kettle.tests.goodRequest.gradeNames.config.mergedConfig tests" Test name "Good request: gradeNames for handler": 2/2 passed - PASS
20:40:27.135:  Initializing the Express app
20:40:27.136:  Initializing the HTTP server
20:40:27.137:  Initializing the Express app
20:40:27.138:  Initializing the HTTP server
20:40:27.140:  Registering request handler {
    "type": "kettle.tests.multiConfig.target.get.handler",
    "route": "/",
    "method": "get"
}
20:40:27.140:  Opening Kettle Server on port 8088
20:40:27.140:  Registering request handler {
    "type": "kettle.tests.multiConfig.source.get.handler",
    "route": "/",
    "method": "get"
}
20:40:27.140:  Opening Kettle Server on port 8081
20:40:27.141:  Kettle Server or99a8g-9605 is listening on port 8088
20:40:27.141:  Kettle Server or99a8g-9604 is listening on port 8081
20:40:27.141:  Sending a GET request to: http://127.0.0.1:8081/
20:40:27.142:  Invoking handler kettle.tests.multiConfig.source.get.handler for route / with expectedGrade kettle.request.http
20:40:27.154:  Kettle server allocated request object with type kettle.tests.multiConfig.source.get.handler
20:40:27.155:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8088",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8088/",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:27.165:  Invoking handler kettle.tests.multiConfig.target.get.handler for route / with expectedGrade kettle.request.http
20:40:27.172:  Kettle server allocated request object with type kettle.tests.multiConfig.target.get.handler
20:40:27.178:  Stopping Kettle Server or99a8g-9604 on port 8081
20:40:27.178:  Stopping Kettle Server or99a8g-9605 on port 8088
20:40:27.178:  Kettle Server or99a8g-9604 on port 8081 is stopped
20:40:27.178:  Kettle Server or99a8g-9605 on port 8088 is stopped
20:40:27.200:  Successfully queued test Static hosting tests
20:40:27.200:  jq: Test concluded - Module "kettle.tests.multiConfig.head.config tests" Test name "Simple MultiConfig Test": 2/2 passed - PASS
20:40:27.234:  Initializing the Express app
20:40:27.235:  Initializing the HTTP server
20:40:27.236:  Registering request handler {
    "type": "kettle.tests.static.handler",
    "prefix": "/infusion",
    "route": "/*",
    "method": "get"
}
20:40:27.236:  Opening Kettle Server on port 8081
20:40:27.237:  Kettle Server or99a8g-9870 is listening on port 8081
20:40:27.237:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:40:27.238:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:40:27.239:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:27.245:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:27.249:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:27.255:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:27.263:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.jsonx
20:40:27.264:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:27.269:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:27.275:  Stopping Kettle Server or99a8g-9870 on port 8081
20:40:27.276:  Kettle Server or99a8g-9870 on port 8081 is stopped
20:40:27.310:  Successfully queued test Multer tests
20:40:27.310:  jq: Test concluded - Module "kettle.tests.static.config tests" Test name "Static hosting tests": 9/9 passed - PASS
20:40:27.373:  Initializing the Express app
20:40:27.373:  Initializing the HTTP server
20:40:27.375:  Registering request handler {
    "type": "kettle.tests.multer.handler.single",
    "route": "/multer-single",
    "method": "post"
}
20:40:27.375:  Registering request handler {
    "type": "kettle.tests.multer.handler.array",
    "route": "/multer-array",
    "method": "post"
}
20:40:27.375:  Registering request handler {
    "type": "kettle.tests.multer.handler.fields",
    "route": "/multer-fields",
    "method": "post"
}
20:40:27.375:  Registering request handler {
    "type": "kettle.tests.multer.handler.imageOnly",
    "route": "/multer-image-only",
    "method": "post"
}
20:40:27.375:  Registering request handler {
    "type": "kettle.tests.multer.handler.diskStorage",
    "route": "/multer-disk-storage",
    "method": "post"
}
20:40:27.376:  Opening Kettle Server on port 8081
20:40:27.376:  Kettle Server or99a8g-10111 is listening on port 8081
20:40:27.376:  Sending a POST request to: http://127.0.0.1:8081/multer-single
20:40:27.380:  Invoking handler kettle.tests.multer.handler.single for route /multer-single with expectedGrade kettle.request.http
20:40:27.386:  Kettle server allocated request object with type kettle.tests.multer.handler.single
20:40:27.398:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:40:27.399:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:40:27.406:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:40:27.413:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:40:27.415:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:40:27.421:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:40:27.428:  Sending a POST request to: http://127.0.0.1:8081/multer-fields
20:40:27.430:  Invoking handler kettle.tests.multer.handler.fields for route /multer-fields with expectedGrade kettle.request.http
20:40:27.437:  Kettle server allocated request object with type kettle.tests.multer.handler.fields
20:40:27.447:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:40:27.449:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:40:27.455:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:40:27.464:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:40:27.466:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:40:27.471:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:40:27.477:  Sending a POST request to: http://127.0.0.1:8081/multer-disk-storage
20:40:27.479:  Invoking handler kettle.tests.multer.handler.diskStorage for route /multer-disk-storage with expectedGrade kettle.request.http
20:40:27.485:  Kettle server allocated request object with type kettle.tests.multer.handler.diskStorage
20:40:27.491:  Stopping Kettle Server or99a8g-10111 on port 8081
20:40:27.492:  Kettle Server or99a8g-10111 on port 8081 is stopped
20:40:27.510:  Successfully queued test Asynchronous request startup: basic fetch test
20:40:27.510:  jq: Test concluded - Module "kettle.tests.multer.config tests" Test name "Multer tests": 29/29 passed - PASS
20:40:27.531:  Initializing the Express app
20:40:27.531:  Initializing the HTTP server
20:40:27.533:  Registering request handler {
    "type": "kettle.tests.asyncRequest.handler",
    "route": "/",
    "method": "get"
}
20:40:27.533:  Opening Kettle Server on port 8081
20:40:27.533:  Kettle Server or99a8g-10444 is listening on port 8081
20:40:27.534:  Sending a GET request to: http://127.0.0.1:8081/
20:40:27.543:  Invoking handler kettle.tests.asyncRequest.handler for route / with expectedGrade kettle.request.http
20:40:27.555:  Kettle server allocated request object with type kettle.tests.asyncRequest.handler
20:40:27.558:  Stopping Kettle Server or99a8g-10444 on port 8081
20:40:27.558:  Kettle Server or99a8g-10444 on port 8081 is stopped
20:40:27.580:  Successfully queued test Request abort test
20:40:27.580:  jq: Test concluded - Module "kettle.tests.asyncRequest.handler.config.mergedConfig tests" Test name "Asynchronous request startup: basic fetch test": 2/2 passed - PASS
20:40:27.601:  Initializing the Express app
20:40:27.602:  Initializing the HTTP server
20:40:27.603:  Registering request handler {
    "type": "kettle.tests.requestAbort.handler",
    "route": "/",
    "method": "get"
}
20:40:27.603:  Opening Kettle Server on port 8081
20:40:27.604:  Kettle Server or99a8g-10616 is listening on port 8081
20:40:27.604:  Sending a GET request to: http://127.0.0.1:8081/
20:40:27.605:  Invoking handler kettle.tests.requestAbort.handler for route / with expectedGrade kettle.request.http
20:40:27.614:  Kettle server allocated request object with type kettle.tests.requestAbort.handler
20:40:28.116:  Error marking thread to request or99a8g-10685 which has already been destroyed
20:40:28.618:  Stopping Kettle Server or99a8g-10616 on port 8081
20:40:28.619:  Kettle Server or99a8g-10616 on port 8081 is stopped
20:40:28.632:  jq: Test concluded - Module "kettle.tests.requestAbort.config.mergedConfig tests" Test name "Request abort test": 2/2 passed - PASS
20:40:28.634:  jq: ***************
20:40:28.634:  jq: All tests concluded: 358/358 total passed in 7396ms - PASS
20:40:28.634:  jq: ***************
************* run test done *************
kettle is testing ./Variants/session/variant1/session
/data/js-variants/multee
************* npm unlink module *************

up to date, audited 949 packages in 2s

109 packages are looking for funding
  run `npm fund` for details

20 vulnerabilities (4 moderate, 14 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible, run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

up to date, audited 1 package in 107ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

changed 1 package, and audited 3 packages in 732ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************
************* npm link module done *************
************* start run test *************

> kettle@2.3.0 pretest
> npx rimraf coverage/*


> kettle@2.3.0 test
> nyc --reporter=html node tests/all-tests.js

Infusion at path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion is at top level 
20:40:34.316:  Registering module subbifier from path /data/js-variants/multee/
20:40:34.317:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle/
20:40:34.317:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/
20:40:34.317:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:34.324:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/node-jqunit/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:34.781:  Successfully queued test JSON line number diagnostic test
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:34.938:  Registering module fluid-pouchdb from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb
20:40:35.071:  Registering module fluid-express from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/fluid-express
20:40:35.382:  ASSERTION FAILED: kettle.JSON.parse called on non-string object 3
20:40:35.386:  Unhandled promise rejection: {
    "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING'"
}
20:40:35.399:  jq: Test concluded - Test name "kettle JSON parsing error tests": 2/2 passed - PASS
20:40:35.401:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:40:35.414:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON": 2/2 passed - PASS
20:40:35.429:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON": 1/1 passed - PASS
20:40:35.430:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:40:35.444:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON5": 2/2 passed - PASS
20:40:35.457:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON5": 1/1 passed - PASS
20:40:35.471:  jq: Test concluded - Test name "kettle.JSON.readFileSync of nonexistent file": 1/1 passed - PASS
20:40:35.509:  Initializing the Express app
20:40:35.511:  Initializing the HTTP server
20:40:35.516:  Opening Kettle Server on port 8081
20:40:35.517:  Kettle Server 1ebv3my6-176 is listening on port 8081
20:40:35.518:  Stopping Kettle Server 1ebv3my6-176 on port 8081
20:40:35.518:  Kettle Server 1ebv3my6-176 on port 8081 is stopped
20:40:35.531:  jq: Test concluded - Test name "Kettle server initialisation test": 1/1 passed - PASS
20:40:35.532:  Loader running configuration name kettle.tests.HTTPMethods.config
20:40:35.566:  Initializing the Express app
20:40:35.567:  Initializing the HTTP server
20:40:35.571:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:35.572:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:35.572:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:35.572:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:35.572:  Opening Kettle Server on port 8081
20:40:35.579:  Sending a GET request to: http://127.0.0.1:8081/
20:40:35.582:  Kettle Server 1ebv3my6-241 is listening on port 8081
20:40:35.588:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:35.594:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:35.602:  Stopping Kettle Server 1ebv3my6-241 on port 8081
20:40:35.603:  Kettle Server 1ebv3my6-241 on port 8081 is stopped
20:40:35.616:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and args": 2/2 passed - PASS
20:40:35.616:  Loader running configuration name kettle.tests.HTTPMethods.config
20:40:35.657:  Initializing the Express app
20:40:35.658:  Initializing the HTTP server
20:40:35.661:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:35.661:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:35.661:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:35.662:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:35.662:  Opening Kettle Server on port 8081
20:40:35.665:  Sending a GET request to: http://127.0.0.1:8081/
20:40:35.666:  Kettle Server 1ebv3my6-351 is listening on port 8081
20:40:35.674:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:35.679:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:35.682:  Stopping Kettle Server 1ebv3my6-351 on port 8081
20:40:35.682:  Kettle Server 1ebv3my6-351 on port 8081 is stopped
20:40:35.696:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and NODE_ENV": 2/2 passed - PASS
20:40:35.696:  ASSERTION FAILED: No configuration specified in either 1st command line argument, NODE_ENV or internal default
20:40:35.710:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config name": 1/1 passed - PASS
20:40:35.710:  ASSERTION FAILED: Config path must be specified as 1st command line argument
20:40:35.724:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config path": 1/1 passed - PASS
20:40:35.729:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:40:35.745:  Successfully queued test JSON line number diagnostic test
20:40:35.745:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:40:35.759:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "GPII-2147: Testing that localhost is properly replaced by 127.0.0.1 in prepareRequestOptions": 1/1 passed - PASS
20:40:35.788:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource basic init tests": 8/8 passed - PASS
20:40:35.798:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "x-custom-header": "x-custom-value",
        "x-custom-header2": "x-custom-value2"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": 999,
    "pathname": "/path",
    "search": "",
    "family": 4,
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:999/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:35.812:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:40:35.819:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "pathname": "/device",
    "search": "",
    "url": "http://localhost:998/device",
    "port": 998,
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:35.833:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:40:35.841:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:35.849:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:35.863:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-73 censoring test": 6/6 passed - PASS
20:40:35.888:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-38 derived writable dataSource test": 1/1 passed - PASS
20:40:35.908:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Reading file in formenc encoding": 1/1 passed - PASS
20:40:35.929:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Writing file in formenc encoding": 1/1 passed - PASS
20:40:35.935:  ASSERTION FAILED: Cannot operate file dataSource {
    "typeName": "kettle.tests.dataSource.fileWithoutPath",
    "id": "1ebv3my6-628",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "fluid.contextAware",
            "fluid.dataSource",
            "kettle.dataSource.file",
            "kettle.tests.dataSource.fileWithoutPath"
        ],
        "contextAwareness": {
            "writable": {
                "checks": {
                    "writableValue": {
                        "contextValue": "{fluid.dataSource}.options.writable",
                        "gradeNames": "{fluid.dataSource}.options.writableGrade"
                    }
                }
            }
        },
        "writable": false,
        "components": {
            "encoding": {
                "0": {
                    "type": "fluid.dataSource.encoding.JSON"
                },
                "length": 1
            }
        },
        "events": {
            .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] without an option named "path"
20:40:35.936:  Current activity: 
20:40:35.936:      while firing to listener to event named onRead of component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: 1ebv3my6-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-1ebv3my6-628
20:40:35.936:      while invoking invoker with name get and record {
    "func": undefined,
    "funcName": "fluid.dataSource.get",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "{that}",
        "{arguments}.0",
        "{arguments}.1"
    ],
    "componentSource": "fluid.dataSource"
} holding component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: 1ebv3my6-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-1ebv3my6-628
20:40:35.950:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource without path": 2/2 passed - PASS
20:40:35.983:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Attached URLResolver tests": 2/2 passed - PASS
20:40:36.004:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present environment substitution": 1/1 passed - PASS
20:40:36.022:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent environment substitution": 1/1 passed - PASS
20:40:36.039:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present file substitution": 1/1 passed - PASS
20:40:36.056:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent file substitution": 1/1 passed - PASS
20:40:36.074:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test args substitution": 1/1 passed - PASS
20:40:36.078:  Registering module test-module from path /data/js-variants/multee/Clients/session/kettle/tests/configs/node_modules/test-module
20:40:36.109:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults with types": 14/14 passed - PASS
20:40:36.124:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults without type": 4/4 passed - PASS
20:40:36.143:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config with "loadConfig" directive": 2/2 passed - PASS
20:40:36.156:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test parsing command line arguments": 4/4 passed - PASS
20:40:36.157:  ASSERTION FAILED: Error in config file at path undefined - key "distributeOptions" found, where the only legal options are type, options, loadConfigs, mergeConfigs, require
20:40:36.171:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Config with bad top-level keys": 1/1 passed - PASS
20:40:36.173:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:40:36.192:  Successfully queued test Simple get test
20:40:36.193:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:40:36.210:  Successfully queued test Simple get test
20:40:36.210:  jq: Test concluded - Module "1. Testing file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.234:  Successfully queued test Simple get test
20:40:36.234:  jq: Test concluded - Module "2. Testing file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.253:  Successfully queued test Simple get test
20:40:36.253:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.270:  Successfully queued test Simple get test
20:40:36.270:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.287:  Successfully queued test Simple get test
20:40:36.287:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:40:36.303:  Successfully queued test Simple get test
20:40:36.304:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.320:  Successfully queued test Simple get test
20:40:36.321:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:36.343:  Successfully queued test Simple get test
20:40:36.351:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:36.367:  Successfully queued test Simple get test
20:40:36.367:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:36.385:  Successfully queued test Simple get test
20:40:36.385:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:36.403:  Successfully queued test Simple get test
20:40:36.403:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:36.424:  Successfully queued test Simple set test
20:40:36.424:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion" Test name "Simple get test": 1/1 passed - PASS
20:40:36.443:  Successfully queued test Simple set test
20:40:36.443:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:40:36.470:  Successfully queued test Simple set test
20:40:36.470:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding" Test name "Simple set test": 1/1 passed - PASS
20:40:36.494:  Successfully queued test Simple set test
20:40:36.495:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:40:36.515:  Successfully queued test Simple set test
20:40:36.522:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:40:36.549:  Successfully queued test Simple set test
20:40:36.550:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:40:36.583:  Successfully queued test Simple get test
20:40:36.583:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:40:36.616:  Successfully queued test Simple get test
20:40:36.617:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.654:  Successfully queued test Simple get test
20:40:36.655:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:40:36.673:  Successfully queued test Simple get test
20:40:36.673:  jq: Test concluded - Module "1. Testing file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.709:  Successfully queued test Simple get test
20:40:36.709:  jq: Test concluded - Module "2. Testing file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.729:  Successfully queued test Simple get test
20:40:36.729:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.751:  Successfully queued test Simple get test
20:40:36.751:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.767:  Successfully queued test Simple get test
20:40:36.775:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.792:  Successfully queued test Simple get test
20:40:36.792:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.808:  Successfully queued test Simple get test
20:40:36.809:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.827:  Successfully queued test Simple get test
20:40:36.827:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.843:  Successfully queued test Simple get test
20:40:36.843:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.861:  Successfully queued test Simple get test
20:40:36.861:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.878:  Successfully queued test Simple get test
20:40:36.879:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.901:  Successfully queued test Simple set test
20:40:36.901:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:36.919:  Successfully queued test Simple set test
20:40:36.919:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:36.939:  Successfully queued test Simple set test
20:40:36.946:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:36.986:  Successfully queued test Simple set test
20:40:36.986:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:37.034:  Successfully queued test Simple set test
20:40:37.045:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:37.069:  Successfully queued test Simple set test
20:40:37.069:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:37.088:  Successfully queued test Simple get test
20:40:37.088:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:40:37.104:  Successfully queued test Simple get test
20:40:37.104:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:37.144:  Initializing the Express app
20:40:37.145:  Initializing the HTTP server
20:40:37.147:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:37.147:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.redirectingRequestHandler",
    "route": "/redirect",
    "method": "get"
}
20:40:37.148:  Opening Kettle Server on port 8081
20:40:37.148:  Successfully queued test Simple get test
20:40:37.148:  Kettle Server 1ebv3my6-2853 is listening on port 8081
20:40:37.148:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:40:37.150:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/redirect",
    "search": "",
    "url": "http://localhost:8081/redirect",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:37.152:  Invoking handler kettle.tests.dataSource.URL.redirectingRequestHandler for route /redirect with expectedGrade kettle.request.http
20:40:37.158:  Kettle server allocated request object with type kettle.tests.dataSource.URL.redirectingRequestHandler
20:40:37.163:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:37.168:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:37.170:  Stopping Kettle Server 1ebv3my6-2853 on port 8081
20:40:37.171:  Kettle Server 1ebv3my6-2853 on port 8081 is stopped
20:40:37.204:  Initializing the Express app
20:40:37.205:  Initializing the HTTP server
20:40:37.207:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:37.207:  Opening Kettle Server on port 8081
20:40:37.208:  Successfully queued test Resource model is initialised
20:40:37.208:  Kettle Server 1ebv3my6-3005 is listening on port 8081
20:40:37.216:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "dataSource": {
        "typeName": "kettle.dataSource.URL",
        "id": "1ebv3my6-3007",
        "lifecycleStatus": "treeConstructed",
        "destroy": { Function
            
        },
        "options": {
            "gradeNames": [
                "fluid.component",
                "fluid.contextAware",
                "fluid.dataSource",
                "fluid.dataSource.URL",
                "kettle.dataSource.URL"
            ],
            "contextAwareness": {
                "writable": {
                    "checks": {
                        "writableValue": {
                            "contextValue": "{fluid.dataSource}.options.writable",
                            "gradeNames": "{fluid.dataSource}.options.writableGrade"
                        }
    .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:37.217:  jq: Test concluded - Module "KETTLE-89: DataSource support for redirects" Test name "Simple get test": 3/3 passed - PASS
20:40:37.218:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:37.223:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:37.228:  Stopping Kettle Server 1ebv3my6-3005 on port 8081
20:40:37.229:  Kettle Server 1ebv3my6-3005 on port 8081 is stopped
20:40:37.264:  Initializing the Express app
20:40:37.264:  Initializing the HTTP server
20:40:37.266:  Registering request handler {
    "type": "kettle.request.http",
    "route": "/",
    "method": "get"
}
20:40:37.267:  Opening Kettle Server on port 8081
20:40:37.267:  Successfully queued test Simple get test
20:40:37.267:  Kettle Server 1ebv3my6-3171 is listening on port 8081
20:40:37.267:  jq: Test concluded - Module "DataSource during init" Test name "Resource model is initialised": 2/2 passed - PASS
20:40:37.269:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notfound",
    "search": "?search",
    "url": "http://(SENSITIVE):(SENSITIVE)@localhost:8081/notfound?search",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:37.276:  Kettle server getDispatcher found no matching handlers, continuing
20:40:37.279:  Stopping Kettle Server 1ebv3my6-3171 on port 8081
20:40:37.279:  Kettle Server 1ebv3my6-3171 on port 8081 is stopped
20:40:37.313:  Initializing the Express app
20:40:37.314:  Initializing the HTTP server
20:40:37.314:  Initializing the HTTPS server
20:40:37.365:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:37.365:  Opening Kettle Server on port 8081
20:40:37.366:  Successfully queued test Simple get test
20:40:37.366:  Kettle Server 1ebv3my6-3284 is listening on port 8081
20:40:37.366:  jq: Test concluded - Module "w. Testing URL dataSource with sensitive info in URL" Test name "Simple get test": 4/4 passed - PASS
20:40:37.367:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "https:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "https://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:37.374:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:37.379:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:37.382:  Stopping Kettle Server 1ebv3my6-3284 on port 8081
20:40:37.382:  Kettle Server 1ebv3my6-3284 on port 8081 is stopped
20:40:37.421:  Initializing the Express app
20:40:37.421:  Initializing the HTTP server
20:40:37.423:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:37.424:  Opening Kettle Server on port 8081
20:40:37.424:  Successfully queued test Simple get test
20:40:37.425:  Kettle Server 1ebv3my6-3418 is listening on port 8081
20:40:37.425:  jq: Test concluded - Module "HTTPS dataSource test" Test name "Simple get test": 2/2 passed - PASS
20:40:37.426:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:37.428:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:40:37.435:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:40:37.438:  Stopping Kettle Server 1ebv3my6-3418 on port 8081
20:40:37.438:  Kettle Server 1ebv3my6-3418 on port 8081 is stopped
20:40:37.472:  Initializing the Express app
20:40:37.473:  Initializing the HTTP server
20:40:37.475:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:37.475:  Opening Kettle Server on port 8081
20:40:37.476:  Successfully queued test Simple get test
20:40:37.476:  Kettle Server 1ebv3my6-3554 is listening on port 8081
20:40:37.476:  jq: Test concluded - Module "x. Testing URL dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:37.478:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:37.487:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:40:37.492:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:40:37.494:  Stopping Kettle Server 1ebv3my6-3554 on port 8081
20:40:37.495:  Kettle Server 1ebv3my6-3554 on port 8081 is stopped
20:40:37.542:  Initializing the Express app
20:40:37.542:  Initializing the HTTP server
20:40:37.544:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:40:37.545:  Opening Kettle Server on port 8081
20:40:37.545:  Successfully queued test Simple get test
20:40:37.546:  Kettle Server 1ebv3my6-3691 is listening on port 8081
20:40:37.546:  jq: Test concluded - Module "y. Testing CouchDB dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:37.547:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notFound",
    "search": "",
    "url": "http://localhost:8081/notFound",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:37.548:  Kettle server getDispatcher found no matching handlers, continuing
20:40:37.550:  Stopping Kettle Server 1ebv3my6-3691 on port 8081
20:40:37.550:  Kettle Server 1ebv3my6-3691 on port 8081 is stopped
20:40:37.588:  Initializing the Express app
20:40:37.589:  Initializing the HTTP server
20:40:37.591:  Registering request handler {
    "method": "put",
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/"
}
20:40:37.591:  Opening Kettle Server on port 8081
20:40:37.592:  Successfully queued test Simple set test
20:40:37.592:  Kettle Server 1ebv3my6-3804 is listening on port 8081
20:40:37.592:  jq: Test concluded - Module "z. Testing HTTP dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:40:37.593:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 24
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:37.594:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:37.600:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:37.611:  Stopping Kettle Server 1ebv3my6-3804 on port 8081
20:40:37.611:  Kettle Server 1ebv3my6-3804 on port 8081 is stopped
20:40:37.630:  Successfully queued test Simple get test
20:40:37.630:  jq: Test concluded - Module "HTTPS dataSource set with special chars test" Test name "Simple set test": 2/2 passed - PASS
20:40:37.646:  express pouchdb instance '1ebv3my6-4002' initalizing...
20:40:37.647:  Creating directory '/tmp/1ebv3my6-4002' for express pouchdb instance '1ebv3my6-4002'...
20:40:37.693:  express baseDir: '/tmp/1ebv3my6-4002'...
20:40:37.696:  Express server listening on port 6789
20:40:37.696:  Express started...
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/@the-t-in-rtf/pouchdb-all-dbs/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:40:37.866:  Data loaded for database 'testFile'...
20:40:37.867:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT",
    "url": "http://localhost:6789/testFile/test_id"
}
20:40:37.912:  Successfully queued test Simple get test
20:40:37.912:  Express stopped...
20:40:37.913:  jq: Test concluded - Module "3. Testing CouchDB URL DataSource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:40:37.928:  express pouchdb instance '1ebv3my6-4156' initalizing...
20:40:37.928:  Creating directory '/tmp/1ebv3my6-4156' for express pouchdb instance '1ebv3my6-4156'...
20:40:37.950:  express baseDir: '/tmp/1ebv3my6-4156'...
20:40:37.952:  Express server listening on port 6789
20:40:37.952:  Express started...
20:40:37.980:  Data loaded for database 'testFile'...
20:40:37.983:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": false,
    "writeMethod": "PUT"
}
20:40:38.046:  Successfully queued test Simple get test
20:40:38.047:  Express stopped...
20:40:38.047:  jq: Test concluded - Module "5. Testing CouchDB URL datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:40:38.072:  express pouchdb instance '1ebv3my6-4293' initalizing...
20:40:38.073:  Creating directory '/tmp/1ebv3my6-4293' for express pouchdb instance '1ebv3my6-4293'...
20:40:38.106:  express baseDir: '/tmp/1ebv3my6-4293'...
20:40:38.107:  Express server listening on port 6789
20:40:38.107:  Express started...
20:40:38.126:  Data loaded for database 'testFile'...
20:40:38.127:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": true,
    "writeMethod": "PUT"
}
20:40:38.175:  Successfully queued test Simple set test
20:40:38.176:  Express stopped...
20:40:38.176:  jq: Test concluded - Module "5a. Testing CouchDB URL datasource with missing file and notFoundIsEmpty" Test name "Simple get test": 1/1 passed - PASS
20:40:38.192:  express pouchdb instance '1ebv3my6-4437' initalizing...
20:40:38.193:  Creating directory '/tmp/1ebv3my6-4437' for express pouchdb instance '1ebv3my6-4437'...
20:40:38.208:  express baseDir: '/tmp/1ebv3my6-4437'...
20:40:38.209:  Express server listening on port 6789
20:40:38.209:  Express started...
20:40:38.234:  Data loaded for database 'testFile'...
20:40:38.236:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:38.260:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 47
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:38.265:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:38.292:  Successfully queued test Simple set test
20:40:38.292:  Express stopped...
20:40:38.293:  jq: Test concluded - Module "14. Testing CouchDB URL datasource with HTTP - set" Test name "Simple set test": 1/1 passed - PASS
20:40:38.305:  express pouchdb instance '1ebv3my6-4600' initalizing...
20:40:38.305:  Creating directory '/tmp/1ebv3my6-4600' for express pouchdb instance '1ebv3my6-4600'...
20:40:38.322:  express baseDir: '/tmp/1ebv3my6-4600'...
20:40:38.323:  Express server listening on port 6789
20:40:38.323:  Express started...
20:40:38.342:  Data loaded for database 'testFile'...
20:40:38.344:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:38.363:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 119
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:40:38.367:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:38.437:  Initializing the Express app
20:40:38.437:  Initializing the HTTP server
20:40:38.439:  Initializing the Express app
20:40:38.439:  Initializing the HTTP server
20:40:38.441:  Registering request handler {
    "type": "kettle.tests.serverPair.getRelay",
    "route": "/relay",
    "method": "get"
}
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.postRelay",
    "route": "/relay",
    "method": "post"
}
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.putRelay",
    "route": "/relay",
    "method": "put"
}
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.errorRelay",
    "route": "/errorRelay",
    "method": "get"
}
20:40:38.442:  Opening Kettle Server on port 8086
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.getEndpoint",
    "route": "/endpoint",
    "method": "get"
}
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.postEndpoint",
    "route": "/endpoint",
    "method": "post"
}
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.putEndpoint",
    "route": "/endpoint",
    "method": "put"
}
20:40:38.442:  Registering request handler {
    "type": "kettle.tests.serverPair.errorEndpoint",
    "route": "/errorEndpoint",
    "method": "get"
}
20:40:38.442:  Opening Kettle Server on port 8087
20:40:38.443:  Successfully queued test Access GET request
20:40:38.443:  Successfully queued test Access SET request via POST
20:40:38.443:  Successfully queued test Access SET request via PUT
20:40:38.444:  Successfully queued test Relay error state via GET
20:40:38.444:  Kettle Server 1ebv3my6-4695 is listening on port 8086
20:40:38.444:  Kettle Server 1ebv3my6-4693 is listening on port 8087
20:40:38.444:  Express stopped...
20:40:38.444:  jq: Test concluded - Module "15. Testing CouchDB URL datasource with HTTP existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:40:38.445:  Sending a GET request to: http://127.0.0.1:8086/relay
20:40:38.446:  Invoking handler kettle.tests.serverPair.getRelay for route /relay with expectedGrade kettle.request.http
20:40:38.452:  Kettle server allocated request object with type kettle.tests.serverPair.getRelay
20:40:38.453:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "get",
    "writeMethod": "POST"
}
20:40:38.469:  Invoking handler kettle.tests.serverPair.getEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:38.476:  Kettle server allocated request object with type kettle.tests.serverPair.getEndpoint
20:40:38.477:  ENDPOINT Resolving with value 42
20:40:38.494:  jq: Test concluded - Module "Cross server datasource access" Test name "Access GET request": 3/3 passed - PASS
20:40:38.495:  Sending a POST request to: http://127.0.0.1:8086/relay
20:40:38.496:  Invoking handler kettle.tests.serverPair.postRelay for route /relay with expectedGrade kettle.request.http
20:40:38.503:  Kettle server allocated request object with type kettle.tests.serverPair.postRelay
20:40:38.505:  DataSource Issuing HTTP request with options {
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "set",
    "writeMethod": "POST"
}
20:40:38.506:  Invoking handler kettle.tests.serverPair.postEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:38.512:  Kettle server allocated request object with type kettle.tests.serverPair.postEndpoint
20:40:38.513:  ENDPOINT Resolving with value {
    "payload": "post return value"
}
20:40:38.530:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via POST": 4/4 passed - PASS
20:40:38.531:  Sending a PUT request to: http://127.0.0.1:8086/relay
20:40:38.531:  Invoking handler kettle.tests.serverPair.putRelay for route /relay with expectedGrade kettle.request.http
20:40:38.538:  Kettle server allocated request object with type kettle.tests.serverPair.putRelay
20:40:38.540:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "writeMethod": "PUT",
    "operation": "set"
}
20:40:38.541:  Invoking handler kettle.tests.serverPair.putEndpoint for route /endpoint with expectedGrade kettle.request.http
20:40:38.549:  Kettle server allocated request object with type kettle.tests.serverPair.putEndpoint
20:40:38.550:  ENDPOINT Resolving with value {
    "payload": "put return value"
}
20:40:38.566:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via PUT": 4/4 passed - PASS
20:40:38.567:  Sending a GET request to: http://127.0.0.1:8086/errorRelay
20:40:38.568:  Invoking handler kettle.tests.serverPair.errorRelay for route /errorRelay with expectedGrade kettle.request.http
20:40:38.574:  Kettle server allocated request object with type kettle.tests.serverPair.errorRelay
20:40:38.575:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/errorEndpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/errorEndpoint",
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:38.577:  Invoking handler kettle.tests.serverPair.errorEndpoint for route /errorEndpoint with expectedGrade kettle.request.http
20:40:38.583:  Kettle server allocated request object with type kettle.tests.serverPair.errorEndpoint
20:40:38.587:  Stopping Kettle Server 1ebv3my6-4693 on port 8087
20:40:38.587:  Stopping Kettle Server 1ebv3my6-4695 on port 8086
20:40:38.588:  Kettle Server 1ebv3my6-4693 on port 8087 is stopped
20:40:38.588:  Kettle Server 1ebv3my6-4695 on port 8086 is stopped
20:40:38.605:  Successfully queued test HTTPMethods GET test
20:40:38.606:  jq: Test concluded - Module "Cross server datasource access" Test name "Relay error state via GET": 2/2 passed - PASS
20:40:38.649:  Initializing the Express app
20:40:38.649:  Initializing the HTTP server
20:40:38.651:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:38.651:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:38.651:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:38.651:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:38.651:  Opening Kettle Server on port 8081
20:40:38.652:  Kettle Server 1ebv3my6-5127 is listening on port 8081
20:40:38.652:  Sending a GET request to: http://127.0.0.1:8081/
20:40:38.653:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:40:38.658:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:40:38.661:  Stopping Kettle Server 1ebv3my6-5127 on port 8081
20:40:38.661:  Kettle Server 1ebv3my6-5127 on port 8081 is stopped
20:40:38.689:  Successfully queued test HTTPMethods POST test
20:40:38.689:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods GET test": 2/2 passed - PASS
20:40:38.731:  Initializing the Express app
20:40:38.739:  Initializing the HTTP server
20:40:38.741:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:38.741:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:38.741:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:38.741:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:38.742:  Opening Kettle Server on port 8081
20:40:38.742:  Kettle Server 1ebv3my6-5264 is listening on port 8081
20:40:38.742:  Sending a POST request to: http://127.0.0.1:8081/
20:40:38.744:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:38.750:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:38.753:  Stopping Kettle Server 1ebv3my6-5264 on port 8081
20:40:38.753:  Kettle Server 1ebv3my6-5264 on port 8081 is stopped
20:40:38.768:  Successfully queued test HTTPMethods PUT test
20:40:38.768:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods POST test": 2/2 passed - PASS
20:40:38.789:  Initializing the Express app
20:40:38.790:  Initializing the HTTP server
20:40:38.791:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:38.791:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:38.791:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:38.791:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:38.791:  Opening Kettle Server on port 8081
20:40:38.792:  Kettle Server 1ebv3my6-5401 is listening on port 8081
20:40:38.792:  Sending a PUT request to: http://127.0.0.1:8081/
20:40:38.803:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:38.809:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:38.811:  Stopping Kettle Server 1ebv3my6-5401 on port 8081
20:40:38.811:  Kettle Server 1ebv3my6-5401 on port 8081 is stopped
20:40:38.833:  Successfully queued test HTTPMethods PUT & POST in sequence test
20:40:38.833:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test": 2/2 passed - PASS
20:40:38.854:  Initializing the Express app
20:40:38.854:  Initializing the HTTP server
20:40:38.856:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:38.856:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:38.856:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:38.856:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:38.856:  Opening Kettle Server on port 8081
20:40:38.856:  Kettle Server 1ebv3my6-5554 is listening on port 8081
20:40:38.857:  Sending a POST request to: http://127.0.0.1:8081/
20:40:38.858:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:38.863:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:38.866:  Sending a PUT request to: http://127.0.0.1:8081/
20:40:38.867:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:40:38.872:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:40:38.874:  Sending a POST request to: http://127.0.0.1:8081/
20:40:38.875:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:40:38.880:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:40:38.883:  Stopping Kettle Server 1ebv3my6-5554 on port 8081
20:40:38.883:  Kettle Server 1ebv3my6-5554 on port 8081 is stopped
20:40:38.898:  Successfully queued test HTTPMethods PUT test with alternate response status code
20:40:38.898:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT & POST in sequence test": 6/6 passed - PASS
20:40:38.919:  Initializing the Express app
20:40:38.919:  Initializing the HTTP server
20:40:38.920:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:40:38.921:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:40:38.921:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:40:38.921:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:40:38.921:  Opening Kettle Server on port 8081
20:40:38.921:  Kettle Server 1ebv3my6-5735 is listening on port 8081
20:40:38.922:  Sending a PUT request to: http://127.0.0.1:8081/201
20:40:38.923:  Invoking handler kettle.tests.HTTPMethods.put201.handler for route /201 with expectedGrade kettle.request.http
20:40:38.929:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put201.handler
20:40:38.931:  Stopping Kettle Server 1ebv3my6-5735 on port 8081
20:40:38.931:  Kettle Server 1ebv3my6-5735 on port 8081 is stopped
20:40:38.950:  Successfully queued test CORS middleware tests
20:40:38.950:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test with alternate response status code": 3/3 passed - PASS
20:40:38.971:  Initializing the Express app
20:40:38.971:  Initializing the HTTP server
20:40:38.973:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:38.973:  Opening Kettle Server on port 8081
20:40:38.973:  Kettle Server 1ebv3my6-5880 is listening on port 8081
20:40:38.974:  Sending a GET request to: http://127.0.0.1:8081/
20:40:38.984:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:38.990:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:38.993:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:40:38.994:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:38.999:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:39.001:  Stopping Kettle Server 1ebv3my6-5880 on port 8081
20:40:39.001:  Kettle Server 1ebv3my6-5880 on port 8081 is stopped
20:40:39.017:  Successfully queued test CORS middleware no credential tests
20:40:39.017:  jq: Test concluded - Module "kettle.tests.CORS.config tests" Test name "CORS middleware tests": 11/11 passed - PASS
20:40:39.046:  Initializing the Express app
20:40:39.046:  Initializing the HTTP server
20:40:39.049:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:39.049:  Opening Kettle Server on port 8081
20:40:39.050:  Kettle Server 1ebv3my6-6041 is listening on port 8081
20:40:39.051:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.052:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:39.058:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:39.060:  Stopping Kettle Server 1ebv3my6-6041 on port 8081
20:40:39.060:  Kettle Server 1ebv3my6-6041 on port 8081 is stopped
20:40:39.078:  Successfully queued test CORS middleware custom origin tests
20:40:39.078:  jq: Test concluded - Module "kettle.tests.CORS.noCred.config tests" Test name "CORS middleware no credential tests": 7/7 passed - PASS
20:40:39.100:  Initializing the Express app
20:40:39.100:  Initializing the HTTP server
20:40:39.102:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:39.102:  Opening Kettle Server on port 8081
20:40:39.102:  Kettle Server 1ebv3my6-6188 is listening on port 8081
20:40:39.102:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.103:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:39.109:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:39.111:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.112:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:40:39.117:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:40:39.119:  Stopping Kettle Server 1ebv3my6-6188 on port 8081
20:40:39.119:  Kettle Server 1ebv3my6-6188 on port 8081 is stopped
20:40:39.135:  Successfully queued test No CORS middleware tests
20:40:39.136:  jq: Test concluded - Module "kettle.tests.CORS.origin.config tests" Test name "CORS middleware custom origin tests": 14/14 passed - PASS
20:40:39.157:  Initializing the Express app
20:40:39.158:  Initializing the HTTP server
20:40:39.159:  Registering request handler {
    "type": "kettle.tests.noCORS.handler",
    "route": "/",
    "method": "get, options"
}
20:40:39.159:  Opening Kettle Server on port 8081
20:40:39.159:  Kettle Server 1ebv3my6-6349 is listening on port 8081
20:40:39.160:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.171:  Invoking handler kettle.tests.noCORS.handler for route / with expectedGrade kettle.request.http
20:40:39.177:  Kettle server allocated request object with type kettle.tests.noCORS.handler
20:40:39.179:  Stopping Kettle Server 1ebv3my6-6349 on port 8081
20:40:39.179:  Kettle Server 1ebv3my6-6349 on port 8081 is stopped
20:40:39.211:  Successfully queued test Session tests
20:40:39.211:  jq: Test concluded - Module "kettle.tests.CORS.noCORS.config tests" Test name "No CORS middleware tests": 6/6 passed - PASS
20:40:39.242:  Initializing the Express app
20:40:39.243:  Initializing the HTTP server
20:40:39.245:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:40:39.245:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:40:39.245:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:40:39.245:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:40:39.245:  Opening Kettle Server on port 8081
20:40:39.246:  Kettle Server 1ebv3my6-6526 is listening on port 8081
20:40:39.246:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:39.247:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:39.253:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:39.255:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:39.256:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:39.265:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:39.269:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:40:39.270:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:40:39.277:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:40:39.282:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:39.282:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:39.290:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:39.294:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:39.294:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:39.300:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:39.302:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:40:39.303:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:40:39.310:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:40:39.313:  Stopping Kettle Server 1ebv3my6-6526 on port 8081
20:40:39.313:  Kettle Server 1ebv3my6-6526 on port 8081 is stopped
20:40:39.339:  Successfully queued test WebSockets tests
20:40:39.339:  jq: Test concluded - Module "kettle.tests.session.config tests" Test name "Session tests": 24/24 passed - PASS
20:40:39.374:  Initializing the Express app
20:40:39.375:  Initializing the HTTP server
20:40:39.376:  Initializing the ws server
20:40:39.377:  Registering request handler {
    "type": "kettle.tests.ws.testSocket.handler",
    "route": "/socket_path"
}
20:40:39.377:  Registering request handler {
    "type": "kettle.tests.ws.testGet.handler",
    "route": "/"
}
20:40:39.377:  Registering request handler {
    "type": "kettle.tests.ws.testClose.handler",
    "route": "/close_path"
}
20:40:39.377:  Opening Kettle Server on port 8081
20:40:39.377:  Kettle Server 1ebv3my6-6838 is listening on port 8081
20:40:39.378:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:39.380:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:39.388:  Kettle server allocated request object with type kettle.tests.ws.testSocket.handler
20:40:39.389:  Received WebSockets connection on path /socket_path
20:40:39.394:  kettle.test.request.ws client message{"success":true}
20:40:39.396:  kettle.test.request.ws client message{"success":true}
20:40:39.396:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.398:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.http
20:40:39.404:  Kettle server allocated request object with type kettle.tests.ws.testGet.handler
20:40:39.408:  Sending a GET request to: http://127.0.0.1:8081/socket_path
20:40:39.409:  kettle.test.request.ws closed, response code: 1005, reason: ""
20:40:39.409:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.http
20:40:39.416:  Kettle server allocated request object with type kettle.request.http.mismatch
20:40:39.418:  connecting ws.WebSocket to: ws://127.0.0.1:8081/ with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/"
}
20:40:39.419:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.ws
20:40:39.427:  Kettle server allocated request object with type kettle.request.ws.mismatch
20:40:39.429:  connecting ws.WebSocket to: ws://127.0.0.1:8081/close_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/close_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/close_path"
}
20:40:39.430:  Invoking handler kettle.tests.ws.testClose.handler for route /close_path with expectedGrade kettle.request.ws
20:40:39.437:  Kettle server allocated request object with type kettle.tests.ws.testClose.handler
20:40:39.438:  Received WebSockets connection on path /close_path
20:40:39.444:  kettle.test.request.ws closed, response code: 1000, reason: ""
20:40:39.445:  Stopping Kettle Server 1ebv3my6-6838 on port 8081
20:40:39.445:  Kettle Server 1ebv3my6-6838 on port 8081 is stopped
20:40:39.446:  kettle.test.request.ws client error{
    
}
20:40:39.447:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:39.485:  Successfully queued test WebSockets Session tests
20:40:39.485:  jq: Test concluded - Module "kettle.tests.webSockets.config tests" Test name "WebSockets tests": 17/17 passed - PASS
20:40:39.512:  Initializing the Express app
20:40:39.513:  Initializing the HTTP server
20:40:39.514:  Initializing the ws server
20:40:39.514:  Registering request handler {
    "type": "kettle.tests.session.ws.testSocket.handler",
    "route": "/socket_path"
}
20:40:39.515:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:40:39.515:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:40:39.515:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:40:39.515:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:40:39.515:  Opening Kettle Server on port 8081
20:40:39.516:  Kettle Server 1ebv3my6-7145 is listening on port 8081
20:40:39.516:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:39.517:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:39.522:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:39.525:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:39.535:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:39.542:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:39.545:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:40:39.546:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:40:39.552:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:40:39.555:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:40:39.556:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:40:39.563:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:40:39.566:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        "Cookie": [
            "kettle.sid=s%3AJNo0zv9K1uUBvuR6q2H9F3V3oJFPGvH4.CQtIM3h0Vd05akhs%2BbVAErx70YAicaZcHKy8mLjHb8Y; Path=/; HttpOnly"
        ]
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:39.567:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:39.577:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:40:39.579:  Received WebSockets connection on path /socket_path
20:40:39.581:  testSocket.receiveMessage got session {
    "cookie": {
        "path": "/",
        "_expires": null,
        "originalMaxAge": null,
        "httpOnly": true,
        "secure": false,
        "expires": [Synthetic property],
        "maxAge": [Synthetic property],
        "data": [Synthetic property],
        "serialize": [Synthetic property],
        "toJSON": [Synthetic property]
    },
    "token": "123"
}
20:40:39.583:  kettle.test.request.ws client message{"type":"midSuccess","payload":{"token":"123","success":true}}
20:40:39.583:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:40:39.584:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:40:39.592:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:40:39.595:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:40:39.595:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:40:39.601:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:40:39.603:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:40:39.604:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:40:39.610:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:40:39.613:  Stopping Kettle Server 1ebv3my6-7145 on port 8081
20:40:39.613:  Kettle Server 1ebv3my6-7145 on port 8081 is stopped
20:40:39.613:  kettle.test.request.ws client error{
    
}
20:40:39.614:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:39.640:  Successfully queued test Error tests I
20:40:39.640:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:40:39.640:  Failing to resume callback for request 1ebv3my6-7323 which has already concluded
20:40:39.640:  jq: Test concluded - Module "kettle.tests.session.webSockets.config tests" Test name "WebSockets Session tests": 31/31 passed - PASS
20:40:39.669:  Initializing the Express app
20:40:39.670:  Initializing the HTTP server
20:40:39.673:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:39.673:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:39.673:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:39.673:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:39.673:  Opening Kettle Server on port 8081
20:40:39.674:  Kettle Server 1ebv3my6-7496 is listening on port 8081
20:40:39.675:  FATAL ERROR: Uncaught exception: "Global Error Triggered".triggerError is not a function
TypeError: "Global Error Triggered".triggerError is not a function
    at kettle.tests.triggerGlobalErrorSync (/data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:15:778)
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:16:14
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:39.676:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.677:  Invoking handler kettle.tests.error.requestError for route / with expectedGrade kettle.request.http
20:40:39.688:  Kettle server allocated request object with type kettle.tests.error.requestError
20:40:39.689:  ASSERTION FAILED: Simulated assertion failed in request - this failure is expected: 
20:40:39.689:  Current activity: 
20:40:39.689:      while invoking invoker with name handleRequest and record {
    "func": undefined,
    "funcName": "fluid.fail",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "Simulated assertion failed in request - this failure is expected: "
    ],
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: 1ebv3my6-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1ebv3my6-7437.tests.configuration.server.app.requests.request
20:40:39.689:      while firing to listener to event named onHandle of component component { typeName: "kettle.tests.error.requestError id: 1ebv3my6-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1ebv3my6-7437.tests.configuration.server.app.requests.request
20:40:39.689:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.error.requestError id: 1ebv3my6-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1ebv3my6-7437.tests.configuration.server.app.requests.request
20:40:39.692:  kettle.tests.error.handleFullRequest forwarding error to express
20:40:39.692:  kettle.tests.server.upgradeError received error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:39.692:  kettle.tests.server.upgradeError throwing uncaught exception error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:40:39.692:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2781:25)
    at kettle.request.handleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:97:157)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.request.handleRequestTask (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:104:25)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.sequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:270:19)
    at kettle.request.sequenceRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:120:169)
    at kettle.request.initiateHandleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:132:530)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.concludeComponentInit (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1536:26)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2208:25
    at Array.forEach (<anonymous>)
    at localWorkflowTask (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2207:37)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2329:27)
    at fluid.tryCatch (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:241:20)
    at fluid.commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2314:11)
    at fluid.concludeAnyTreeTransaction (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1429:15)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.server.checkCreateRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:53:303)
    at fluid.componentConstructor.dispatcher (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:59:232)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:69:213
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at expressInit (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/init.js:40:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at query (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/query.js:45:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:174:3)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/application.js:174:10)
    at Server.app (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/express.js:39:9)
    at Server.emit (node:events:527:28)
    at parserOnIncoming (node:_http_server:993:12)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)
20:40:39.693:  Current activity: 
20:40:39.693:      while invoking invoker with name handleFullRequest and record {
    "func": undefined,
    "funcName": "kettle.tests.error.handleFullRequest",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": {
        "value": "NO_ARGUMENTS"
    },
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: 1ebv3my6-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-1ebv3my6-7437.tests.configuration.server.app.requests.request
20:40:39.693:  ASSERTION FAILED: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
20:40:39.694:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:5 .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
Error: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:51:23)
    at that.complete (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:72:21)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:58:18)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:444
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:39.696:  Sending a GET request to: http://127.0.0.1:8081/errorCode
20:40:39.697:  Invoking handler kettle.tests.error.requestErrorCode.handler for route /errorCode with expectedGrade kettle.request.http
20:40:39.706:  Kettle server allocated request object with type kettle.tests.error.requestErrorCode.handler
20:40:39.709:  Stopping Kettle Server 1ebv3my6-7496 on port 8081
20:40:39.709:  Kettle Server 1ebv3my6-7496 on port 8081 is stopped
20:40:39.729:  Successfully queued test Error tests II
20:40:39.729:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests I": 4/4 passed - PASS
20:40:39.757:  Initializing the Express app
20:40:39.757:  Initializing the HTTP server
20:40:39.760:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:39.760:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:39.760:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:39.760:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:39.760:  Opening Kettle Server on port 8081
20:40:39.761:  Kettle Server 1ebv3my6-7658 is listening on port 8081
20:40:39.762:  Sending a GET request to: http://127.0.0.1:8081/errorAsync
20:40:39.772:  Invoking handler kettle.tests.error.requestErrorAsync.handler for route /errorAsync with expectedGrade kettle.request.http
20:40:39.778:  Kettle server allocated request object with type kettle.tests.error.requestErrorAsync.handler
20:40:39.779:  FATAL ERROR: Uncaught exception: Uncharacterised error which should cause request failure
Error: Uncharacterised error which should cause request failure
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:13:1376
    at wrappedCallback (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:51:625)
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:40:39.781:  Stopping Kettle Server 1ebv3my6-7658 on port 8081
20:40:39.782:  Kettle Server 1ebv3my6-7658 on port 8081 is stopped
20:40:39.796:  Successfully queued test Plaintext response error test
20:40:39.796:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests II": 1/1 passed - PASS
20:40:39.817:  Initializing the Express app
20:40:39.817:  Initializing the HTTP server
20:40:39.819:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:40:39.819:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:40:39.819:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:40:39.819:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:40:39.819:  Opening Kettle Server on port 8081
20:40:39.819:  Kettle Server 1ebv3my6-7796 is listening on port 8081
20:40:39.820:  Sending a GET request to: http://127.0.0.1:8081/plainRequestError
20:40:39.821:  Invoking handler kettle.tests.error.plainRequestError.handler for route /plainRequestError with expectedGrade kettle.request.http
20:40:39.827:  Kettle server allocated request object with type kettle.tests.error.plainRequestError.handler
20:40:39.829:  Stopping Kettle Server 1ebv3my6-7796 on port 8081
20:40:39.829:  Kettle Server 1ebv3my6-7796 on port 8081 is stopped
20:40:39.847:  Successfully queued test Bad config: missing handler test
20:40:39.847:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Plaintext response error test": 2/2 passed - PASS
20:40:39.870:  Initializing the Express app
20:40:39.870:  Initializing the HTTP server
20:40:39.872:  Registering request handler {
    "type": "kettle.tests.badRequest.missing.handler",
    "route": "/",
    "method": "get"
}
20:40:39.872:  Opening Kettle Server on port 8081
20:40:39.872:  Kettle Server 1ebv3my6-7940 is listening on port 8081
20:40:39.873:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.873:  Invoking handler kettle.tests.badRequest.missing.handler for route / with expectedGrade kettle.request.http
20:40:39.874:  ASSERTION FAILED: Error in Kettle application definition - couldn't load handler kettle.tests.badRequest.missing.handler and gradeNames [] to a component derived from kettle.request - got defaults of undefined
20:40:39.875:  Stopping Kettle Server 1ebv3my6-7940 on port 8081
20:40:39.875:  Kettle Server 1ebv3my6-7940 on port 8081 is stopped
20:40:39.896:  Successfully queued test Bad config: missing handler type test
20:40:39.896:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:40:39.924:  Initializing the Express app
20:40:39.924:  Initializing the HTTP server
20:40:39.927:  Registering request handler {
    "type": null,
    "route": "/",
    "method": "get"
}
20:40:39.927:  Opening Kettle Server on port 8081
20:40:39.928:  Kettle Server 1ebv3my6-8066 is listening on port 8081
20:40:39.929:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.943:  ASSERTION FAILED: Error in Kettle application definition - handler {
    "method": "get",
    "type": null,
    "route": "/",
    "keys": [],
    "regexp": {
        "keys": []
    }
} must have a request grade name registered as member "type"
20:40:39.944:  Stopping Kettle Server 1ebv3my6-8066 on port 8081
20:40:39.944:  Kettle Server 1ebv3my6-8066 on port 8081 is stopped
20:40:39.962:  Successfully queued test Bad config: missing handler test
20:40:39.962:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handlerType.config.mergedConfig tests" Test name "Bad config: missing handler type test": 4/4 passed - PASS
20:40:39.984:  Initializing the Express app
20:40:39.984:  Initializing the HTTP server
20:40:39.986:  Registering request handler {
    "type": "kettle.tests.badRequest.throwing.handler",
    "route": "/",
    "method": "get"
}
20:40:39.986:  Opening Kettle Server on port 8081
20:40:39.986:  Kettle Server 1ebv3my6-8192 is listening on port 8081
20:40:39.987:  Sending a GET request to: http://127.0.0.1:8081/
20:40:39.987:  Invoking handler kettle.tests.badRequest.throwing.handler for route / with expectedGrade kettle.request.http
20:40:39.994:  Kettle server allocated request object with type kettle.tests.badRequest.throwing.handler
20:40:39.996:  Stopping Kettle Server 1ebv3my6-8192 on port 8081
20:40:39.996:  Kettle Server 1ebv3my6-8192 on port 8081 is stopped
20:40:40.014:  Successfully queued test Bad config: missing middleware test
20:40:40.014:  jq: Test concluded - Module "kettle.tests.badRequest.throwing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:40:40.041:  Initializing the Express app
20:40:40.041:  Initializing the HTTP server
20:40:40.044:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.missing.handler",
    "route": "/",
    "method": "get"
}
20:40:40.044:  Opening Kettle Server on port 8081
20:40:40.045:  Kettle Server 1ebv3my6-8339 is listening on port 8081
20:40:40.046:  Sending a GET request to: http://127.0.0.1:8081/
20:40:40.047:  Invoking handler kettle.tests.badRequest.middleware.missing.handler for route / with expectedGrade kettle.request.http
20:40:40.055:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.missing.handler
20:40:40.055:  ASSERTION FAILED: Couldn't resolve reference {middlewareHolder}.missingMiddleware from member "middleware" of record {
    "middleware": "{middlewareHolder}.missingMiddleware"
} to a middleware component for a kettle.tests.badRequest.middleware.missing.handler requestMiddleware  entry: got undefined
20:40:40.055:  Current activity: 
20:40:40.055:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.missing.handler id: 1ebv3my6-8410" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.missing.handler"]} at path serverEnvironment-1ebv3my6-8285.tests.configuration.server.app.requests.request
20:40:40.057:  Unhandled promise rejection: {
    "isError": true,
    "message": "Couldn't resolve reference {middlewareHolder}.missingMiddleware from member \"middleware\" of record "
}
20:40:40.058:  Stopping Kettle Server 1ebv3my6-8339 on port 8081
20:40:40.058:  Kettle Server 1ebv3my6-8339 on port 8081 is stopped
20:40:40.076:  Successfully queued test Bad config: bad middleware test
20:40:40.076:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.missing.config.mergedConfig tests" Test name "Bad config: missing middleware test": 4/4 passed - PASS
20:40:40.099:  Initializing the Express app
20:40:40.099:  Initializing the HTTP server
20:40:40.101:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.bad.handler",
    "route": "/",
    "method": "get"
}
20:40:40.101:  Opening Kettle Server on port 8081
20:40:40.101:  Kettle Server 1ebv3my6-8485 is listening on port 8081
20:40:40.102:  Sending a GET request to: http://127.0.0.1:8081/
20:40:40.110:  Invoking handler kettle.tests.badRequest.middleware.bad.handler for route / with expectedGrade kettle.request.http
20:40:40.119:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.bad.handler
20:40:40.119:  ASSERTION FAILED: Middleware component {
    "typeName": "kettle.tests.badRequest.bad.middleware",
    "id": "1ebv3my6-8557",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "kettle.middleware",
            "kettle.plainMiddleware",
            "kettle.tests.badRequest.bad.middleware"
        ],
        "events": {
            "onCreate": "promise",
            "onDestroy": "promise",
            "afterDestroy": "promise"
        },
        "invokers": {
            "handle": {
                "func": undefined,
                "funcName": "kettle.plainMiddleware.resolve",
                "listener": undefined,
                "this": undefined,
                "method": undefined,
                "changePath": undefined,
                "value": undefined,
                "componentSource": "kettle.plainMiddleware",
                "args": [
                    "{that}",
                    "{arguments}.0",
                    " .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] with type kettle.tests.badRequest.bad.middleware is improperly configured - an option named "middleware" of function type is required - got undefined
20:40:40.119:  Current activity: 
20:40:40.119:      while invoking invoker with name handle and record {
    "func": undefined,
    "funcName": "kettle.plainMiddleware.resolve",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "componentSource": "kettle.plainMiddleware",
    "args": [
        "{that}",
        "{arguments}.0",
        "{plainMiddleware}.options.asyncMiddleware"
    ]
} holding component component { typeName: "kettle.tests.badRequest.bad.middleware id: 1ebv3my6-8557" gradeNames: ["kettle.middleware","kettle.plainMiddleware","kettle.tests.badRequest.bad.middleware"]} at path serverEnvironment-1ebv3my6-8431.tests.configuration.server.app.requests.request.badMiddleware
20:40:40.119:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.bad.handler id: 1ebv3my6-8556" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.bad.handler"]} at path serverEnvironment-1ebv3my6-8431.tests.configuration.server.app.requests.request
20:40:40.121:  Unhandled promise rejection: {
    "isError": true,
    "message": "Middleware component "
}
20:40:40.122:  Stopping Kettle Server 1ebv3my6-8485 on port 8081
20:40:40.122:  Kettle Server 1ebv3my6-8485 on port 8081 is stopped
20:40:40.140:  Successfully queued test Bad config: static middleware with no path test
20:40:40.140:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.bad.config.mergedConfig tests" Test name "Bad config: bad middleware test": 4/4 passed - PASS
20:40:40.163:  Initializing the Express app
20:40:40.163:  Initializing the HTTP server
20:40:40.165:  Registering request handler {
    "type": "kettle.tests.badRequest.static.nopath.handler",
    "route": "/",
    "method": "get"
}
20:40:40.165:  Opening Kettle Server on port 8081
20:40:40.165:  Kettle Server 1ebv3my6-8635 is listening on port 8081
20:40:40.166:  Sending a GET request to: http://127.0.0.1:8081/
20:40:40.166:  Invoking handler kettle.tests.badRequest.static.nopath.handler for route / with expectedGrade kettle.request.http
20:40:40.173:  ASSERTION FAILED: Static middleware must have a root path configured to serve options - got undefined
20:40:40.173:  Current activity: 
20:40:40.173:      while constructing component of type kettle.middleware.static at path serverEnvironment-1ebv3my6-8581.tests.configuration.server.app.requests.request.badStatic
20:40:40.175:  Stopping Kettle Server 1ebv3my6-8635 on port 8081
20:40:40.175:  Kettle Server 1ebv3my6-8635 on port 8081 is stopped
20:40:40.203:  Successfully queued test Bad request: bad URL-encoded request parameter
20:40:40.203:  jq: Test concluded - Module "kettle.tests.badRequest.static.nopath.config.mergedConfig tests" Test name "Bad config: static middleware with no path test": 3/3 passed - PASS
20:40:40.227:  Initializing the Express app
20:40:40.228:  Initializing the HTTP server
20:40:40.229:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/route/:key",
    "method": "get"
}
20:40:40.229:  Opening Kettle Server on port 8081
20:40:40.230:  Kettle Server 1ebv3my6-8788 is listening on port 8081
20:40:40.230:  Sending a GET request to: http://127.0.0.1:8081/route/%ZZ
20:40:40.232:  Stopping Kettle Server 1ebv3my6-8788 on port 8081
20:40:40.232:  Kettle Server 1ebv3my6-8788 on port 8081 is stopped
20:40:40.251:  Successfully queued test Good request: bad URL-encoded request parameter
20:40:40.251:  jq: Test concluded - Module "kettle.tests.badRequest.badURL.config.mergedConfig tests" Test name "Bad request: bad URL-encoded request parameter": 3/3 passed - PASS
20:40:40.273:  Initializing the Express app
20:40:40.274:  Initializing the HTTP server
20:40:40.276:  Registering request handler {
    "type": "kettle.tests.goodRequest.emptyParameter.handler",
    "route": "/route/:key?",
    "method": "get"
}
20:40:40.277:  Opening Kettle Server on port 8081
20:40:40.277:  Kettle Server 1ebv3my6-8914 is listening on port 8081
20:40:40.278:  Sending a GET request to: http://127.0.0.1:8081/route
20:40:40.289:  Invoking handler kettle.tests.goodRequest.emptyParameter.handler for route /route/:key? with expectedGrade kettle.request.http
20:40:40.295:  Kettle server allocated request object with type kettle.tests.goodRequest.emptyParameter.handler
20:40:40.298:  Stopping Kettle Server 1ebv3my6-8914 on port 8081
20:40:40.298:  Kettle Server 1ebv3my6-8914 on port 8081 is stopped
20:40:40.317:  Successfully queued test Good request: double handling test
20:40:40.318:  jq: Test concluded - Module "kettle.tests.goodRequest.emptyParameter.config.mergedConfig tests" Test name "Good request: bad URL-encoded request parameter": 2/2 passed - PASS
20:40:40.338:  Initializing the Express app
20:40:40.339:  Initializing the HTTP server
20:40:40.340:  Registering request handler {
    "type": "kettle.tests.goodRequest.doubleResponse.handler",
    "route": "/",
    "method": "get"
}
20:40:40.340:  Opening Kettle Server on port 8081
20:40:40.341:  Kettle Server 1ebv3my6-9055 is listening on port 8081
20:40:40.341:  Sending a GET request to: http://127.0.0.1:8081/
20:40:40.342:  Invoking handler kettle.tests.goodRequest.doubleResponse.handler for route / with expectedGrade kettle.request.http
20:40:40.348:  Kettle server allocated request object with type kettle.tests.goodRequest.doubleResponse.handler
20:40:40.349:  Error in forwarding result {
    "message": "Second response"
} to promise resolve: promise has already received resolve
20:40:40.352:  Stopping Kettle Server 1ebv3my6-9055 on port 8081
20:40:40.352:  Kettle Server 1ebv3my6-9055 on port 8081 is stopped
20:40:40.371:  Successfully queued test Good request: options request
20:40:40.371:  jq: Test concluded - Module "kettle.tests.goodRequest.doubleResponse.config.mergedConfig tests" Test name "Good request: double handling test": 2/2 passed - PASS
20:40:40.394:  Initializing the Express app
20:40:40.395:  Initializing the HTTP server
20:40:40.397:  Registering request handler {
    "type": "kettle.tests.goodRequest.options.handler",
    "method": "options",
    "route": "/"
}
20:40:40.398:  Opening Kettle Server on port 8081
20:40:40.398:  Kettle Server 1ebv3my6-9199 is listening on port 8081
20:40:40.399:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:40:40.400:  Invoking handler kettle.tests.goodRequest.options.handler for route / with expectedGrade kettle.request.http
20:40:40.408:  Kettle server allocated request object with type kettle.tests.goodRequest.options.handler
20:40:40.411:  Stopping Kettle Server 1ebv3my6-9199 on port 8081
20:40:40.411:  Kettle Server 1ebv3my6-9199 on port 8081 is stopped
20:40:40.429:  Successfully queued test Good request: mismatched route
20:40:40.430:  jq: Test concluded - Module "kettle.tests.goodRequest.options.config.mergedConfig tests" Test name "Good request: options request": 2/2 passed - PASS
20:40:40.453:  Initializing the Express app
20:40:40.453:  Initializing the HTTP server
20:40:40.454:  Skipping empty handler with key testHandler for app { typeName: "kettle.app id: 1ebv3my6-9346" gradeNames: ["kettle.app"]}
20:40:40.455:  Opening Kettle Server on port 8081
20:40:40.455:  Kettle Server 1ebv3my6-9343 is listening on port 8081
20:40:40.455:  Sending a GET request to: http://127.0.0.1:8081/route
20:40:40.465:  Kettle server getDispatcher found no matching handlers, continuing
20:40:40.466:  Stopping Kettle Server 1ebv3my6-9343 on port 8081
20:40:40.466:  Kettle Server 1ebv3my6-9343 on port 8081 is stopped
20:40:40.484:  Successfully queued test Good request: gradeNames for handler
20:40:40.484:  jq: Test concluded - Module "kettle.tests.goodRequest.mismatchRoute.config.mergedConfig tests" Test name "Good request: mismatched route": 2/2 passed - PASS
20:40:40.505:  Initializing the Express app
20:40:40.506:  Initializing the HTTP server
20:40:40.507:  Registering request handler {
    "type": "kettle.tests.goodRequest.gradeNames.handler",
    "gradeNames": "kettle.tests.goodRequest.gradeNames.mixin",
    "method": "get",
    "route": "/"
}
20:40:40.507:  Opening Kettle Server on port 8081
20:40:40.508:  Kettle Server 1ebv3my6-9463 is listening on port 8081
20:40:40.508:  Sending a GET request to: http://127.0.0.1:8081/
20:40:40.509:  Invoking handler kettle.tests.goodRequest.gradeNames.handler for route / with expectedGrade kettle.request.http
20:40:40.517:  Kettle server allocated request object with type kettle.tests.goodRequest.gradeNames.handler
20:40:40.520:  Stopping Kettle Server 1ebv3my6-9463 on port 8081
20:40:40.521:  Kettle Server 1ebv3my6-9463 on port 8081 is stopped
20:40:40.547:  Successfully queued test Simple MultiConfig Test
20:40:40.547:  jq: Test concluded - Module "kettle.tests.goodRequest.gradeNames.config.mergedConfig tests" Test name "Good request: gradeNames for handler": 2/2 passed - PASS
20:40:40.606:  Initializing the Express app
20:40:40.606:  Initializing the HTTP server
20:40:40.608:  Initializing the Express app
20:40:40.608:  Initializing the HTTP server
20:40:40.610:  Registering request handler {
    "type": "kettle.tests.multiConfig.target.get.handler",
    "route": "/",
    "method": "get"
}
20:40:40.610:  Opening Kettle Server on port 8088
20:40:40.611:  Registering request handler {
    "type": "kettle.tests.multiConfig.source.get.handler",
    "route": "/",
    "method": "get"
}
20:40:40.611:  Opening Kettle Server on port 8081
20:40:40.611:  Kettle Server 1ebv3my6-9605 is listening on port 8088
20:40:40.611:  Kettle Server 1ebv3my6-9604 is listening on port 8081
20:40:40.612:  Sending a GET request to: http://127.0.0.1:8081/
20:40:40.612:  Invoking handler kettle.tests.multiConfig.source.get.handler for route / with expectedGrade kettle.request.http
20:40:40.625:  Kettle server allocated request object with type kettle.tests.multiConfig.source.get.handler
20:40:40.625:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8088",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8088/",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:40:40.628:  Invoking handler kettle.tests.multiConfig.target.get.handler for route / with expectedGrade kettle.request.http
20:40:40.634:  Kettle server allocated request object with type kettle.tests.multiConfig.target.get.handler
20:40:40.650:  Stopping Kettle Server 1ebv3my6-9604 on port 8081
20:40:40.650:  Stopping Kettle Server 1ebv3my6-9605 on port 8088
20:40:40.650:  Kettle Server 1ebv3my6-9604 on port 8081 is stopped
20:40:40.650:  Kettle Server 1ebv3my6-9605 on port 8088 is stopped
20:40:40.672:  Successfully queued test Static hosting tests
20:40:40.672:  jq: Test concluded - Module "kettle.tests.multiConfig.head.config tests" Test name "Simple MultiConfig Test": 2/2 passed - PASS
20:40:40.706:  Initializing the Express app
20:40:40.707:  Initializing the HTTP server
20:40:40.708:  Registering request handler {
    "type": "kettle.tests.static.handler",
    "prefix": "/infusion",
    "route": "/*",
    "method": "get"
}
20:40:40.708:  Opening Kettle Server on port 8081
20:40:40.709:  Kettle Server 1ebv3my6-9870 is listening on port 8081
20:40:40.709:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:40:40.710:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:40:40.711:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:40.717:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:40.721:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:40.727:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:40.735:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.jsonx
20:40:40.736:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:40:40.742:  Kettle server allocated request object with type kettle.tests.static.handler
20:40:40.748:  Stopping Kettle Server 1ebv3my6-9870 on port 8081
20:40:40.748:  Kettle Server 1ebv3my6-9870 on port 8081 is stopped
20:40:40.783:  Successfully queued test Multer tests
20:40:40.783:  jq: Test concluded - Module "kettle.tests.static.config tests" Test name "Static hosting tests": 9/9 passed - PASS
20:40:40.863:  Initializing the Express app
20:40:40.864:  Initializing the HTTP server
20:40:40.867:  Registering request handler {
    "type": "kettle.tests.multer.handler.single",
    "route": "/multer-single",
    "method": "post"
}
20:40:40.867:  Registering request handler {
    "type": "kettle.tests.multer.handler.array",
    "route": "/multer-array",
    "method": "post"
}
20:40:40.867:  Registering request handler {
    "type": "kettle.tests.multer.handler.fields",
    "route": "/multer-fields",
    "method": "post"
}
20:40:40.867:  Registering request handler {
    "type": "kettle.tests.multer.handler.imageOnly",
    "route": "/multer-image-only",
    "method": "post"
}
20:40:40.886:  Registering request handler {
    "type": "kettle.tests.multer.handler.diskStorage",
    "route": "/multer-disk-storage",
    "method": "post"
}
20:40:40.886:  Opening Kettle Server on port 8081
20:40:40.887:  Kettle Server 1ebv3my6-10111 is listening on port 8081
20:40:40.887:  Sending a POST request to: http://127.0.0.1:8081/multer-single
20:40:40.891:  Invoking handler kettle.tests.multer.handler.single for route /multer-single with expectedGrade kettle.request.http
20:40:40.898:  Kettle server allocated request object with type kettle.tests.multer.handler.single
20:40:40.910:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:40:40.912:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:40:40.919:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:40:40.926:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:40:40.928:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:40:40.934:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:40:40.942:  Sending a POST request to: http://127.0.0.1:8081/multer-fields
20:40:40.944:  Invoking handler kettle.tests.multer.handler.fields for route /multer-fields with expectedGrade kettle.request.http
20:40:40.950:  Kettle server allocated request object with type kettle.tests.multer.handler.fields
20:40:40.961:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:40:40.963:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:40:40.969:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:40:40.979:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:40:40.980:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:40:40.986:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:40:40.991:  Sending a POST request to: http://127.0.0.1:8081/multer-disk-storage
20:40:40.993:  Invoking handler kettle.tests.multer.handler.diskStorage for route /multer-disk-storage with expectedGrade kettle.request.http
20:40:41.000:  Kettle server allocated request object with type kettle.tests.multer.handler.diskStorage
20:40:41.007:  Stopping Kettle Server 1ebv3my6-10111 on port 8081
20:40:41.007:  Kettle Server 1ebv3my6-10111 on port 8081 is stopped
20:40:41.025:  Successfully queued test Asynchronous request startup: basic fetch test
20:40:41.025:  jq: Test concluded - Module "kettle.tests.multer.config tests" Test name "Multer tests": 29/29 passed - PASS
20:40:41.047:  Initializing the Express app
20:40:41.047:  Initializing the HTTP server
20:40:41.048:  Registering request handler {
    "type": "kettle.tests.asyncRequest.handler",
    "route": "/",
    "method": "get"
}
20:40:41.049:  Opening Kettle Server on port 8081
20:40:41.049:  Kettle Server 1ebv3my6-10444 is listening on port 8081
20:40:41.049:  Sending a GET request to: http://127.0.0.1:8081/
20:40:41.050:  Invoking handler kettle.tests.asyncRequest.handler for route / with expectedGrade kettle.request.http
20:40:41.071:  Kettle server allocated request object with type kettle.tests.asyncRequest.handler
20:40:41.074:  Stopping Kettle Server 1ebv3my6-10444 on port 8081
20:40:41.075:  Kettle Server 1ebv3my6-10444 on port 8081 is stopped
20:40:41.097:  Successfully queued test Request abort test
20:40:41.097:  jq: Test concluded - Module "kettle.tests.asyncRequest.handler.config.mergedConfig tests" Test name "Asynchronous request startup: basic fetch test": 2/2 passed - PASS
20:40:41.118:  Initializing the Express app
20:40:41.118:  Initializing the HTTP server
20:40:41.120:  Registering request handler {
    "type": "kettle.tests.requestAbort.handler",
    "route": "/",
    "method": "get"
}
20:40:41.120:  Opening Kettle Server on port 8081
20:40:41.120:  Kettle Server 1ebv3my6-10616 is listening on port 8081
20:40:41.121:  Sending a GET request to: http://127.0.0.1:8081/
20:40:41.122:  Invoking handler kettle.tests.requestAbort.handler for route / with expectedGrade kettle.request.http
20:40:41.131:  Kettle server allocated request object with type kettle.tests.requestAbort.handler
20:40:41.633:  Error marking thread to request 1ebv3my6-10685 which has already been destroyed
20:40:42.134:  Stopping Kettle Server 1ebv3my6-10616 on port 8081
20:40:42.134:  Kettle Server 1ebv3my6-10616 on port 8081 is stopped
20:40:42.147:  jq: Test concluded - Module "kettle.tests.requestAbort.config.mergedConfig tests" Test name "Request abort test": 2/2 passed - PASS
20:40:42.149:  jq: ***************
20:40:42.149:  jq: All tests concluded: 358/358 total passed in 7447ms - PASS
20:40:42.149:  jq: ***************
************* run test done *************
variantsDepsNum: 2
/data/js-variants/multee
2
kettle is testing ./VariantsDeps/session/variant2/session
************* npm unlink module *************

up to date, audited 949 packages in 4s

109 packages are looking for funding
  run `npm fund` for details

20 vulnerabilities (4 moderate, 14 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible, run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

up to date, audited 1 package in 104ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

changed 1 package, and audited 3 packages in 736ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************
************* npm link module done *************
************* start run test *************

> kettle@2.3.0 pretest
> npx rimraf coverage/*


> kettle@2.3.0 test
> nyc --reporter=html node tests/all-tests.js

Infusion at path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion is at top level 
20:48:14.533:  Registering module subbifier from path /data/js-variants/multee/
20:48:14.534:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle/
20:48:14.534:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/
20:48:14.534:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:14.541:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/node-jqunit/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:14.953:  Successfully queued test JSON line number diagnostic test
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:15.100:  Registering module fluid-pouchdb from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb
20:48:15.226:  Registering module fluid-express from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/fluid-express
20:48:15.535:  ASSERTION FAILED: kettle.JSON.parse called on non-string object 3
20:48:15.539:  Unhandled promise rejection: {
    "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING'"
}
20:48:15.553:  jq: Test concluded - Test name "kettle JSON parsing error tests": 2/2 passed - PASS
20:48:15.554:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:48:15.568:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON": 2/2 passed - PASS
20:48:15.582:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON": 1/1 passed - PASS
20:48:15.584:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:48:15.598:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON5": 2/2 passed - PASS
20:48:15.611:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON5": 1/1 passed - PASS
20:48:15.624:  jq: Test concluded - Test name "kettle.JSON.readFileSync of nonexistent file": 1/1 passed - PASS
20:48:15.654:  Initializing the Express app
20:48:15.655:  Initializing the HTTP server
20:48:15.658:  Opening Kettle Server on port 8081
20:48:15.660:  Kettle Server 8zrhcmmg-176 is listening on port 8081
20:48:15.660:  Stopping Kettle Server 8zrhcmmg-176 on port 8081
20:48:15.661:  Kettle Server 8zrhcmmg-176 on port 8081 is stopped
20:48:15.674:  jq: Test concluded - Test name "Kettle server initialisation test": 1/1 passed - PASS
20:48:15.674:  Loader running configuration name kettle.tests.HTTPMethods.config
20:48:15.716:  Initializing the Express app
20:48:15.717:  Initializing the HTTP server
20:48:15.720:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:15.722:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:15.722:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:15.722:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:15.722:  Opening Kettle Server on port 8081
20:48:15.730:  Sending a GET request to: http://127.0.0.1:8081/
20:48:15.735:  Kettle Server 8zrhcmmg-241 is listening on port 8081
20:48:15.743:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:15.749:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:15.757:  Stopping Kettle Server 8zrhcmmg-241 on port 8081
20:48:15.758:  Kettle Server 8zrhcmmg-241 on port 8081 is stopped
20:48:15.771:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and args": 2/2 passed - PASS
20:48:15.771:  Loader running configuration name kettle.tests.HTTPMethods.config
20:48:15.796:  Initializing the Express app
20:48:15.797:  Initializing the HTTP server
20:48:15.800:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:15.800:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:15.800:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:15.801:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:15.801:  Opening Kettle Server on port 8081
20:48:15.804:  Sending a GET request to: http://127.0.0.1:8081/
20:48:15.805:  Kettle Server 8zrhcmmg-351 is listening on port 8081
20:48:15.814:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:15.819:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:15.821:  Stopping Kettle Server 8zrhcmmg-351 on port 8081
20:48:15.822:  Kettle Server 8zrhcmmg-351 on port 8081 is stopped
20:48:15.835:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and NODE_ENV": 2/2 passed - PASS
20:48:15.835:  ASSERTION FAILED: No configuration specified in either 1st command line argument, NODE_ENV or internal default
20:48:15.849:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config name": 1/1 passed - PASS
20:48:15.849:  ASSERTION FAILED: Config path must be specified as 1st command line argument
20:48:15.863:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config path": 1/1 passed - PASS
20:48:15.868:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:48:15.884:  Successfully queued test JSON line number diagnostic test
20:48:15.884:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:48:15.898:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "GPII-2147: Testing that localhost is properly replaced by 127.0.0.1 in prepareRequestOptions": 1/1 passed - PASS
20:48:15.926:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource basic init tests": 8/8 passed - PASS
20:48:15.937:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "x-custom-header": "x-custom-value",
        "x-custom-header2": "x-custom-value2"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": 999,
    "pathname": "/path",
    "search": "",
    "family": 4,
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:999/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:15.950:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:48:15.960:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "pathname": "/device",
    "search": "",
    "url": "http://localhost:998/device",
    "port": 998,
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:15.973:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:48:15.981:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:15.988:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:16.003:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-73 censoring test": 6/6 passed - PASS
20:48:16.028:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-38 derived writable dataSource test": 1/1 passed - PASS
20:48:16.048:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Reading file in formenc encoding": 1/1 passed - PASS
20:48:16.070:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Writing file in formenc encoding": 1/1 passed - PASS
20:48:16.081:  ASSERTION FAILED: Cannot operate file dataSource {
    "typeName": "kettle.tests.dataSource.fileWithoutPath",
    "id": "8zrhcmmg-628",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "fluid.contextAware",
            "fluid.dataSource",
            "kettle.dataSource.file",
            "kettle.tests.dataSource.fileWithoutPath"
        ],
        "contextAwareness": {
            "writable": {
                "checks": {
                    "writableValue": {
                        "contextValue": "{fluid.dataSource}.options.writable",
                        "gradeNames": "{fluid.dataSource}.options.writableGrade"
                    }
                }
            }
        },
        "writable": false,
        "components": {
            "encoding": {
                "0": {
                    "type": "fluid.dataSource.encoding.JSON"
                },
                "length": 1
            }
        },
        "events": {
            .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] without an option named "path"
20:48:16.082:  Current activity: 
20:48:16.082:      while firing to listener to event named onRead of component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: 8zrhcmmg-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-8zrhcmmg-628
20:48:16.082:      while invoking invoker with name get and record {
    "func": undefined,
    "funcName": "fluid.dataSource.get",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "{that}",
        "{arguments}.0",
        "{arguments}.1"
    ],
    "componentSource": "fluid.dataSource"
} holding component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: 8zrhcmmg-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-8zrhcmmg-628
20:48:16.096:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource without path": 2/2 passed - PASS
20:48:16.133:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Attached URLResolver tests": 2/2 passed - PASS
20:48:16.161:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present environment substitution": 1/1 passed - PASS
20:48:16.181:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent environment substitution": 1/1 passed - PASS
20:48:16.198:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present file substitution": 1/1 passed - PASS
20:48:16.216:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent file substitution": 1/1 passed - PASS
20:48:16.234:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test args substitution": 1/1 passed - PASS
20:48:16.238:  Registering module test-module from path /data/js-variants/multee/Clients/session/kettle/tests/configs/node_modules/test-module
20:48:16.269:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults with types": 14/14 passed - PASS
20:48:16.284:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults without type": 4/4 passed - PASS
20:48:16.303:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config with "loadConfig" directive": 2/2 passed - PASS
20:48:16.316:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test parsing command line arguments": 4/4 passed - PASS
20:48:16.317:  ASSERTION FAILED: Error in config file at path undefined - key "distributeOptions" found, where the only legal options are type, options, loadConfigs, mergeConfigs, require
20:48:16.330:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Config with bad top-level keys": 1/1 passed - PASS
20:48:16.332:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:48:16.352:  Successfully queued test Simple get test
20:48:16.352:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:48:16.370:  Successfully queued test Simple get test
20:48:16.370:  jq: Test concluded - Module "1. Testing file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.393:  Successfully queued test Simple get test
20:48:16.393:  jq: Test concluded - Module "2. Testing file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.412:  Successfully queued test Simple get test
20:48:16.412:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.429:  Successfully queued test Simple get test
20:48:16.429:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.446:  Successfully queued test Simple get test
20:48:16.446:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:48:16.462:  Successfully queued test Simple get test
20:48:16.462:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.479:  Successfully queued test Simple get test
20:48:16.479:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:16.501:  Successfully queued test Simple get test
20:48:16.509:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:16.524:  Successfully queued test Simple get test
20:48:16.524:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:16.543:  Successfully queued test Simple get test
20:48:16.543:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:16.560:  Successfully queued test Simple get test
20:48:16.560:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:16.581:  Successfully queued test Simple set test
20:48:16.581:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:16.600:  Successfully queued test Simple set test
20:48:16.600:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:48:16.627:  Successfully queued test Simple set test
20:48:16.627:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding" Test name "Simple set test": 1/1 passed - PASS
20:48:16.652:  Successfully queued test Simple set test
20:48:16.652:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:48:16.672:  Successfully queued test Simple set test
20:48:16.680:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:48:16.700:  Successfully queued test Simple set test
20:48:16.701:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:48:16.718:  Successfully queued test Simple get test
20:48:16.719:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:48:16.735:  Successfully queued test Simple get test
20:48:16.735:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.753:  Successfully queued test Simple get test
20:48:16.753:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:48:16.769:  Successfully queued test Simple get test
20:48:16.769:  jq: Test concluded - Module "1. Testing file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.802:  Successfully queued test Simple get test
20:48:16.802:  jq: Test concluded - Module "2. Testing file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.826:  Successfully queued test Simple get test
20:48:16.826:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.849:  Successfully queued test Simple get test
20:48:16.850:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.869:  Successfully queued test Simple get test
20:48:16.877:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.895:  Successfully queued test Simple get test
20:48:16.896:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.912:  Successfully queued test Simple get test
20:48:16.912:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.930:  Successfully queued test Simple get test
20:48:16.930:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.946:  Successfully queued test Simple get test
20:48:16.946:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.964:  Successfully queued test Simple get test
20:48:16.964:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:16.981:  Successfully queued test Simple get test
20:48:16.981:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:17.002:  Successfully queued test Simple set test
20:48:17.002:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:17.021:  Successfully queued test Simple set test
20:48:17.021:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:17.040:  Successfully queued test Simple set test
20:48:17.048:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:17.068:  Successfully queued test Simple set test
20:48:17.068:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:17.095:  Successfully queued test Simple set test
20:48:17.096:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:17.116:  Successfully queued test Simple set test
20:48:17.116:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:17.134:  Successfully queued test Simple get test
20:48:17.134:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:17.150:  Successfully queued test Simple get test
20:48:17.150:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:17.191:  Initializing the Express app
20:48:17.191:  Initializing the HTTP server
20:48:17.194:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:17.194:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.redirectingRequestHandler",
    "route": "/redirect",
    "method": "get"
}
20:48:17.194:  Opening Kettle Server on port 8081
20:48:17.195:  Successfully queued test Simple get test
20:48:17.195:  Kettle Server 8zrhcmmg-2853 is listening on port 8081
20:48:17.195:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:17.196:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/redirect",
    "search": "",
    "url": "http://localhost:8081/redirect",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:17.199:  Invoking handler kettle.tests.dataSource.URL.redirectingRequestHandler for route /redirect with expectedGrade kettle.request.http
20:48:17.205:  Kettle server allocated request object with type kettle.tests.dataSource.URL.redirectingRequestHandler
20:48:17.209:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:17.217:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:17.229:  Stopping Kettle Server 8zrhcmmg-2853 on port 8081
20:48:17.229:  Kettle Server 8zrhcmmg-2853 on port 8081 is stopped
20:48:17.263:  Initializing the Express app
20:48:17.263:  Initializing the HTTP server
20:48:17.266:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:17.266:  Opening Kettle Server on port 8081
20:48:17.266:  Successfully queued test Resource model is initialised
20:48:17.266:  Kettle Server 8zrhcmmg-3005 is listening on port 8081
20:48:17.274:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "dataSource": {
        "typeName": "kettle.dataSource.URL",
        "id": "8zrhcmmg-3007",
        "lifecycleStatus": "treeConstructed",
        "destroy": { Function
            
        },
        "options": {
            "gradeNames": [
                "fluid.component",
                "fluid.contextAware",
                "fluid.dataSource",
                "fluid.dataSource.URL",
                "kettle.dataSource.URL"
            ],
            "contextAwareness": {
                "writable": {
                    "checks": {
                        "writableValue": {
                            "contextValue": "{fluid.dataSource}.options.writable",
                            "gradeNames": "{fluid.dataSource}.options.writableGrade"
                        }
    .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:48:17.275:  jq: Test concluded - Module "KETTLE-89: DataSource support for redirects" Test name "Simple get test": 3/3 passed - PASS
20:48:17.277:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:17.287:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:17.294:  Stopping Kettle Server 8zrhcmmg-3005 on port 8081
20:48:17.296:  Kettle Server 8zrhcmmg-3005 on port 8081 is stopped
20:48:17.370:  Initializing the Express app
20:48:17.370:  Initializing the HTTP server
20:48:17.372:  Registering request handler {
    "type": "kettle.request.http",
    "route": "/",
    "method": "get"
}
20:48:17.373:  Opening Kettle Server on port 8081
20:48:17.373:  Successfully queued test Simple get test
20:48:17.374:  Kettle Server 8zrhcmmg-3171 is listening on port 8081
20:48:17.374:  jq: Test concluded - Module "DataSource during init" Test name "Resource model is initialised": 2/2 passed - PASS
20:48:17.375:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notfound",
    "search": "?search",
    "url": "http://(SENSITIVE):(SENSITIVE)@localhost:8081/notfound?search",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:17.378:  Kettle server getDispatcher found no matching handlers, continuing
20:48:17.380:  Stopping Kettle Server 8zrhcmmg-3171 on port 8081
20:48:17.381:  Kettle Server 8zrhcmmg-3171 on port 8081 is stopped
20:48:17.415:  Initializing the Express app
20:48:17.415:  Initializing the HTTP server
20:48:17.415:  Initializing the HTTPS server
20:48:17.467:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:17.467:  Opening Kettle Server on port 8081
20:48:17.468:  Successfully queued test Simple get test
20:48:17.468:  Kettle Server 8zrhcmmg-3284 is listening on port 8081
20:48:17.468:  jq: Test concluded - Module "w. Testing URL dataSource with sensitive info in URL" Test name "Simple get test": 4/4 passed - PASS
20:48:17.469:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "https:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "https://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:17.476:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:17.482:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:17.484:  Stopping Kettle Server 8zrhcmmg-3284 on port 8081
20:48:17.485:  Kettle Server 8zrhcmmg-3284 on port 8081 is stopped
20:48:17.524:  Initializing the Express app
20:48:17.525:  Initializing the HTTP server
20:48:17.527:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:48:17.528:  Opening Kettle Server on port 8081
20:48:17.528:  Successfully queued test Simple get test
20:48:17.529:  Kettle Server 8zrhcmmg-3418 is listening on port 8081
20:48:17.529:  jq: Test concluded - Module "HTTPS dataSource test" Test name "Simple get test": 2/2 passed - PASS
20:48:17.530:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:17.532:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:48:17.539:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:48:17.542:  Stopping Kettle Server 8zrhcmmg-3418 on port 8081
20:48:17.542:  Kettle Server 8zrhcmmg-3418 on port 8081 is stopped
20:48:17.577:  Initializing the Express app
20:48:17.577:  Initializing the HTTP server
20:48:17.579:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:48:17.580:  Opening Kettle Server on port 8081
20:48:17.580:  Successfully queued test Simple get test
20:48:17.580:  Kettle Server 8zrhcmmg-3554 is listening on port 8081
20:48:17.581:  jq: Test concluded - Module "x. Testing URL dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:48:17.582:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:17.583:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:48:17.588:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:48:17.590:  Stopping Kettle Server 8zrhcmmg-3554 on port 8081
20:48:17.591:  Kettle Server 8zrhcmmg-3554 on port 8081 is stopped
20:48:17.638:  Initializing the Express app
20:48:17.638:  Initializing the HTTP server
20:48:17.640:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:48:17.641:  Opening Kettle Server on port 8081
20:48:17.641:  Successfully queued test Simple get test
20:48:17.641:  Kettle Server 8zrhcmmg-3691 is listening on port 8081
20:48:17.642:  jq: Test concluded - Module "y. Testing CouchDB dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:48:17.643:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notFound",
    "search": "",
    "url": "http://localhost:8081/notFound",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:17.649:  Kettle server getDispatcher found no matching handlers, continuing
20:48:17.651:  Stopping Kettle Server 8zrhcmmg-3691 on port 8081
20:48:17.651:  Kettle Server 8zrhcmmg-3691 on port 8081 is stopped
20:48:17.690:  Initializing the Express app
20:48:17.690:  Initializing the HTTP server
20:48:17.692:  Registering request handler {
    "method": "put",
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/"
}
20:48:17.692:  Opening Kettle Server on port 8081
20:48:17.693:  Successfully queued test Simple set test
20:48:17.693:  Kettle Server 8zrhcmmg-3804 is listening on port 8081
20:48:17.693:  jq: Test concluded - Module "z. Testing HTTP dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:48:17.694:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 24
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:48:17.696:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:48:17.702:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:48:17.712:  Stopping Kettle Server 8zrhcmmg-3804 on port 8081
20:48:17.713:  Kettle Server 8zrhcmmg-3804 on port 8081 is stopped
20:48:17.731:  Successfully queued test Simple get test
20:48:17.731:  jq: Test concluded - Module "HTTPS dataSource set with special chars test" Test name "Simple set test": 2/2 passed - PASS
20:48:17.747:  express pouchdb instance '8zrhcmmg-4002' initalizing...
20:48:17.747:  Creating directory '/tmp/8zrhcmmg-4002' for express pouchdb instance '8zrhcmmg-4002'...
20:48:17.785:  express baseDir: '/tmp/8zrhcmmg-4002'...
20:48:17.787:  Express server listening on port 6789
20:48:17.787:  Express started...
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/@the-t-in-rtf/pouchdb-all-dbs/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:17.969:  Data loaded for database 'testFile'...
20:48:17.971:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT",
    "url": "http://localhost:6789/testFile/test_id"
}
20:48:18.020:  Successfully queued test Simple get test
20:48:18.020:  Express stopped...
20:48:18.020:  jq: Test concluded - Module "3. Testing CouchDB URL DataSource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:18.035:  express pouchdb instance '8zrhcmmg-4156' initalizing...
20:48:18.035:  Creating directory '/tmp/8zrhcmmg-4156' for express pouchdb instance '8zrhcmmg-4156'...
20:48:18.057:  express baseDir: '/tmp/8zrhcmmg-4156'...
20:48:18.059:  Express server listening on port 6789
20:48:18.059:  Express started...
20:48:18.076:  Data loaded for database 'testFile'...
20:48:18.078:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": false,
    "writeMethod": "PUT"
}
20:48:18.122:  Successfully queued test Simple get test
20:48:18.122:  Express stopped...
20:48:18.122:  jq: Test concluded - Module "5. Testing CouchDB URL datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:48:18.137:  express pouchdb instance '8zrhcmmg-4293' initalizing...
20:48:18.137:  Creating directory '/tmp/8zrhcmmg-4293' for express pouchdb instance '8zrhcmmg-4293'...
20:48:18.148:  express baseDir: '/tmp/8zrhcmmg-4293'...
20:48:18.149:  Express server listening on port 6789
20:48:18.149:  Express started...
20:48:18.167:  Data loaded for database 'testFile'...
20:48:18.168:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": true,
    "writeMethod": "PUT"
}
20:48:18.240:  Successfully queued test Simple set test
20:48:18.240:  Express stopped...
20:48:18.241:  jq: Test concluded - Module "5a. Testing CouchDB URL datasource with missing file and notFoundIsEmpty" Test name "Simple get test": 1/1 passed - PASS
20:48:18.268:  express pouchdb instance '8zrhcmmg-4437' initalizing...
20:48:18.269:  Creating directory '/tmp/8zrhcmmg-4437' for express pouchdb instance '8zrhcmmg-4437'...
20:48:18.284:  express baseDir: '/tmp/8zrhcmmg-4437'...
20:48:18.285:  Express server listening on port 6789
20:48:18.285:  Express started...
20:48:18.304:  Data loaded for database 'testFile'...
20:48:18.306:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:18.327:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 47
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:48:18.331:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:18.359:  Successfully queued test Simple set test
20:48:18.359:  Express stopped...
20:48:18.359:  jq: Test concluded - Module "14. Testing CouchDB URL datasource with HTTP - set" Test name "Simple set test": 1/1 passed - PASS
20:48:18.371:  express pouchdb instance '8zrhcmmg-4600' initalizing...
20:48:18.371:  Creating directory '/tmp/8zrhcmmg-4600' for express pouchdb instance '8zrhcmmg-4600'...
20:48:18.387:  express baseDir: '/tmp/8zrhcmmg-4600'...
20:48:18.388:  Express server listening on port 6789
20:48:18.388:  Express started...
20:48:18.406:  Data loaded for database 'testFile'...
20:48:18.408:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:18.427:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 119
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:48:18.431:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:18.508:  Initializing the Express app
20:48:18.508:  Initializing the HTTP server
20:48:18.510:  Initializing the Express app
20:48:18.510:  Initializing the HTTP server
20:48:18.512:  Registering request handler {
    "type": "kettle.tests.serverPair.getRelay",
    "route": "/relay",
    "method": "get"
}
20:48:18.512:  Registering request handler {
    "type": "kettle.tests.serverPair.postRelay",
    "route": "/relay",
    "method": "post"
}
20:48:18.512:  Registering request handler {
    "type": "kettle.tests.serverPair.putRelay",
    "route": "/relay",
    "method": "put"
}
20:48:18.512:  Registering request handler {
    "type": "kettle.tests.serverPair.errorRelay",
    "route": "/errorRelay",
    "method": "get"
}
20:48:18.513:  Opening Kettle Server on port 8086
20:48:18.513:  Registering request handler {
    "type": "kettle.tests.serverPair.getEndpoint",
    "route": "/endpoint",
    "method": "get"
}
20:48:18.513:  Registering request handler {
    "type": "kettle.tests.serverPair.postEndpoint",
    "route": "/endpoint",
    "method": "post"
}
20:48:18.513:  Registering request handler {
    "type": "kettle.tests.serverPair.putEndpoint",
    "route": "/endpoint",
    "method": "put"
}
20:48:18.513:  Registering request handler {
    "type": "kettle.tests.serverPair.errorEndpoint",
    "route": "/errorEndpoint",
    "method": "get"
}
20:48:18.513:  Opening Kettle Server on port 8087
20:48:18.514:  Successfully queued test Access GET request
20:48:18.514:  Successfully queued test Access SET request via POST
20:48:18.514:  Successfully queued test Access SET request via PUT
20:48:18.514:  Successfully queued test Relay error state via GET
20:48:18.514:  Kettle Server 8zrhcmmg-4695 is listening on port 8086
20:48:18.514:  Kettle Server 8zrhcmmg-4693 is listening on port 8087
20:48:18.515:  Express stopped...
20:48:18.515:  jq: Test concluded - Module "15. Testing CouchDB URL datasource with HTTP existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:48:18.515:  Sending a GET request to: http://127.0.0.1:8086/relay
20:48:18.516:  Invoking handler kettle.tests.serverPair.getRelay for route /relay with expectedGrade kettle.request.http
20:48:18.522:  Kettle server allocated request object with type kettle.tests.serverPair.getRelay
20:48:18.523:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "get",
    "writeMethod": "POST"
}
20:48:18.538:  Invoking handler kettle.tests.serverPair.getEndpoint for route /endpoint with expectedGrade kettle.request.http
20:48:18.544:  Kettle server allocated request object with type kettle.tests.serverPair.getEndpoint
20:48:18.545:  ENDPOINT Resolving with value 42
20:48:18.561:  jq: Test concluded - Module "Cross server datasource access" Test name "Access GET request": 3/3 passed - PASS
20:48:18.562:  Sending a POST request to: http://127.0.0.1:8086/relay
20:48:18.563:  Invoking handler kettle.tests.serverPair.postRelay for route /relay with expectedGrade kettle.request.http
20:48:18.570:  Kettle server allocated request object with type kettle.tests.serverPair.postRelay
20:48:18.571:  DataSource Issuing HTTP request with options {
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "set",
    "writeMethod": "POST"
}
20:48:18.573:  Invoking handler kettle.tests.serverPair.postEndpoint for route /endpoint with expectedGrade kettle.request.http
20:48:18.579:  Kettle server allocated request object with type kettle.tests.serverPair.postEndpoint
20:48:18.580:  ENDPOINT Resolving with value {
    "payload": "post return value"
}
20:48:18.596:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via POST": 4/4 passed - PASS
20:48:18.597:  Sending a PUT request to: http://127.0.0.1:8086/relay
20:48:18.598:  Invoking handler kettle.tests.serverPair.putRelay for route /relay with expectedGrade kettle.request.http
20:48:18.604:  Kettle server allocated request object with type kettle.tests.serverPair.putRelay
20:48:18.605:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "writeMethod": "PUT",
    "operation": "set"
}
20:48:18.606:  Invoking handler kettle.tests.serverPair.putEndpoint for route /endpoint with expectedGrade kettle.request.http
20:48:18.612:  Kettle server allocated request object with type kettle.tests.serverPair.putEndpoint
20:48:18.613:  ENDPOINT Resolving with value {
    "payload": "put return value"
}
20:48:18.630:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via PUT": 4/4 passed - PASS
20:48:18.630:  Sending a GET request to: http://127.0.0.1:8086/errorRelay
20:48:18.631:  Invoking handler kettle.tests.serverPair.errorRelay for route /errorRelay with expectedGrade kettle.request.http
20:48:18.637:  Kettle server allocated request object with type kettle.tests.serverPair.errorRelay
20:48:18.638:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/errorEndpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/errorEndpoint",
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:18.639:  Invoking handler kettle.tests.serverPair.errorEndpoint for route /errorEndpoint with expectedGrade kettle.request.http
20:48:18.645:  Kettle server allocated request object with type kettle.tests.serverPair.errorEndpoint
20:48:18.649:  Stopping Kettle Server 8zrhcmmg-4693 on port 8087
20:48:18.649:  Stopping Kettle Server 8zrhcmmg-4695 on port 8086
20:48:18.650:  Kettle Server 8zrhcmmg-4693 on port 8087 is stopped
20:48:18.650:  Kettle Server 8zrhcmmg-4695 on port 8086 is stopped
20:48:18.668:  Successfully queued test HTTPMethods GET test
20:48:18.668:  jq: Test concluded - Module "Cross server datasource access" Test name "Relay error state via GET": 2/2 passed - PASS
20:48:18.711:  Initializing the Express app
20:48:18.711:  Initializing the HTTP server
20:48:18.713:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:18.713:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:18.713:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:18.713:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:18.714:  Opening Kettle Server on port 8081
20:48:18.714:  Kettle Server 8zrhcmmg-5127 is listening on port 8081
20:48:18.714:  Sending a GET request to: http://127.0.0.1:8081/
20:48:18.724:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:18.729:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:18.731:  Stopping Kettle Server 8zrhcmmg-5127 on port 8081
20:48:18.731:  Kettle Server 8zrhcmmg-5127 on port 8081 is stopped
20:48:18.746:  Successfully queued test HTTPMethods POST test
20:48:18.746:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods GET test": 2/2 passed - PASS
20:48:18.767:  Initializing the Express app
20:48:18.767:  Initializing the HTTP server
20:48:18.769:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:18.769:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:18.769:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:18.769:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:18.769:  Opening Kettle Server on port 8081
20:48:18.769:  Kettle Server 8zrhcmmg-5264 is listening on port 8081
20:48:18.770:  Sending a POST request to: http://127.0.0.1:8081/
20:48:18.771:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:48:18.777:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:48:18.779:  Stopping Kettle Server 8zrhcmmg-5264 on port 8081
20:48:18.779:  Kettle Server 8zrhcmmg-5264 on port 8081 is stopped
20:48:18.794:  Successfully queued test HTTPMethods PUT test
20:48:18.794:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods POST test": 2/2 passed - PASS
20:48:18.815:  Initializing the Express app
20:48:18.815:  Initializing the HTTP server
20:48:18.816:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:18.817:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:18.817:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:18.817:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:18.817:  Opening Kettle Server on port 8081
20:48:18.817:  Kettle Server 8zrhcmmg-5401 is listening on port 8081
20:48:18.818:  Sending a PUT request to: http://127.0.0.1:8081/
20:48:18.818:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:48:18.823:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:48:18.826:  Stopping Kettle Server 8zrhcmmg-5401 on port 8081
20:48:18.826:  Kettle Server 8zrhcmmg-5401 on port 8081 is stopped
20:48:18.847:  Successfully queued test HTTPMethods PUT & POST in sequence test
20:48:18.847:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test": 2/2 passed - PASS
20:48:18.868:  Initializing the Express app
20:48:18.868:  Initializing the HTTP server
20:48:18.870:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:18.870:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:18.870:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:18.870:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:18.870:  Opening Kettle Server on port 8081
20:48:18.870:  Kettle Server 8zrhcmmg-5554 is listening on port 8081
20:48:18.871:  Sending a POST request to: http://127.0.0.1:8081/
20:48:18.881:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:48:18.886:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:48:18.889:  Sending a PUT request to: http://127.0.0.1:8081/
20:48:18.890:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:48:18.895:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:48:18.897:  Sending a POST request to: http://127.0.0.1:8081/
20:48:18.898:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:48:18.903:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:48:18.905:  Stopping Kettle Server 8zrhcmmg-5554 on port 8081
20:48:18.905:  Kettle Server 8zrhcmmg-5554 on port 8081 is stopped
20:48:18.920:  Successfully queued test HTTPMethods PUT test with alternate response status code
20:48:18.920:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT & POST in sequence test": 6/6 passed - PASS
20:48:18.941:  Initializing the Express app
20:48:18.941:  Initializing the HTTP server
20:48:18.943:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:18.943:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:18.943:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:18.943:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:18.943:  Opening Kettle Server on port 8081
20:48:18.943:  Kettle Server 8zrhcmmg-5735 is listening on port 8081
20:48:18.944:  Sending a PUT request to: http://127.0.0.1:8081/201
20:48:18.945:  Invoking handler kettle.tests.HTTPMethods.put201.handler for route /201 with expectedGrade kettle.request.http
20:48:18.951:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put201.handler
20:48:18.953:  Stopping Kettle Server 8zrhcmmg-5735 on port 8081
20:48:18.953:  Kettle Server 8zrhcmmg-5735 on port 8081 is stopped
20:48:18.972:  Successfully queued test CORS middleware tests
20:48:18.972:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test with alternate response status code": 3/3 passed - PASS
20:48:18.993:  Initializing the Express app
20:48:18.993:  Initializing the HTTP server
20:48:18.994:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:18.995:  Opening Kettle Server on port 8081
20:48:18.995:  Kettle Server 8zrhcmmg-5880 is listening on port 8081
20:48:18.995:  Sending a GET request to: http://127.0.0.1:8081/
20:48:18.996:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:19.002:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:19.005:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:48:19.006:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:19.011:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:19.013:  Stopping Kettle Server 8zrhcmmg-5880 on port 8081
20:48:19.014:  Kettle Server 8zrhcmmg-5880 on port 8081 is stopped
20:48:19.029:  Successfully queued test CORS middleware no credential tests
20:48:19.029:  jq: Test concluded - Module "kettle.tests.CORS.config tests" Test name "CORS middleware tests": 11/11 passed - PASS
20:48:19.054:  Initializing the Express app
20:48:19.055:  Initializing the HTTP server
20:48:19.057:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:19.058:  Opening Kettle Server on port 8081
20:48:19.058:  Kettle Server 8zrhcmmg-6041 is listening on port 8081
20:48:19.059:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.071:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:19.076:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:19.078:  Stopping Kettle Server 8zrhcmmg-6041 on port 8081
20:48:19.078:  Kettle Server 8zrhcmmg-6041 on port 8081 is stopped
20:48:19.096:  Successfully queued test CORS middleware custom origin tests
20:48:19.096:  jq: Test concluded - Module "kettle.tests.CORS.noCred.config tests" Test name "CORS middleware no credential tests": 7/7 passed - PASS
20:48:19.117:  Initializing the Express app
20:48:19.117:  Initializing the HTTP server
20:48:19.119:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:19.119:  Opening Kettle Server on port 8081
20:48:19.119:  Kettle Server 8zrhcmmg-6188 is listening on port 8081
20:48:19.120:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.121:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:19.126:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:19.128:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.129:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:19.134:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:19.136:  Stopping Kettle Server 8zrhcmmg-6188 on port 8081
20:48:19.136:  Kettle Server 8zrhcmmg-6188 on port 8081 is stopped
20:48:19.152:  Successfully queued test No CORS middleware tests
20:48:19.153:  jq: Test concluded - Module "kettle.tests.CORS.origin.config tests" Test name "CORS middleware custom origin tests": 14/14 passed - PASS
20:48:19.174:  Initializing the Express app
20:48:19.175:  Initializing the HTTP server
20:48:19.176:  Registering request handler {
    "type": "kettle.tests.noCORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:19.176:  Opening Kettle Server on port 8081
20:48:19.176:  Kettle Server 8zrhcmmg-6349 is listening on port 8081
20:48:19.177:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.178:  Invoking handler kettle.tests.noCORS.handler for route / with expectedGrade kettle.request.http
20:48:19.190:  Kettle server allocated request object with type kettle.tests.noCORS.handler
20:48:19.193:  Stopping Kettle Server 8zrhcmmg-6349 on port 8081
20:48:19.193:  Kettle Server 8zrhcmmg-6349 on port 8081 is stopped
20:48:19.230:  Successfully queued test Session tests
20:48:19.230:  jq: Test concluded - Module "kettle.tests.CORS.noCORS.config tests" Test name "No CORS middleware tests": 6/6 passed - PASS
20:48:19.271:  Initializing the Express app
20:48:19.272:  Initializing the HTTP server
20:48:19.274:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:48:19.274:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:48:19.274:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:48:19.274:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:48:19.274:  Opening Kettle Server on port 8081
20:48:19.275:  Kettle Server 8zrhcmmg-6526 is listening on port 8081
20:48:19.275:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:19.276:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:19.282:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:19.284:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:19.285:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:19.294:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:19.298:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:48:19.299:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:48:19.306:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:48:19.310:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:19.311:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:19.319:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:19.322:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:19.323:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:19.328:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:19.331:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:48:19.332:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:48:19.338:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:48:19.341:  Stopping Kettle Server 8zrhcmmg-6526 on port 8081
20:48:19.341:  Kettle Server 8zrhcmmg-6526 on port 8081 is stopped
20:48:19.367:  Successfully queued test WebSockets tests
20:48:19.367:  jq: Test concluded - Module "kettle.tests.session.config tests" Test name "Session tests": 24/24 passed - PASS
20:48:19.390:  Initializing the Express app
20:48:19.391:  Initializing the HTTP server
20:48:19.392:  Initializing the ws server
20:48:19.393:  Registering request handler {
    "type": "kettle.tests.ws.testSocket.handler",
    "route": "/socket_path"
}
20:48:19.393:  Registering request handler {
    "type": "kettle.tests.ws.testGet.handler",
    "route": "/"
}
20:48:19.393:  Registering request handler {
    "type": "kettle.tests.ws.testClose.handler",
    "route": "/close_path"
}
20:48:19.393:  Opening Kettle Server on port 8081
20:48:19.393:  Kettle Server 8zrhcmmg-6838 is listening on port 8081
20:48:19.394:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:48:19.396:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:48:19.404:  Kettle server allocated request object with type kettle.tests.ws.testSocket.handler
20:48:19.405:  Received WebSockets connection on path /socket_path
20:48:19.409:  kettle.test.request.ws client message{"success":true}
20:48:19.411:  kettle.test.request.ws client message{"success":true}
20:48:19.412:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.414:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.http
20:48:19.420:  Kettle server allocated request object with type kettle.tests.ws.testGet.handler
20:48:19.432:  Sending a GET request to: http://127.0.0.1:8081/socket_path
20:48:19.433:  kettle.test.request.ws closed, response code: 1005, reason: ""
20:48:19.433:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.http
20:48:19.440:  Kettle server allocated request object with type kettle.request.http.mismatch
20:48:19.442:  connecting ws.WebSocket to: ws://127.0.0.1:8081/ with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/"
}
20:48:19.443:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.ws
20:48:19.451:  Kettle server allocated request object with type kettle.request.ws.mismatch
20:48:19.453:  connecting ws.WebSocket to: ws://127.0.0.1:8081/close_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/close_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/close_path"
}
20:48:19.454:  Invoking handler kettle.tests.ws.testClose.handler for route /close_path with expectedGrade kettle.request.ws
20:48:19.461:  Kettle server allocated request object with type kettle.tests.ws.testClose.handler
20:48:19.462:  Received WebSockets connection on path /close_path
20:48:19.467:  kettle.test.request.ws closed, response code: 1000, reason: ""
20:48:19.468:  Stopping Kettle Server 8zrhcmmg-6838 on port 8081
20:48:19.468:  Kettle Server 8zrhcmmg-6838 on port 8081 is stopped
20:48:19.469:  kettle.test.request.ws client error{
    
}
20:48:19.470:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:48:19.508:  Successfully queued test WebSockets Session tests
20:48:19.509:  jq: Test concluded - Module "kettle.tests.webSockets.config tests" Test name "WebSockets tests": 17/17 passed - PASS
20:48:19.535:  Initializing the Express app
20:48:19.536:  Initializing the HTTP server
20:48:19.537:  Initializing the ws server
20:48:19.538:  Registering request handler {
    "type": "kettle.tests.session.ws.testSocket.handler",
    "route": "/socket_path"
}
20:48:19.538:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:48:19.538:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:48:19.538:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:48:19.538:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:48:19.538:  Opening Kettle Server on port 8081
20:48:19.539:  Kettle Server 8zrhcmmg-7145 is listening on port 8081
20:48:19.539:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:19.540:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:19.545:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:19.548:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:19.549:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:19.556:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:19.559:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:48:19.560:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:48:19.565:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:48:19.568:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:19.569:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:19.576:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:19.579:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        "Cookie": [
            "kettle.sid=s%3AR9lGGGk9bCBuiOvPPpb-Sn3siHTAEtoX.NtBQtnaW%2F5212IfyU4IOjcROv86I1ejkahetM0%2FhSTQ; Path=/; HttpOnly"
        ]
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:48:19.580:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:48:19.590:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:48:19.591:  Received WebSockets connection on path /socket_path
20:48:19.603:  testSocket.receiveMessage got session {
    "cookie": {
        "path": "/",
        "_expires": null,
        "originalMaxAge": null,
        "httpOnly": true,
        "secure": false,
        "expires": [Synthetic property],
        "maxAge": [Synthetic property],
        "data": [Synthetic property],
        "serialize": [Synthetic property],
        "toJSON": [Synthetic property]
    },
    "token": "123"
}
20:48:19.604:  kettle.test.request.ws client message{"type":"midSuccess","payload":{"token":"123","success":true}}
20:48:19.605:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:48:19.605:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:48:19.614:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:48:19.616:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:19.617:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:19.622:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:19.624:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:48:19.625:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:48:19.631:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:48:19.633:  Stopping Kettle Server 8zrhcmmg-7145 on port 8081
20:48:19.634:  Kettle Server 8zrhcmmg-7145 on port 8081 is stopped
20:48:19.634:  kettle.test.request.ws client error{
    
}
20:48:19.635:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:48:19.660:  Successfully queued test Error tests I
20:48:19.661:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:48:19.661:  Failing to resume callback for request 8zrhcmmg-7323 which has already concluded
20:48:19.661:  jq: Test concluded - Module "kettle.tests.session.webSockets.config tests" Test name "WebSockets Session tests": 31/31 passed - PASS
20:48:19.689:  Initializing the Express app
20:48:19.690:  Initializing the HTTP server
20:48:19.693:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:48:19.693:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:48:19.693:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:48:19.693:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:48:19.693:  Opening Kettle Server on port 8081
20:48:19.693:  Kettle Server 8zrhcmmg-7496 is listening on port 8081
20:48:19.695:  FATAL ERROR: Uncaught exception: "Global Error Triggered".triggerError is not a function
TypeError: "Global Error Triggered".triggerError is not a function
    at kettle.tests.triggerGlobalErrorSync (/data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:15:778)
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:16:14
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:48:19.696:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.697:  Invoking handler kettle.tests.error.requestError for route / with expectedGrade kettle.request.http
20:48:19.708:  Kettle server allocated request object with type kettle.tests.error.requestError
20:48:19.709:  ASSERTION FAILED: Simulated assertion failed in request - this failure is expected: 
20:48:19.709:  Current activity: 
20:48:19.709:      while invoking invoker with name handleRequest and record {
    "func": undefined,
    "funcName": "fluid.fail",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "Simulated assertion failed in request - this failure is expected: "
    ],
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: 8zrhcmmg-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-8zrhcmmg-7437.tests.configuration.server.app.requests.request
20:48:19.709:      while firing to listener to event named onHandle of component component { typeName: "kettle.tests.error.requestError id: 8zrhcmmg-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-8zrhcmmg-7437.tests.configuration.server.app.requests.request
20:48:19.709:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.error.requestError id: 8zrhcmmg-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-8zrhcmmg-7437.tests.configuration.server.app.requests.request
20:48:19.712:  kettle.tests.error.handleFullRequest forwarding error to express
20:48:19.712:  kettle.tests.server.upgradeError received error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:48:19.712:  kettle.tests.server.upgradeError throwing uncaught exception error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:48:19.712:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2781:25)
    at kettle.request.handleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:97:157)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.request.handleRequestTask (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:104:25)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.sequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:270:19)
    at kettle.request.sequenceRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:120:169)
    at kettle.request.initiateHandleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:132:530)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.concludeComponentInit (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1536:26)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2208:25
    at Array.forEach (<anonymous>)
    at localWorkflowTask (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2207:37)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2329:27)
    at fluid.tryCatch (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:241:20)
    at fluid.commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2314:11)
    at fluid.concludeAnyTreeTransaction (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1429:15)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.server.checkCreateRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:53:303)
    at fluid.componentConstructor.dispatcher (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:59:232)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:69:213
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at expressInit (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/init.js:40:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at query (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/query.js:45:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:174:3)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/application.js:174:10)
    at Server.app (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/express.js:39:9)
    at Server.emit (node:events:527:28)
    at parserOnIncoming (node:_http_server:993:12)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)
20:48:19.713:  Current activity: 
20:48:19.713:      while invoking invoker with name handleFullRequest and record {
    "func": undefined,
    "funcName": "kettle.tests.error.handleFullRequest",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": {
        "value": "NO_ARGUMENTS"
    },
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: 8zrhcmmg-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-8zrhcmmg-7437.tests.configuration.server.app.requests.request
20:48:19.713:  ASSERTION FAILED: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
20:48:19.714:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:5 .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
Error: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:51:23)
    at that.complete (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:72:21)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:58:18)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:444
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:48:19.716:  Sending a GET request to: http://127.0.0.1:8081/errorCode
20:48:19.717:  Invoking handler kettle.tests.error.requestErrorCode.handler for route /errorCode with expectedGrade kettle.request.http
20:48:19.726:  Kettle server allocated request object with type kettle.tests.error.requestErrorCode.handler
20:48:19.729:  Stopping Kettle Server 8zrhcmmg-7496 on port 8081
20:48:19.729:  Kettle Server 8zrhcmmg-7496 on port 8081 is stopped
20:48:19.749:  Successfully queued test Error tests II
20:48:19.749:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests I": 4/4 passed - PASS
20:48:19.777:  Initializing the Express app
20:48:19.777:  Initializing the HTTP server
20:48:19.780:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:48:19.780:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:48:19.780:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:48:19.780:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:48:19.781:  Opening Kettle Server on port 8081
20:48:19.781:  Kettle Server 8zrhcmmg-7658 is listening on port 8081
20:48:19.782:  Sending a GET request to: http://127.0.0.1:8081/errorAsync
20:48:19.794:  Invoking handler kettle.tests.error.requestErrorAsync.handler for route /errorAsync with expectedGrade kettle.request.http
20:48:19.804:  Kettle server allocated request object with type kettle.tests.error.requestErrorAsync.handler
20:48:19.805:  FATAL ERROR: Uncaught exception: Uncharacterised error which should cause request failure
Error: Uncharacterised error which should cause request failure
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:13:1376
    at wrappedCallback (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:51:625)
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:48:19.807:  Stopping Kettle Server 8zrhcmmg-7658 on port 8081
20:48:19.807:  Kettle Server 8zrhcmmg-7658 on port 8081 is stopped
20:48:19.822:  Successfully queued test Plaintext response error test
20:48:19.822:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests II": 1/1 passed - PASS
20:48:19.843:  Initializing the Express app
20:48:19.843:  Initializing the HTTP server
20:48:19.845:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:48:19.845:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:48:19.845:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:48:19.845:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:48:19.845:  Opening Kettle Server on port 8081
20:48:19.845:  Kettle Server 8zrhcmmg-7796 is listening on port 8081
20:48:19.846:  Sending a GET request to: http://127.0.0.1:8081/plainRequestError
20:48:19.847:  Invoking handler kettle.tests.error.plainRequestError.handler for route /plainRequestError with expectedGrade kettle.request.http
20:48:19.853:  Kettle server allocated request object with type kettle.tests.error.plainRequestError.handler
20:48:19.855:  Stopping Kettle Server 8zrhcmmg-7796 on port 8081
20:48:19.855:  Kettle Server 8zrhcmmg-7796 on port 8081 is stopped
20:48:19.873:  Successfully queued test Bad config: missing handler test
20:48:19.873:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Plaintext response error test": 2/2 passed - PASS
20:48:19.899:  Initializing the Express app
20:48:19.900:  Initializing the HTTP server
20:48:19.901:  Registering request handler {
    "type": "kettle.tests.badRequest.missing.handler",
    "route": "/",
    "method": "get"
}
20:48:19.901:  Opening Kettle Server on port 8081
20:48:19.902:  Kettle Server 8zrhcmmg-7940 is listening on port 8081
20:48:19.903:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.903:  Invoking handler kettle.tests.badRequest.missing.handler for route / with expectedGrade kettle.request.http
20:48:19.903:  ASSERTION FAILED: Error in Kettle application definition - couldn't load handler kettle.tests.badRequest.missing.handler and gradeNames [] to a component derived from kettle.request - got defaults of undefined
20:48:19.905:  Stopping Kettle Server 8zrhcmmg-7940 on port 8081
20:48:19.905:  Kettle Server 8zrhcmmg-7940 on port 8081 is stopped
20:48:19.929:  Successfully queued test Bad config: missing handler type test
20:48:19.929:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:48:19.956:  Initializing the Express app
20:48:19.957:  Initializing the HTTP server
20:48:19.960:  Registering request handler {
    "type": null,
    "route": "/",
    "method": "get"
}
20:48:19.960:  Opening Kettle Server on port 8081
20:48:19.960:  Kettle Server 8zrhcmmg-8066 is listening on port 8081
20:48:19.961:  Sending a GET request to: http://127.0.0.1:8081/
20:48:19.974:  ASSERTION FAILED: Error in Kettle application definition - handler {
    "method": "get",
    "type": null,
    "route": "/",
    "keys": [],
    "regexp": {
        "keys": []
    }
} must have a request grade name registered as member "type"
20:48:19.976:  Stopping Kettle Server 8zrhcmmg-8066 on port 8081
20:48:19.976:  Kettle Server 8zrhcmmg-8066 on port 8081 is stopped
20:48:19.994:  Successfully queued test Bad config: missing handler test
20:48:19.994:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handlerType.config.mergedConfig tests" Test name "Bad config: missing handler type test": 4/4 passed - PASS
20:48:20.016:  Initializing the Express app
20:48:20.016:  Initializing the HTTP server
20:48:20.017:  Registering request handler {
    "type": "kettle.tests.badRequest.throwing.handler",
    "route": "/",
    "method": "get"
}
20:48:20.018:  Opening Kettle Server on port 8081
20:48:20.018:  Kettle Server 8zrhcmmg-8192 is listening on port 8081
20:48:20.018:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.019:  Invoking handler kettle.tests.badRequest.throwing.handler for route / with expectedGrade kettle.request.http
20:48:20.025:  Kettle server allocated request object with type kettle.tests.badRequest.throwing.handler
20:48:20.028:  Stopping Kettle Server 8zrhcmmg-8192 on port 8081
20:48:20.028:  Kettle Server 8zrhcmmg-8192 on port 8081 is stopped
20:48:20.046:  Successfully queued test Bad config: missing middleware test
20:48:20.046:  jq: Test concluded - Module "kettle.tests.badRequest.throwing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:48:20.068:  Initializing the Express app
20:48:20.069:  Initializing the HTTP server
20:48:20.070:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.missing.handler",
    "route": "/",
    "method": "get"
}
20:48:20.070:  Opening Kettle Server on port 8081
20:48:20.070:  Kettle Server 8zrhcmmg-8339 is listening on port 8081
20:48:20.071:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.072:  Invoking handler kettle.tests.badRequest.middleware.missing.handler for route / with expectedGrade kettle.request.http
20:48:20.078:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.missing.handler
20:48:20.079:  ASSERTION FAILED: Couldn't resolve reference {middlewareHolder}.missingMiddleware from member "middleware" of record {
    "middleware": "{middlewareHolder}.missingMiddleware"
} to a middleware component for a kettle.tests.badRequest.middleware.missing.handler requestMiddleware  entry: got undefined
20:48:20.079:  Current activity: 
20:48:20.079:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.missing.handler id: 8zrhcmmg-8410" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.missing.handler"]} at path serverEnvironment-8zrhcmmg-8285.tests.configuration.server.app.requests.request
20:48:20.080:  Unhandled promise rejection: {
    "isError": true,
    "message": "Couldn't resolve reference {middlewareHolder}.missingMiddleware from member \"middleware\" of record "
}
20:48:20.081:  Stopping Kettle Server 8zrhcmmg-8339 on port 8081
20:48:20.081:  Kettle Server 8zrhcmmg-8339 on port 8081 is stopped
20:48:20.099:  Successfully queued test Bad config: bad middleware test
20:48:20.099:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.missing.config.mergedConfig tests" Test name "Bad config: missing middleware test": 4/4 passed - PASS
20:48:20.122:  Initializing the Express app
20:48:20.122:  Initializing the HTTP server
20:48:20.123:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.bad.handler",
    "route": "/",
    "method": "get"
}
20:48:20.124:  Opening Kettle Server on port 8081
20:48:20.124:  Kettle Server 8zrhcmmg-8485 is listening on port 8081
20:48:20.124:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.133:  Invoking handler kettle.tests.badRequest.middleware.bad.handler for route / with expectedGrade kettle.request.http
20:48:20.141:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.bad.handler
20:48:20.142:  ASSERTION FAILED: Middleware component {
    "typeName": "kettle.tests.badRequest.bad.middleware",
    "id": "8zrhcmmg-8557",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "kettle.middleware",
            "kettle.plainMiddleware",
            "kettle.tests.badRequest.bad.middleware"
        ],
        "events": {
            "onCreate": "promise",
            "onDestroy": "promise",
            "afterDestroy": "promise"
        },
        "invokers": {
            "handle": {
                "func": undefined,
                "funcName": "kettle.plainMiddleware.resolve",
                "listener": undefined,
                "this": undefined,
                "method": undefined,
                "changePath": undefined,
                "value": undefined,
                "componentSource": "kettle.plainMiddleware",
                "args": [
                    "{that}",
                    "{arguments}.0",
                    " .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] with type kettle.tests.badRequest.bad.middleware is improperly configured - an option named "middleware" of function type is required - got undefined
20:48:20.142:  Current activity: 
20:48:20.142:      while invoking invoker with name handle and record {
    "func": undefined,
    "funcName": "kettle.plainMiddleware.resolve",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "componentSource": "kettle.plainMiddleware",
    "args": [
        "{that}",
        "{arguments}.0",
        "{plainMiddleware}.options.asyncMiddleware"
    ]
} holding component component { typeName: "kettle.tests.badRequest.bad.middleware id: 8zrhcmmg-8557" gradeNames: ["kettle.middleware","kettle.plainMiddleware","kettle.tests.badRequest.bad.middleware"]} at path serverEnvironment-8zrhcmmg-8431.tests.configuration.server.app.requests.request.badMiddleware
20:48:20.142:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.bad.handler id: 8zrhcmmg-8556" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.bad.handler"]} at path serverEnvironment-8zrhcmmg-8431.tests.configuration.server.app.requests.request
20:48:20.144:  Unhandled promise rejection: {
    "isError": true,
    "message": "Middleware component "
}
20:48:20.145:  Stopping Kettle Server 8zrhcmmg-8485 on port 8081
20:48:20.145:  Kettle Server 8zrhcmmg-8485 on port 8081 is stopped
20:48:20.162:  Successfully queued test Bad config: static middleware with no path test
20:48:20.163:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.bad.config.mergedConfig tests" Test name "Bad config: bad middleware test": 4/4 passed - PASS
20:48:20.185:  Initializing the Express app
20:48:20.185:  Initializing the HTTP server
20:48:20.186:  Registering request handler {
    "type": "kettle.tests.badRequest.static.nopath.handler",
    "route": "/",
    "method": "get"
}
20:48:20.187:  Opening Kettle Server on port 8081
20:48:20.187:  Kettle Server 8zrhcmmg-8635 is listening on port 8081
20:48:20.187:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.188:  Invoking handler kettle.tests.badRequest.static.nopath.handler for route / with expectedGrade kettle.request.http
20:48:20.195:  ASSERTION FAILED: Static middleware must have a root path configured to serve options - got undefined
20:48:20.195:  Current activity: 
20:48:20.195:      while constructing component of type kettle.middleware.static at path serverEnvironment-8zrhcmmg-8581.tests.configuration.server.app.requests.request.badStatic
20:48:20.197:  Stopping Kettle Server 8zrhcmmg-8635 on port 8081
20:48:20.197:  Kettle Server 8zrhcmmg-8635 on port 8081 is stopped
20:48:20.224:  Successfully queued test Bad request: bad URL-encoded request parameter
20:48:20.224:  jq: Test concluded - Module "kettle.tests.badRequest.static.nopath.config.mergedConfig tests" Test name "Bad config: static middleware with no path test": 3/3 passed - PASS
20:48:20.249:  Initializing the Express app
20:48:20.249:  Initializing the HTTP server
20:48:20.251:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/route/:key",
    "method": "get"
}
20:48:20.251:  Opening Kettle Server on port 8081
20:48:20.251:  Kettle Server 8zrhcmmg-8788 is listening on port 8081
20:48:20.252:  Sending a GET request to: http://127.0.0.1:8081/route/%ZZ
20:48:20.254:  Stopping Kettle Server 8zrhcmmg-8788 on port 8081
20:48:20.254:  Kettle Server 8zrhcmmg-8788 on port 8081 is stopped
20:48:20.272:  Successfully queued test Good request: bad URL-encoded request parameter
20:48:20.272:  jq: Test concluded - Module "kettle.tests.badRequest.badURL.config.mergedConfig tests" Test name "Bad request: bad URL-encoded request parameter": 3/3 passed - PASS
20:48:20.294:  Initializing the Express app
20:48:20.295:  Initializing the HTTP server
20:48:20.297:  Registering request handler {
    "type": "kettle.tests.goodRequest.emptyParameter.handler",
    "route": "/route/:key?",
    "method": "get"
}
20:48:20.298:  Opening Kettle Server on port 8081
20:48:20.298:  Kettle Server 8zrhcmmg-8914 is listening on port 8081
20:48:20.298:  Sending a GET request to: http://127.0.0.1:8081/route
20:48:20.308:  Invoking handler kettle.tests.goodRequest.emptyParameter.handler for route /route/:key? with expectedGrade kettle.request.http
20:48:20.314:  Kettle server allocated request object with type kettle.tests.goodRequest.emptyParameter.handler
20:48:20.317:  Stopping Kettle Server 8zrhcmmg-8914 on port 8081
20:48:20.317:  Kettle Server 8zrhcmmg-8914 on port 8081 is stopped
20:48:20.343:  Successfully queued test Good request: double handling test
20:48:20.343:  jq: Test concluded - Module "kettle.tests.goodRequest.emptyParameter.config.mergedConfig tests" Test name "Good request: bad URL-encoded request parameter": 2/2 passed - PASS
20:48:20.376:  Initializing the Express app
20:48:20.376:  Initializing the HTTP server
20:48:20.379:  Registering request handler {
    "type": "kettle.tests.goodRequest.doubleResponse.handler",
    "route": "/",
    "method": "get"
}
20:48:20.379:  Opening Kettle Server on port 8081
20:48:20.380:  Kettle Server 8zrhcmmg-9055 is listening on port 8081
20:48:20.380:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.381:  Invoking handler kettle.tests.goodRequest.doubleResponse.handler for route / with expectedGrade kettle.request.http
20:48:20.390:  Kettle server allocated request object with type kettle.tests.goodRequest.doubleResponse.handler
20:48:20.391:  Error in forwarding result {
    "message": "Second response"
} to promise resolve: promise has already received resolve
20:48:20.394:  Stopping Kettle Server 8zrhcmmg-9055 on port 8081
20:48:20.394:  Kettle Server 8zrhcmmg-9055 on port 8081 is stopped
20:48:20.435:  Successfully queued test Good request: options request
20:48:20.435:  jq: Test concluded - Module "kettle.tests.goodRequest.doubleResponse.config.mergedConfig tests" Test name "Good request: double handling test": 2/2 passed - PASS
20:48:20.467:  Initializing the Express app
20:48:20.467:  Initializing the HTTP server
20:48:20.470:  Registering request handler {
    "type": "kettle.tests.goodRequest.options.handler",
    "method": "options",
    "route": "/"
}
20:48:20.470:  Opening Kettle Server on port 8081
20:48:20.471:  Kettle Server 8zrhcmmg-9199 is listening on port 8081
20:48:20.471:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:48:20.472:  Invoking handler kettle.tests.goodRequest.options.handler for route / with expectedGrade kettle.request.http
20:48:20.487:  Kettle server allocated request object with type kettle.tests.goodRequest.options.handler
20:48:20.490:  Stopping Kettle Server 8zrhcmmg-9199 on port 8081
20:48:20.491:  Kettle Server 8zrhcmmg-9199 on port 8081 is stopped
20:48:20.516:  Successfully queued test Good request: mismatched route
20:48:20.516:  jq: Test concluded - Module "kettle.tests.goodRequest.options.config.mergedConfig tests" Test name "Good request: options request": 2/2 passed - PASS
20:48:20.539:  Initializing the Express app
20:48:20.540:  Initializing the HTTP server
20:48:20.541:  Skipping empty handler with key testHandler for app { typeName: "kettle.app id: 8zrhcmmg-9346" gradeNames: ["kettle.app"]}
20:48:20.541:  Opening Kettle Server on port 8081
20:48:20.542:  Kettle Server 8zrhcmmg-9343 is listening on port 8081
20:48:20.542:  Sending a GET request to: http://127.0.0.1:8081/route
20:48:20.552:  Kettle server getDispatcher found no matching handlers, continuing
20:48:20.553:  Stopping Kettle Server 8zrhcmmg-9343 on port 8081
20:48:20.553:  Kettle Server 8zrhcmmg-9343 on port 8081 is stopped
20:48:20.570:  Successfully queued test Good request: gradeNames for handler
20:48:20.570:  jq: Test concluded - Module "kettle.tests.goodRequest.mismatchRoute.config.mergedConfig tests" Test name "Good request: mismatched route": 2/2 passed - PASS
20:48:20.591:  Initializing the Express app
20:48:20.591:  Initializing the HTTP server
20:48:20.593:  Registering request handler {
    "type": "kettle.tests.goodRequest.gradeNames.handler",
    "gradeNames": "kettle.tests.goodRequest.gradeNames.mixin",
    "method": "get",
    "route": "/"
}
20:48:20.593:  Opening Kettle Server on port 8081
20:48:20.593:  Kettle Server 8zrhcmmg-9463 is listening on port 8081
20:48:20.594:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.594:  Invoking handler kettle.tests.goodRequest.gradeNames.handler for route / with expectedGrade kettle.request.http
20:48:20.602:  Kettle server allocated request object with type kettle.tests.goodRequest.gradeNames.handler
20:48:20.605:  Stopping Kettle Server 8zrhcmmg-9463 on port 8081
20:48:20.606:  Kettle Server 8zrhcmmg-9463 on port 8081 is stopped
20:48:20.632:  Successfully queued test Simple MultiConfig Test
20:48:20.632:  jq: Test concluded - Module "kettle.tests.goodRequest.gradeNames.config.mergedConfig tests" Test name "Good request: gradeNames for handler": 2/2 passed - PASS
20:48:20.691:  Initializing the Express app
20:48:20.691:  Initializing the HTTP server
20:48:20.693:  Initializing the Express app
20:48:20.693:  Initializing the HTTP server
20:48:20.695:  Registering request handler {
    "type": "kettle.tests.multiConfig.target.get.handler",
    "route": "/",
    "method": "get"
}
20:48:20.695:  Opening Kettle Server on port 8088
20:48:20.695:  Registering request handler {
    "type": "kettle.tests.multiConfig.source.get.handler",
    "route": "/",
    "method": "get"
}
20:48:20.695:  Opening Kettle Server on port 8081
20:48:20.696:  Kettle Server 8zrhcmmg-9605 is listening on port 8088
20:48:20.696:  Kettle Server 8zrhcmmg-9604 is listening on port 8081
20:48:20.696:  Sending a GET request to: http://127.0.0.1:8081/
20:48:20.697:  Invoking handler kettle.tests.multiConfig.source.get.handler for route / with expectedGrade kettle.request.http
20:48:20.709:  Kettle server allocated request object with type kettle.tests.multiConfig.source.get.handler
20:48:20.710:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8088",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8088/",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:20.720:  Invoking handler kettle.tests.multiConfig.target.get.handler for route / with expectedGrade kettle.request.http
20:48:20.726:  Kettle server allocated request object with type kettle.tests.multiConfig.target.get.handler
20:48:20.732:  Stopping Kettle Server 8zrhcmmg-9604 on port 8081
20:48:20.732:  Stopping Kettle Server 8zrhcmmg-9605 on port 8088
20:48:20.732:  Kettle Server 8zrhcmmg-9604 on port 8081 is stopped
20:48:20.732:  Kettle Server 8zrhcmmg-9605 on port 8088 is stopped
20:48:20.754:  Successfully queued test Static hosting tests
20:48:20.754:  jq: Test concluded - Module "kettle.tests.multiConfig.head.config tests" Test name "Simple MultiConfig Test": 2/2 passed - PASS
20:48:20.787:  Initializing the Express app
20:48:20.787:  Initializing the HTTP server
20:48:20.789:  Registering request handler {
    "type": "kettle.tests.static.handler",
    "prefix": "/infusion",
    "route": "/*",
    "method": "get"
}
20:48:20.789:  Opening Kettle Server on port 8081
20:48:20.789:  Kettle Server 8zrhcmmg-9870 is listening on port 8081
20:48:20.790:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:48:20.790:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:48:20.791:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:48:20.797:  Kettle server allocated request object with type kettle.tests.static.handler
20:48:20.801:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:48:20.807:  Kettle server allocated request object with type kettle.tests.static.handler
20:48:20.815:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.jsonx
20:48:20.816:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:48:20.821:  Kettle server allocated request object with type kettle.tests.static.handler
20:48:20.827:  Stopping Kettle Server 8zrhcmmg-9870 on port 8081
20:48:20.827:  Kettle Server 8zrhcmmg-9870 on port 8081 is stopped
20:48:20.862:  Successfully queued test Multer tests
20:48:20.862:  jq: Test concluded - Module "kettle.tests.static.config tests" Test name "Static hosting tests": 9/9 passed - PASS
20:48:20.924:  Initializing the Express app
20:48:20.925:  Initializing the HTTP server
20:48:20.926:  Registering request handler {
    "type": "kettle.tests.multer.handler.single",
    "route": "/multer-single",
    "method": "post"
}
20:48:20.926:  Registering request handler {
    "type": "kettle.tests.multer.handler.array",
    "route": "/multer-array",
    "method": "post"
}
20:48:20.926:  Registering request handler {
    "type": "kettle.tests.multer.handler.fields",
    "route": "/multer-fields",
    "method": "post"
}
20:48:20.926:  Registering request handler {
    "type": "kettle.tests.multer.handler.imageOnly",
    "route": "/multer-image-only",
    "method": "post"
}
20:48:20.927:  Registering request handler {
    "type": "kettle.tests.multer.handler.diskStorage",
    "route": "/multer-disk-storage",
    "method": "post"
}
20:48:20.927:  Opening Kettle Server on port 8081
20:48:20.927:  Kettle Server 8zrhcmmg-10111 is listening on port 8081
20:48:20.927:  Sending a POST request to: http://127.0.0.1:8081/multer-single
20:48:20.931:  Invoking handler kettle.tests.multer.handler.single for route /multer-single with expectedGrade kettle.request.http
20:48:20.937:  Kettle server allocated request object with type kettle.tests.multer.handler.single
20:48:20.949:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:48:20.950:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:48:20.957:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:48:20.964:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:48:20.966:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:48:20.971:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:48:20.979:  Sending a POST request to: http://127.0.0.1:8081/multer-fields
20:48:20.981:  Invoking handler kettle.tests.multer.handler.fields for route /multer-fields with expectedGrade kettle.request.http
20:48:20.987:  Kettle server allocated request object with type kettle.tests.multer.handler.fields
20:48:20.998:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:48:20.999:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:48:21.006:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:48:21.015:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:48:21.016:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:48:21.021:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:48:21.027:  Sending a POST request to: http://127.0.0.1:8081/multer-disk-storage
20:48:21.029:  Invoking handler kettle.tests.multer.handler.diskStorage for route /multer-disk-storage with expectedGrade kettle.request.http
20:48:21.035:  Kettle server allocated request object with type kettle.tests.multer.handler.diskStorage
20:48:21.041:  Stopping Kettle Server 8zrhcmmg-10111 on port 8081
20:48:21.041:  Kettle Server 8zrhcmmg-10111 on port 8081 is stopped
20:48:21.060:  Successfully queued test Asynchronous request startup: basic fetch test
20:48:21.060:  jq: Test concluded - Module "kettle.tests.multer.config tests" Test name "Multer tests": 29/29 passed - PASS
20:48:21.081:  Initializing the Express app
20:48:21.081:  Initializing the HTTP server
20:48:21.083:  Registering request handler {
    "type": "kettle.tests.asyncRequest.handler",
    "route": "/",
    "method": "get"
}
20:48:21.083:  Opening Kettle Server on port 8081
20:48:21.083:  Kettle Server 8zrhcmmg-10444 is listening on port 8081
20:48:21.084:  Sending a GET request to: http://127.0.0.1:8081/
20:48:21.093:  Invoking handler kettle.tests.asyncRequest.handler for route / with expectedGrade kettle.request.http
20:48:21.105:  Kettle server allocated request object with type kettle.tests.asyncRequest.handler
20:48:21.108:  Stopping Kettle Server 8zrhcmmg-10444 on port 8081
20:48:21.108:  Kettle Server 8zrhcmmg-10444 on port 8081 is stopped
20:48:21.130:  Successfully queued test Request abort test
20:48:21.130:  jq: Test concluded - Module "kettle.tests.asyncRequest.handler.config.mergedConfig tests" Test name "Asynchronous request startup: basic fetch test": 2/2 passed - PASS
20:48:21.151:  Initializing the Express app
20:48:21.152:  Initializing the HTTP server
20:48:21.153:  Registering request handler {
    "type": "kettle.tests.requestAbort.handler",
    "route": "/",
    "method": "get"
}
20:48:21.153:  Opening Kettle Server on port 8081
20:48:21.154:  Kettle Server 8zrhcmmg-10616 is listening on port 8081
20:48:21.154:  Sending a GET request to: http://127.0.0.1:8081/
20:48:21.155:  Invoking handler kettle.tests.requestAbort.handler for route / with expectedGrade kettle.request.http
20:48:21.164:  Kettle server allocated request object with type kettle.tests.requestAbort.handler
20:48:21.665:  Error marking thread to request 8zrhcmmg-10685 which has already been destroyed
20:48:22.168:  Stopping Kettle Server 8zrhcmmg-10616 on port 8081
20:48:22.168:  Kettle Server 8zrhcmmg-10616 on port 8081 is stopped
20:48:22.181:  jq: Test concluded - Module "kettle.tests.requestAbort.config.mergedConfig tests" Test name "Request abort test": 2/2 passed - PASS
20:48:22.183:  jq: ***************
20:48:22.183:  jq: All tests concluded: 358/358 total passed in 7295ms - PASS
20:48:22.183:  jq: ***************
************* run test done *************
kettle is testing ./VariantsDeps/session/variant1/session
************* npm unlink module *************

up to date, audited 949 packages in 2s

109 packages are looking for funding
  run `npm fund` for details

20 vulnerabilities (4 moderate, 14 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible, run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

up to date, audited 1 package in 106ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

changed 1 package, and audited 3 packages in 738ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************
************* npm link module done *************
************* start run test *************

> kettle@2.3.0 pretest
> npx rimraf coverage/*


> kettle@2.3.0 test
> nyc --reporter=html node tests/all-tests.js

Infusion at path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion is at top level 
20:48:27.978:  Registering module subbifier from path /data/js-variants/multee/
20:48:27.978:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle/
20:48:27.978:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/
20:48:27.978:  Registering module infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:27.985:  Registering module kettle from path /data/js-variants/multee/Clients/session/kettle
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/node-jqunit/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:28.407:  Successfully queued test JSON line number diagnostic test
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:28.565:  Registering module fluid-pouchdb from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb
20:48:28.687:  Registering module fluid-express from path /data/js-variants/multee/Clients/session/kettle/node_modules/fluid-pouchdb/node_modules/fluid-express
20:48:29.071:  ASSERTION FAILED: kettle.JSON.parse called on non-string object 3
20:48:29.076:  Unhandled promise rejection: {
    "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING'"
}
20:48:29.090:  jq: Test concluded - Test name "kettle JSON parsing error tests": 2/2 passed - PASS
20:48:29.092:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:48:29.105:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON": 2/2 passed - PASS
20:48:29.119:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON": 1/1 passed - PASS
20:48:29.121:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:48:29.134:  jq: Test concluded - Test name "kettle.JSON.readFileSync of invalid JSON5": 2/2 passed - PASS
20:48:29.148:  jq: Test concluded - Test name "kettle.JSON.readFileSync of valid JSON5": 1/1 passed - PASS
20:48:29.162:  jq: Test concluded - Test name "kettle.JSON.readFileSync of nonexistent file": 1/1 passed - PASS
20:48:29.191:  Initializing the Express app
20:48:29.193:  Initializing the HTTP server
20:48:29.196:  Opening Kettle Server on port 8081
20:48:29.198:  Kettle Server cgaxtng3-176 is listening on port 8081
20:48:29.198:  Stopping Kettle Server cgaxtng3-176 on port 8081
20:48:29.199:  Kettle Server cgaxtng3-176 on port 8081 is stopped
20:48:29.212:  jq: Test concluded - Test name "Kettle server initialisation test": 1/1 passed - PASS
20:48:29.212:  Loader running configuration name kettle.tests.HTTPMethods.config
20:48:29.248:  Initializing the Express app
20:48:29.249:  Initializing the HTTP server
20:48:29.252:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:29.254:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:29.254:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:29.254:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:29.254:  Opening Kettle Server on port 8081
20:48:29.261:  Sending a GET request to: http://127.0.0.1:8081/
20:48:29.264:  Kettle Server cgaxtng3-241 is listening on port 8081
20:48:29.270:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:29.276:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:29.285:  Stopping Kettle Server cgaxtng3-241 on port 8081
20:48:29.285:  Kettle Server cgaxtng3-241 on port 8081 is stopped
20:48:29.299:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and args": 2/2 passed - PASS
20:48:29.299:  Loader running configuration name kettle.tests.HTTPMethods.config
20:48:29.340:  Initializing the Express app
20:48:29.340:  Initializing the HTTP server
20:48:29.343:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:29.344:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:29.344:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:29.344:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:29.344:  Opening Kettle Server on port 8081
20:48:29.348:  Sending a GET request to: http://127.0.0.1:8081/
20:48:29.348:  Kettle Server cgaxtng3-351 is listening on port 8081
20:48:29.357:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:29.363:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:29.365:  Stopping Kettle Server cgaxtng3-351 on port 8081
20:48:29.366:  Kettle Server cgaxtng3-351 on port 8081 is stopped
20:48:29.379:  jq: Test concluded - Test name "Kettle server initialisation test via init.js and NODE_ENV": 2/2 passed - PASS
20:48:29.380:  ASSERTION FAILED: No configuration specified in either 1st command line argument, NODE_ENV or internal default
20:48:29.393:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config name": 1/1 passed - PASS
20:48:29.393:  ASSERTION FAILED: Config path must be specified as 1st command line argument
20:48:29.407:  jq: Test concluded - Test name "Kettle server initialisation test via init.js without config path": 1/1 passed - PASS
20:48:29.411:  Received JSON diagnostic error {
  "message": "Error: Parse error on line 59:\n...W\"        }    },}\n--------------------^\nExpecting 'STRING', got '}'\nJSON parse error at line 59, col 6, found: '}' - expected: 'STRING' while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSONFile.json"
}
20:48:29.429:  Successfully queued test JSON line number diagnostic test
20:48:29.429:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:48:29.443:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "GPII-2147: Testing that localhost is properly replaced by 127.0.0.1 in prepareRequestOptions": 1/1 passed - PASS
20:48:29.472:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource basic init tests": 8/8 passed - PASS
20:48:29.483:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "x-custom-header": "x-custom-value",
        "x-custom-header2": "x-custom-value2"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": 999,
    "pathname": "/path",
    "search": "",
    "family": 4,
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:999/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:29.497:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:48:29.506:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "pathname": "/device",
    "search": "",
    "url": "http://localhost:998/device",
    "port": 998,
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:29.519:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-34 request option resolution test": 1/1 passed - PASS
20:48:29.529:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:29.537:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        "Authorization": "(SENSITIVE)",
        "X-unrelated-header": "998"
    },
    "protocol": "https:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "thing.available",
    "port": "997",
    "pathname": "/path",
    "search": "",
    "url": "https://(SENSITIVE):(SENSITIVE)@thing.available:997/path",
    "termMap": {
        
    },
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:29.551:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-73 censoring test": 6/6 passed - PASS
20:48:29.577:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "KETTLE-38 derived writable dataSource test": 1/1 passed - PASS
20:48:29.599:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Reading file in formenc encoding": 1/1 passed - PASS
20:48:29.622:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Writing file in formenc encoding": 1/1 passed - PASS
20:48:29.629:  ASSERTION FAILED: Cannot operate file dataSource {
    "typeName": "kettle.tests.dataSource.fileWithoutPath",
    "id": "cgaxtng3-628",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "fluid.contextAware",
            "fluid.dataSource",
            "kettle.dataSource.file",
            "kettle.tests.dataSource.fileWithoutPath"
        ],
        "contextAwareness": {
            "writable": {
                "checks": {
                    "writableValue": {
                        "contextValue": "{fluid.dataSource}.options.writable",
                        "gradeNames": "{fluid.dataSource}.options.writableGrade"
                    }
                }
            }
        },
        "writable": false,
        "components": {
            "encoding": {
                "0": {
                    "type": "fluid.dataSource.encoding.JSON"
                },
                "length": 1
            }
        },
        "events": {
            .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] without an option named "path"
20:48:29.629:  Current activity: 
20:48:29.630:      while firing to listener to event named onRead of component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: cgaxtng3-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-cgaxtng3-628
20:48:29.630:      while invoking invoker with name get and record {
    "func": undefined,
    "funcName": "fluid.dataSource.get",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "{that}",
        "{arguments}.0",
        "{arguments}.1"
    ],
    "componentSource": "fluid.dataSource"
} holding component component { typeName: "kettle.tests.dataSource.fileWithoutPath id: cgaxtng3-628" gradeNames: ["fluid.contextAware","fluid.dataSource","kettle.dataSource.file","kettle.tests.dataSource.fileWithoutPath"]} at path fileWithoutPath-cgaxtng3-628
20:48:29.644:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "DataSource without path": 2/2 passed - PASS
20:48:29.678:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Attached URLResolver tests": 2/2 passed - PASS
20:48:29.700:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present environment substitution": 1/1 passed - PASS
20:48:29.718:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent environment substitution": 1/1 passed - PASS
20:48:29.736:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test present file substitution": 1/1 passed - PASS
20:48:29.754:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test absent file substitution": 1/1 passed - PASS
20:48:29.773:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test args substitution": 1/1 passed - PASS
20:48:29.777:  Registering module test-module from path /data/js-variants/multee/Clients/session/kettle/tests/configs/node_modules/test-module
20:48:29.808:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults with types": 14/14 passed - PASS
20:48:29.826:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config defaults without type": 4/4 passed - PASS
20:48:29.845:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Load config with "loadConfig" directive": 2/2 passed - PASS
20:48:29.858:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Test parsing command line arguments": 4/4 passed - PASS
20:48:29.859:  ASSERTION FAILED: Error in config file at path undefined - key "distributeOptions" found, where the only legal options are type, options, loadConfigs, mergeConfigs, require
20:48:29.873:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "Config with bad top-level keys": 1/1 passed - PASS
20:48:29.876:  Received JSON5 diagnostic error {
  "message": "JSON5: invalid character ']' at 49:9 while reading file /data/js-variants/multee/Clients/session/kettle/tests/data/invalid/invalidJSON5File.json5"
}
20:48:29.895:  Successfully queued test Simple get test
20:48:29.896:  jq: Test concluded - Module "Kettle JSON parsing Tests" Test name "JSON line number diagnostic test": 2/2 passed - PASS
20:48:29.913:  Successfully queued test Simple get test
20:48:29.914:  jq: Test concluded - Module "1. Testing file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:48:29.939:  Successfully queued test Simple get test
20:48:29.940:  jq: Test concluded - Module "2. Testing file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:29.959:  Successfully queued test Simple get test
20:48:29.959:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:29.977:  Successfully queued test Simple get test
20:48:29.977:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:48:29.994:  Successfully queued test Simple get test
20:48:29.995:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:48:30.012:  Successfully queued test Simple get test
20:48:30.012:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response" Test name "Simple get test": 1/1 passed - PASS
20:48:30.030:  Successfully queued test Simple get test
20:48:30.030:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:30.053:  Successfully queued test Simple get test
20:48:30.062:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:30.080:  Successfully queued test Simple get test
20:48:30.080:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:30.100:  Successfully queued test Simple get test
20:48:30.100:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:30.119:  Successfully queued test Simple get test
20:48:30.119:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:30.142:  Successfully queued test Simple set test
20:48:30.142:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion" Test name "Simple get test": 1/1 passed - PASS
20:48:30.163:  Successfully queued test Simple set test
20:48:30.163:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:48:30.192:  Successfully queued test Simple set test
20:48:30.192:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding" Test name "Simple set test": 1/1 passed - PASS
20:48:30.218:  Successfully queued test Simple set test
20:48:30.219:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set" Test name "Simple set test": 1/1 passed - PASS
20:48:30.241:  Successfully queued test Simple set test
20:48:30.249:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:48:30.274:  Successfully queued test Simple set test
20:48:30.275:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:48:30.294:  Successfully queued test Simple get test
20:48:30.294:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set" Test name "Simple set test": 1/1 passed - PASS
20:48:30.311:  Successfully queued test Simple get test
20:48:30.311:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:30.331:  Successfully queued test Simple get test
20:48:30.331:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response" Test name "Simple get test": 1/1 passed - PASS
20:48:30.348:  Successfully queued test Simple get test
20:48:30.349:  jq: Test concluded - Module "1. Testing file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.388:  Successfully queued test Simple get test
20:48:30.388:  jq: Test concluded - Module "2. Testing file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.406:  Successfully queued test Simple get test
20:48:30.406:  jq: Test concluded - Module "3. Testing CouchDB datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.428:  Successfully queued test Simple get test
20:48:30.428:  jq: Test concluded - Module "4. Testing CouchDB datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.445:  Successfully queued test Simple get test
20:48:30.453:  jq: Test concluded - Module "5. Testing CouchDB file datasource with missing file - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.472:  Successfully queued test Simple get test
20:48:30.472:  jq: Test concluded - Module "6. Testing CouchDB datasource with error response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.488:  Successfully queued test Simple get test
20:48:30.489:  jq: Test concluded - Module "7. Testing filesystem datasource with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.505:  Successfully queued test Simple get test
20:48:30.505:  jq: Test concluded - Module "8. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.521:  Successfully queued test Simple get test
20:48:30.521:  jq: Test concluded - Module "9. Testing file datasource with filesystem with expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.540:  Successfully queued test Simple get test
20:48:30.540:  jq: Test concluded - Module "10. Testing file datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.557:  Successfully queued test Simple get test
20:48:30.557:  jq: Test concluded - Module "11. Testing couchdb datasource with filesystem with static expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.578:  Successfully queued test Simple set test
20:48:30.578:  jq: Test concluded - Module "12. Testing couchdb datasource with filesystem and dynamic expansion - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.597:  Successfully queued test Simple set test
20:48:30.604:  jq: Test concluded - Module "13. Testing file datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:30.644:  Successfully queued test Simple set test
20:48:30.644:  jq: Test concluded - Module "13a. Testing file datasource with filesystem - set with JSON5 encoding - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:30.679:  Successfully queued test Simple set test
20:48:30.686:  jq: Test concluded - Module "14. Testing CouchDB datasource with filesystem - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:30.728:  Successfully queued test Simple set test
20:48:30.728:  jq: Test concluded - Module "15. Testing CouchDB datasource with filesystem existing document - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:30.749:  Successfully queued test Simple set test
20:48:30.749:  jq: Test concluded - Module "16. Testing file datasource with filesystem and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:30.768:  Successfully queued test Simple get test
20:48:30.768:  jq: Test concluded - Module "17. Testing couchdb datasource with filesystem, existing document and expansion - set - via promise API" Test name "Simple set test": 1/1 passed - PASS
20:48:30.785:  Successfully queued test Simple get test
20:48:30.785:  jq: Test concluded - Module "18. Testing JSON5 file datasource with standard response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.827:  Initializing the Express app
20:48:30.828:  Initializing the HTTP server
20:48:30.831:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:30.831:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.redirectingRequestHandler",
    "route": "/redirect",
    "method": "get"
}
20:48:30.831:  Opening Kettle Server on port 8081
20:48:30.832:  Successfully queued test Simple get test
20:48:30.832:  Kettle Server cgaxtng3-2853 is listening on port 8081
20:48:30.832:  jq: Test concluded - Module "19. Testing JSON5 file datasource with empty response - via promise API" Test name "Simple get test": 1/1 passed - PASS
20:48:30.834:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/redirect",
    "search": "",
    "url": "http://localhost:8081/redirect",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:30.836:  Invoking handler kettle.tests.dataSource.URL.redirectingRequestHandler for route /redirect with expectedGrade kettle.request.http
20:48:30.843:  Kettle server allocated request object with type kettle.tests.dataSource.URL.redirectingRequestHandler
20:48:30.847:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:30.853:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:30.855:  Stopping Kettle Server cgaxtng3-2853 on port 8081
20:48:30.856:  Kettle Server cgaxtng3-2853 on port 8081 is stopped
20:48:30.891:  Initializing the Express app
20:48:30.892:  Initializing the HTTP server
20:48:30.894:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:30.895:  Opening Kettle Server on port 8081
20:48:30.895:  Successfully queued test Resource model is initialised
20:48:30.895:  Kettle Server cgaxtng3-3005 is listening on port 8081
20:48:30.903:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "dataSource": {
        "typeName": "kettle.dataSource.URL",
        "id": "cgaxtng3-3007",
        "lifecycleStatus": "treeConstructed",
        "destroy": { Function
            
        },
        "options": {
            "gradeNames": [
                "fluid.component",
                "fluid.contextAware",
                "fluid.dataSource",
                "fluid.dataSource.URL",
                "kettle.dataSource.URL"
            ],
            "contextAwareness": {
                "writable": {
                    "checks": {
                        "writableValue": {
                            "contextValue": "{fluid.dataSource}.options.writable",
                            "gradeNames": "{fluid.dataSource}.options.writableGrade"
                        }
    .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:48:30.904:  jq: Test concluded - Module "KETTLE-89: DataSource support for redirects" Test name "Simple get test": 3/3 passed - PASS
20:48:30.910:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:30.915:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:30.920:  Stopping Kettle Server cgaxtng3-3005 on port 8081
20:48:30.921:  Kettle Server cgaxtng3-3005 on port 8081 is stopped
20:48:30.983:  Initializing the Express app
20:48:30.984:  Initializing the HTTP server
20:48:30.988:  Registering request handler {
    "type": "kettle.request.http",
    "route": "/",
    "method": "get"
}
20:48:30.988:  Opening Kettle Server on port 8081
20:48:30.989:  Successfully queued test Simple get test
20:48:30.990:  Kettle Server cgaxtng3-3171 is listening on port 8081
20:48:30.990:  jq: Test concluded - Module "DataSource during init" Test name "Resource model is initialised": 2/2 passed - PASS
20:48:30.992:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "username": "(SENSITIVE)",
    "password": "(SENSITIVE)",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notfound",
    "search": "?search",
    "url": "http://(SENSITIVE):(SENSITIVE)@localhost:8081/notfound?search",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:30.996:  Kettle server getDispatcher found no matching handlers, continuing
20:48:31.001:  Stopping Kettle Server cgaxtng3-3171 on port 8081
20:48:31.002:  Kettle Server cgaxtng3-3171 on port 8081 is stopped
20:48:31.040:  Initializing the Express app
20:48:31.040:  Initializing the HTTP server
20:48:31.041:  Initializing the HTTPS server
20:48:31.094:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:31.094:  Opening Kettle Server on port 8081
20:48:31.094:  Successfully queued test Simple get test
20:48:31.095:  Kettle Server cgaxtng3-3284 is listening on port 8081
20:48:31.095:  jq: Test concluded - Module "w. Testing URL dataSource with sensitive info in URL" Test name "Simple get test": 4/4 passed - PASS
20:48:31.096:  DataSource Issuing HTTPS request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "https:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "https://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:31.103:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:31.108:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:31.111:  Stopping Kettle Server cgaxtng3-3284 on port 8081
20:48:31.112:  Kettle Server cgaxtng3-3284 on port 8081 is stopped
20:48:31.151:  Initializing the Express app
20:48:31.152:  Initializing the HTTP server
20:48:31.154:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:48:31.155:  Opening Kettle Server on port 8081
20:48:31.155:  Successfully queued test Simple get test
20:48:31.156:  Kettle Server cgaxtng3-3418 is listening on port 8081
20:48:31.156:  jq: Test concluded - Module "HTTPS dataSource test" Test name "Simple get test": 2/2 passed - PASS
20:48:31.157:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:31.159:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:48:31.166:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:48:31.176:  Stopping Kettle Server cgaxtng3-3418 on port 8081
20:48:31.177:  Kettle Server cgaxtng3-3418 on port 8081 is stopped
20:48:31.212:  Initializing the Express app
20:48:31.213:  Initializing the HTTP server
20:48:31.215:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:48:31.215:  Opening Kettle Server on port 8081
20:48:31.216:  Successfully queued test Simple get test
20:48:31.216:  Kettle Server cgaxtng3-3554 is listening on port 8081
20:48:31.216:  jq: Test concluded - Module "x. Testing URL dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:48:31.218:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:31.219:  Invoking handler kettle.tests.dataSource.URL.hangup.handler for route / with expectedGrade kettle.request.http
20:48:31.225:  Kettle server allocated request object with type kettle.tests.dataSource.URL.hangup.handler
20:48:31.226:  Stopping Kettle Server cgaxtng3-3554 on port 8081
20:48:31.227:  Kettle Server cgaxtng3-3554 on port 8081 is stopped
20:48:31.275:  Initializing the Express app
20:48:31.276:  Initializing the HTTP server
20:48:31.278:  Registering request handler {
    "type": "kettle.tests.dataSource.URL.hangup.handler",
    "route": "/",
    "method": "get"
}
20:48:31.278:  Opening Kettle Server on port 8081
20:48:31.279:  Successfully queued test Simple get test
20:48:31.279:  Kettle Server cgaxtng3-3691 is listening on port 8081
20:48:31.279:  jq: Test concluded - Module "y. Testing CouchDB dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:48:31.280:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/notFound",
    "search": "",
    "url": "http://localhost:8081/notFound",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:31.282:  Kettle server getDispatcher found no matching handlers, continuing
20:48:31.283:  Stopping Kettle Server cgaxtng3-3691 on port 8081
20:48:31.284:  Kettle Server cgaxtng3-3691 on port 8081 is stopped
20:48:31.324:  Initializing the Express app
20:48:31.324:  Initializing the HTTP server
20:48:31.326:  Registering request handler {
    "method": "put",
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/"
}
20:48:31.326:  Opening Kettle Server on port 8081
20:48:31.327:  Successfully queued test Simple set test
20:48:31.327:  Kettle Server cgaxtng3-3804 is listening on port 8081
20:48:31.327:  jq: Test concluded - Module "z. Testing HTTP dataSource with server hangup" Test name "Simple get test": 1/1 passed - PASS
20:48:31.328:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 24
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8081/",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:48:31.330:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:48:31.336:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:48:31.354:  Stopping Kettle Server cgaxtng3-3804 on port 8081
20:48:31.354:  Kettle Server cgaxtng3-3804 on port 8081 is stopped
20:48:31.374:  Successfully queued test Simple get test
20:48:31.374:  jq: Test concluded - Module "HTTPS dataSource set with special chars test" Test name "Simple set test": 2/2 passed - PASS
20:48:31.390:  express pouchdb instance 'cgaxtng3-4002' initalizing...
20:48:31.390:  Creating directory '/tmp/cgaxtng3-4002' for express pouchdb instance 'cgaxtng3-4002'...
20:48:31.429:  express baseDir: '/tmp/cgaxtng3-4002'...
20:48:31.431:  Express server listening on port 6789
20:48:31.431:  Express started...
Resolved infusion from path /data/js-variants/multee/Clients/session/kettle/node_modules/@the-t-in-rtf/pouchdb-all-dbs/node_modules/infusion/src/module to /data/js-variants/multee/Clients/session/kettle/node_modules/infusion
20:48:31.597:  Data loaded for database 'testFile'...
20:48:31.599:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "writeMethod": "PUT",
    "url": "http://localhost:6789/testFile/test_id"
}
20:48:31.648:  Successfully queued test Simple get test
20:48:31.648:  Express stopped...
20:48:31.648:  jq: Test concluded - Module "3. Testing CouchDB URL DataSource with standard response" Test name "Simple get test": 1/1 passed - PASS
20:48:31.663:  express pouchdb instance 'cgaxtng3-4156' initalizing...
20:48:31.664:  Creating directory '/tmp/cgaxtng3-4156' for express pouchdb instance 'cgaxtng3-4156'...
20:48:31.685:  express baseDir: '/tmp/cgaxtng3-4156'...
20:48:31.687:  Express server listening on port 6789
20:48:31.687:  Express started...
20:48:31.705:  Data loaded for database 'testFile'...
20:48:31.707:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": false,
    "writeMethod": "PUT"
}
20:48:31.747:  Successfully queued test Simple get test
20:48:31.748:  Express stopped...
20:48:31.748:  jq: Test concluded - Module "5. Testing CouchDB URL datasource with missing file" Test name "Simple get test": 1/1 passed - PASS
20:48:31.767:  express pouchdb instance 'cgaxtng3-4293' initalizing...
20:48:31.767:  Creating directory '/tmp/cgaxtng3-4293' for express pouchdb instance 'cgaxtng3-4293'...
20:48:31.779:  express baseDir: '/tmp/cgaxtng3-4293'...
20:48:31.780:  Express server listening on port 6789
20:48:31.780:  Express started...
20:48:31.797:  Data loaded for database 'testFile'...
20:48:31.799:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "get",
    "notFoundIsEmpty": true,
    "writeMethod": "PUT"
}
20:48:31.844:  Successfully queued test Simple set test
20:48:31.844:  Express stopped...
20:48:31.844:  jq: Test concluded - Module "5a. Testing CouchDB URL datasource with missing file and notFoundIsEmpty" Test name "Simple get test": 1/1 passed - PASS
20:48:31.861:  express pouchdb instance 'cgaxtng3-4437' initalizing...
20:48:31.861:  Creating directory '/tmp/cgaxtng3-4437' for express pouchdb instance 'cgaxtng3-4437'...
20:48:31.875:  express baseDir: '/tmp/cgaxtng3-4437'...
20:48:31.877:  Express server listening on port 6789
20:48:31.877:  Express started...
20:48:31.911:  Data loaded for database 'testFile'...
20:48:31.913:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:31.931:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 47
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:48:31.936:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/nonexistent_id",
    "search": "",
    "url": "http://localhost:6789/testFile/nonexistent_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:31.964:  Successfully queued test Simple set test
20:48:31.965:  Express stopped...
20:48:31.965:  jq: Test concluded - Module "14. Testing CouchDB URL datasource with HTTP - set" Test name "Simple set test": 1/1 passed - PASS
20:48:31.977:  express pouchdb instance 'cgaxtng3-4600' initalizing...
20:48:31.978:  Creating directory '/tmp/cgaxtng3-4600' for express pouchdb instance 'cgaxtng3-4600'...
20:48:31.994:  express baseDir: '/tmp/cgaxtng3-4600'...
20:48:31.995:  Express server listening on port 6789
20:48:31.995:  Express started...
20:48:32.033:  Data loaded for database 'testFile'...
20:48:32.035:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "filterNamespaces": [
        "impl",
        "encoding"
    ],
    "notFoundIsEmpty": true,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:32.052:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 119
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "callback": { Function
        
    },
    "operation": "set",
    "writeMethod": "PUT"
}
20:48:32.058:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "6789",
    "pathname": "/testFile/test_id",
    "search": "",
    "url": "http://localhost:6789/testFile/test_id",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:32.130:  Initializing the Express app
20:48:32.130:  Initializing the HTTP server
20:48:32.132:  Initializing the Express app
20:48:32.132:  Initializing the HTTP server
20:48:32.134:  Registering request handler {
    "type": "kettle.tests.serverPair.getRelay",
    "route": "/relay",
    "method": "get"
}
20:48:32.134:  Registering request handler {
    "type": "kettle.tests.serverPair.postRelay",
    "route": "/relay",
    "method": "post"
}
20:48:32.134:  Registering request handler {
    "type": "kettle.tests.serverPair.putRelay",
    "route": "/relay",
    "method": "put"
}
20:48:32.135:  Registering request handler {
    "type": "kettle.tests.serverPair.errorRelay",
    "route": "/errorRelay",
    "method": "get"
}
20:48:32.135:  Opening Kettle Server on port 8086
20:48:32.135:  Registering request handler {
    "type": "kettle.tests.serverPair.getEndpoint",
    "route": "/endpoint",
    "method": "get"
}
20:48:32.135:  Registering request handler {
    "type": "kettle.tests.serverPair.postEndpoint",
    "route": "/endpoint",
    "method": "post"
}
20:48:32.135:  Registering request handler {
    "type": "kettle.tests.serverPair.putEndpoint",
    "route": "/endpoint",
    "method": "put"
}
20:48:32.135:  Registering request handler {
    "type": "kettle.tests.serverPair.errorEndpoint",
    "route": "/errorEndpoint",
    "method": "get"
}
20:48:32.135:  Opening Kettle Server on port 8087
20:48:32.136:  Successfully queued test Access GET request
20:48:32.136:  Successfully queued test Access SET request via POST
20:48:32.136:  Successfully queued test Access SET request via PUT
20:48:32.136:  Successfully queued test Relay error state via GET
20:48:32.136:  Kettle Server cgaxtng3-4695 is listening on port 8086
20:48:32.137:  Kettle Server cgaxtng3-4693 is listening on port 8087
20:48:32.137:  Express stopped...
20:48:32.137:  jq: Test concluded - Module "15. Testing CouchDB URL datasource with HTTP existing document - set" Test name "Simple set test": 1/1 passed - PASS
20:48:32.137:  Sending a GET request to: http://127.0.0.1:8086/relay
20:48:32.148:  Invoking handler kettle.tests.serverPair.getRelay for route /relay with expectedGrade kettle.request.http
20:48:32.154:  Kettle server allocated request object with type kettle.tests.serverPair.getRelay
20:48:32.155:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "get",
    "writeMethod": "POST"
}
20:48:32.173:  Invoking handler kettle.tests.serverPair.getEndpoint for route /endpoint with expectedGrade kettle.request.http
20:48:32.180:  Kettle server allocated request object with type kettle.tests.serverPair.getEndpoint
20:48:32.181:  ENDPOINT Resolving with value 42
20:48:32.197:  jq: Test concluded - Module "Cross server datasource access" Test name "Access GET request": 3/3 passed - PASS
20:48:32.197:  Sending a POST request to: http://127.0.0.1:8086/relay
20:48:32.198:  Invoking handler kettle.tests.serverPair.postRelay for route /relay with expectedGrade kettle.request.http
20:48:32.204:  Kettle server allocated request object with type kettle.tests.serverPair.postRelay
20:48:32.205:  DataSource Issuing HTTP request with options {
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "operation": "set",
    "writeMethod": "POST"
}
20:48:32.207:  Invoking handler kettle.tests.serverPair.postEndpoint for route /endpoint with expectedGrade kettle.request.http
20:48:32.213:  Kettle server allocated request object with type kettle.tests.serverPair.postEndpoint
20:48:32.214:  ENDPOINT Resolving with value {
    "payload": "post return value"
}
20:48:32.230:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via POST": 4/4 passed - PASS
20:48:32.231:  Sending a PUT request to: http://127.0.0.1:8086/relay
20:48:32.232:  Invoking handler kettle.tests.serverPair.putRelay for route /relay with expectedGrade kettle.request.http
20:48:32.239:  Kettle server allocated request object with type kettle.tests.serverPair.putRelay
20:48:32.240:  DataSource Issuing HTTP request with options {
    "method": "PUT",
    "headers": {
        "Content-Type": "application/json",
        "Content-Length": 0
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/endpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/endpoint",
    "writeMethod": "PUT",
    "operation": "set"
}
20:48:32.241:  Invoking handler kettle.tests.serverPair.putEndpoint for route /endpoint with expectedGrade kettle.request.http
20:48:32.247:  Kettle server allocated request object with type kettle.tests.serverPair.putEndpoint
20:48:32.248:  ENDPOINT Resolving with value {
    "payload": "put return value"
}
20:48:32.265:  jq: Test concluded - Module "Cross server datasource access" Test name "Access SET request via PUT": 4/4 passed - PASS
20:48:32.266:  Sending a GET request to: http://127.0.0.1:8086/errorRelay
20:48:32.267:  Invoking handler kettle.tests.serverPair.errorRelay for route /errorRelay with expectedGrade kettle.request.http
20:48:32.273:  Kettle server allocated request object with type kettle.tests.serverPair.errorRelay
20:48:32.274:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8087",
    "pathname": "/errorEndpoint",
    "search": "",
    "termMap": {
        "sourcePort": 8087
    },
    "url": "http://localhost:8087/errorEndpoint",
    "directModel": null,
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:32.275:  Invoking handler kettle.tests.serverPair.errorEndpoint for route /errorEndpoint with expectedGrade kettle.request.http
20:48:32.281:  Kettle server allocated request object with type kettle.tests.serverPair.errorEndpoint
20:48:32.285:  Stopping Kettle Server cgaxtng3-4693 on port 8087
20:48:32.285:  Stopping Kettle Server cgaxtng3-4695 on port 8086
20:48:32.286:  Kettle Server cgaxtng3-4693 on port 8087 is stopped
20:48:32.286:  Kettle Server cgaxtng3-4695 on port 8086 is stopped
20:48:32.304:  Successfully queued test HTTPMethods GET test
20:48:32.304:  jq: Test concluded - Module "Cross server datasource access" Test name "Relay error state via GET": 2/2 passed - PASS
20:48:32.347:  Initializing the Express app
20:48:32.347:  Initializing the HTTP server
20:48:32.349:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:32.349:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:32.349:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:32.349:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:32.349:  Opening Kettle Server on port 8081
20:48:32.349:  Kettle Server cgaxtng3-5127 is listening on port 8081
20:48:32.350:  Sending a GET request to: http://127.0.0.1:8081/
20:48:32.351:  Invoking handler kettle.tests.HTTPMethods.get.handler for route / with expectedGrade kettle.request.http
20:48:32.356:  Kettle server allocated request object with type kettle.tests.HTTPMethods.get.handler
20:48:32.358:  Stopping Kettle Server cgaxtng3-5127 on port 8081
20:48:32.358:  Kettle Server cgaxtng3-5127 on port 8081 is stopped
20:48:32.373:  Successfully queued test HTTPMethods POST test
20:48:32.373:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods GET test": 2/2 passed - PASS
20:48:32.393:  Initializing the Express app
20:48:32.394:  Initializing the HTTP server
20:48:32.395:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:32.395:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:32.395:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:32.395:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:32.396:  Opening Kettle Server on port 8081
20:48:32.396:  Kettle Server cgaxtng3-5264 is listening on port 8081
20:48:32.396:  Sending a POST request to: http://127.0.0.1:8081/
20:48:32.406:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:48:32.412:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:48:32.415:  Stopping Kettle Server cgaxtng3-5264 on port 8081
20:48:32.415:  Kettle Server cgaxtng3-5264 on port 8081 is stopped
20:48:32.430:  Successfully queued test HTTPMethods PUT test
20:48:32.430:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods POST test": 2/2 passed - PASS
20:48:32.451:  Initializing the Express app
20:48:32.451:  Initializing the HTTP server
20:48:32.453:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:32.453:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:32.453:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:32.453:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:32.453:  Opening Kettle Server on port 8081
20:48:32.453:  Kettle Server cgaxtng3-5401 is listening on port 8081
20:48:32.454:  Sending a PUT request to: http://127.0.0.1:8081/
20:48:32.455:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:48:32.460:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:48:32.462:  Stopping Kettle Server cgaxtng3-5401 on port 8081
20:48:32.462:  Kettle Server cgaxtng3-5401 on port 8081 is stopped
20:48:32.483:  Successfully queued test HTTPMethods PUT & POST in sequence test
20:48:32.483:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test": 2/2 passed - PASS
20:48:32.504:  Initializing the Express app
20:48:32.504:  Initializing the HTTP server
20:48:32.506:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:32.506:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:32.506:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:32.506:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:32.506:  Opening Kettle Server on port 8081
20:48:32.506:  Kettle Server cgaxtng3-5554 is listening on port 8081
20:48:32.507:  Sending a POST request to: http://127.0.0.1:8081/
20:48:32.508:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:48:32.513:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:48:32.515:  Sending a PUT request to: http://127.0.0.1:8081/
20:48:32.516:  Invoking handler kettle.tests.HTTPMethods.put.handler for route / with expectedGrade kettle.request.http
20:48:32.521:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put.handler
20:48:32.524:  Sending a POST request to: http://127.0.0.1:8081/
20:48:32.524:  Invoking handler kettle.tests.HTTPMethods.post.handler for route / with expectedGrade kettle.request.http
20:48:32.530:  Kettle server allocated request object with type kettle.tests.HTTPMethods.post.handler
20:48:32.532:  Stopping Kettle Server cgaxtng3-5554 on port 8081
20:48:32.532:  Kettle Server cgaxtng3-5554 on port 8081 is stopped
20:48:32.547:  Successfully queued test HTTPMethods PUT test with alternate response status code
20:48:32.547:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT & POST in sequence test": 6/6 passed - PASS
20:48:32.568:  Initializing the Express app
20:48:32.568:  Initializing the HTTP server
20:48:32.569:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/",
    "method": "get"
}
20:48:32.570:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.post.handler",
    "route": "/",
    "method": "post"
}
20:48:32.570:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put.handler",
    "route": "/",
    "method": "put"
}
20:48:32.570:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.put201.handler",
    "route": "/201",
    "method": "put"
}
20:48:32.570:  Opening Kettle Server on port 8081
20:48:32.570:  Kettle Server cgaxtng3-5735 is listening on port 8081
20:48:32.570:  Sending a PUT request to: http://127.0.0.1:8081/201
20:48:32.581:  Invoking handler kettle.tests.HTTPMethods.put201.handler for route /201 with expectedGrade kettle.request.http
20:48:32.587:  Kettle server allocated request object with type kettle.tests.HTTPMethods.put201.handler
20:48:32.589:  Stopping Kettle Server cgaxtng3-5735 on port 8081
20:48:32.589:  Kettle Server cgaxtng3-5735 on port 8081 is stopped
20:48:32.609:  Successfully queued test CORS middleware tests
20:48:32.609:  jq: Test concluded - Module "kettle.tests.HTTPMethods.config tests" Test name "HTTPMethods PUT test with alternate response status code": 3/3 passed - PASS
20:48:32.629:  Initializing the Express app
20:48:32.630:  Initializing the HTTP server
20:48:32.631:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:32.631:  Opening Kettle Server on port 8081
20:48:32.631:  Kettle Server cgaxtng3-5880 is listening on port 8081
20:48:32.632:  Sending a GET request to: http://127.0.0.1:8081/
20:48:32.633:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:32.639:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:32.642:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:48:32.642:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:32.648:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:32.650:  Stopping Kettle Server cgaxtng3-5880 on port 8081
20:48:32.650:  Kettle Server cgaxtng3-5880 on port 8081 is stopped
20:48:32.666:  Successfully queued test CORS middleware no credential tests
20:48:32.666:  jq: Test concluded - Module "kettle.tests.CORS.config tests" Test name "CORS middleware tests": 11/11 passed - PASS
20:48:32.692:  Initializing the Express app
20:48:32.692:  Initializing the HTTP server
20:48:32.695:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:32.695:  Opening Kettle Server on port 8081
20:48:32.695:  Kettle Server cgaxtng3-6041 is listening on port 8081
20:48:32.696:  Sending a GET request to: http://127.0.0.1:8081/
20:48:32.697:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:32.705:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:32.707:  Stopping Kettle Server cgaxtng3-6041 on port 8081
20:48:32.707:  Kettle Server cgaxtng3-6041 on port 8081 is stopped
20:48:32.726:  Successfully queued test CORS middleware custom origin tests
20:48:32.726:  jq: Test concluded - Module "kettle.tests.CORS.noCred.config tests" Test name "CORS middleware no credential tests": 7/7 passed - PASS
20:48:32.747:  Initializing the Express app
20:48:32.748:  Initializing the HTTP server
20:48:32.749:  Registering request handler {
    "type": "kettle.tests.CORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:32.749:  Opening Kettle Server on port 8081
20:48:32.750:  Kettle Server cgaxtng3-6188 is listening on port 8081
20:48:32.750:  Sending a GET request to: http://127.0.0.1:8081/
20:48:32.761:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:32.766:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:32.768:  Sending a GET request to: http://127.0.0.1:8081/
20:48:32.769:  Invoking handler kettle.tests.CORS.handler for route / with expectedGrade kettle.request.http
20:48:32.775:  Kettle server allocated request object with type kettle.tests.CORS.handler
20:48:32.777:  Stopping Kettle Server cgaxtng3-6188 on port 8081
20:48:32.777:  Kettle Server cgaxtng3-6188 on port 8081 is stopped
20:48:32.793:  Successfully queued test No CORS middleware tests
20:48:32.794:  jq: Test concluded - Module "kettle.tests.CORS.origin.config tests" Test name "CORS middleware custom origin tests": 14/14 passed - PASS
20:48:32.815:  Initializing the Express app
20:48:32.816:  Initializing the HTTP server
20:48:32.817:  Registering request handler {
    "type": "kettle.tests.noCORS.handler",
    "route": "/",
    "method": "get, options"
}
20:48:32.817:  Opening Kettle Server on port 8081
20:48:32.817:  Kettle Server cgaxtng3-6349 is listening on port 8081
20:48:32.818:  Sending a GET request to: http://127.0.0.1:8081/
20:48:32.819:  Invoking handler kettle.tests.noCORS.handler for route / with expectedGrade kettle.request.http
20:48:32.828:  Kettle server allocated request object with type kettle.tests.noCORS.handler
20:48:32.831:  Stopping Kettle Server cgaxtng3-6349 on port 8081
20:48:32.831:  Kettle Server cgaxtng3-6349 on port 8081 is stopped
20:48:32.871:  Successfully queued test Session tests
20:48:32.871:  jq: Test concluded - Module "kettle.tests.CORS.noCORS.config tests" Test name "No CORS middleware tests": 6/6 passed - PASS
20:48:32.904:  Initializing the Express app
20:48:32.905:  Initializing the HTTP server
20:48:32.906:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:48:32.906:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:48:32.907:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:48:32.907:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:48:32.907:  Opening Kettle Server on port 8081
20:48:32.907:  Kettle Server cgaxtng3-6526 is listening on port 8081
20:48:32.908:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:32.909:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:32.915:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:32.917:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:32.918:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:32.927:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:32.941:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:48:32.942:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:48:32.948:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:48:32.953:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:32.954:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:32.962:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:32.966:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:32.967:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:32.972:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:32.975:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:48:32.975:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:48:32.982:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:48:32.985:  Stopping Kettle Server cgaxtng3-6526 on port 8081
20:48:32.986:  Kettle Server cgaxtng3-6526 on port 8081 is stopped
20:48:33.017:  Successfully queued test WebSockets tests
20:48:33.018:  jq: Test concluded - Module "kettle.tests.session.config tests" Test name "Session tests": 24/24 passed - PASS
20:48:33.063:  Initializing the Express app
20:48:33.064:  Initializing the HTTP server
20:48:33.066:  Initializing the ws server
20:48:33.068:  Registering request handler {
    "type": "kettle.tests.ws.testSocket.handler",
    "route": "/socket_path"
}
20:48:33.068:  Registering request handler {
    "type": "kettle.tests.ws.testGet.handler",
    "route": "/"
}
20:48:33.068:  Registering request handler {
    "type": "kettle.tests.ws.testClose.handler",
    "route": "/close_path"
}
20:48:33.068:  Opening Kettle Server on port 8081
20:48:33.069:  Kettle Server cgaxtng3-6838 is listening on port 8081
20:48:33.070:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:48:33.096:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:48:33.116:  Kettle server allocated request object with type kettle.tests.ws.testSocket.handler
20:48:33.118:  Received WebSockets connection on path /socket_path
20:48:33.122:  kettle.test.request.ws client message{"success":true}
20:48:33.124:  kettle.test.request.ws client message{"success":true}
20:48:33.125:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.127:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.http
20:48:33.133:  Kettle server allocated request object with type kettle.tests.ws.testGet.handler
20:48:33.137:  Sending a GET request to: http://127.0.0.1:8081/socket_path
20:48:33.138:  kettle.test.request.ws closed, response code: 1005, reason: ""
20:48:33.138:  Invoking handler kettle.tests.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.http
20:48:33.145:  Kettle server allocated request object with type kettle.request.http.mismatch
20:48:33.147:  connecting ws.WebSocket to: ws://127.0.0.1:8081/ with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/"
}
20:48:33.148:  Invoking handler kettle.tests.ws.testGet.handler for route / with expectedGrade kettle.request.ws
20:48:33.156:  Kettle server allocated request object with type kettle.request.ws.mismatch
20:48:33.158:  connecting ws.WebSocket to: ws://127.0.0.1:8081/close_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/close_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/close_path"
}
20:48:33.159:  Invoking handler kettle.tests.ws.testClose.handler for route /close_path with expectedGrade kettle.request.ws
20:48:33.166:  Kettle server allocated request object with type kettle.tests.ws.testClose.handler
20:48:33.167:  Received WebSockets connection on path /close_path
20:48:33.173:  kettle.test.request.ws closed, response code: 1000, reason: ""
20:48:33.174:  Stopping Kettle Server cgaxtng3-6838 on port 8081
20:48:33.174:  Kettle Server cgaxtng3-6838 on port 8081 is stopped
20:48:33.175:  kettle.test.request.ws client error{
    
}
20:48:33.176:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:48:33.214:  Successfully queued test WebSockets Session tests
20:48:33.215:  jq: Test concluded - Module "kettle.tests.webSockets.config tests" Test name "WebSockets tests": 17/17 passed - PASS
20:48:33.251:  Initializing the Express app
20:48:33.251:  Initializing the HTTP server
20:48:33.252:  Initializing the ws server
20:48:33.253:  Registering request handler {
    "type": "kettle.tests.session.ws.testSocket.handler",
    "route": "/socket_path"
}
20:48:33.253:  Registering request handler {
    "type": "kettle.tests.session.none.handler",
    "route": "/testNoSessionRequest",
    "method": "get"
}
20:48:33.253:  Registering request handler {
    "type": "kettle.tests.session.existing.handler",
    "route": "/testExistingSessionRequest",
    "method": "get"
}
20:48:33.253:  Registering request handler {
    "type": "kettle.tests.session.start.handler",
    "route": "/testSessionStart/:token",
    "method": "get"
}
20:48:33.253:  Registering request handler {
    "type": "kettle.tests.session.end.handler",
    "route": "/testSessionEnd/:token",
    "method": "get"
}
20:48:33.254:  Opening Kettle Server on port 8081
20:48:33.254:  Kettle Server cgaxtng3-7145 is listening on port 8081
20:48:33.255:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:33.255:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:33.260:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:33.263:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:33.264:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:33.272:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:33.275:  Sending a GET request to: http://127.0.0.1:8081/testSessionStart/123
20:48:33.276:  Invoking handler kettle.tests.session.start.handler for route /testSessionStart/:token with expectedGrade kettle.request.http
20:48:33.281:  Kettle server allocated request object with type kettle.tests.session.start.handler
20:48:33.284:  Sending a GET request to: http://127.0.0.1:8081/testExistingSessionRequest
20:48:33.285:  Invoking handler kettle.tests.session.existing.handler for route /testExistingSessionRequest with expectedGrade kettle.request.http
20:48:33.293:  Kettle server allocated request object with type kettle.tests.session.existing.handler
20:48:33.296:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        "Cookie": [
            "kettle.sid=s%3ASRM-WtaE78ZJNzEp8i59O3rXIM3ZAWFe.Vrn8CTHsnN3qa3zz%2FVhuODdEwzzJ6g80UKU1Zc377ZE; Path=/; HttpOnly"
        ]
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:48:33.297:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:48:33.307:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:48:33.308:  Received WebSockets connection on path /socket_path
20:48:33.311:  testSocket.receiveMessage got session {
    "cookie": {
        "path": "/",
        "_expires": null,
        "originalMaxAge": null,
        "httpOnly": true,
        "secure": false,
        "expires": [Synthetic property],
        "maxAge": [Synthetic property],
        "data": [Synthetic property],
        "serialize": [Synthetic property],
        "toJSON": [Synthetic property]
    },
    "token": "123"
}
20:48:33.312:  kettle.test.request.ws client message{"type":"midSuccess","payload":{"token":"123","success":true}}
20:48:33.313:  connecting ws.WebSocket to: ws://127.0.0.1:8081/socket_path with request options {
    "headers": {
        
    },
    "protocol": "ws",
    "username": "",
    "password": "",
    "hostname": "127.0.0.1",
    "port": "8081",
    "pathname": "/socket_path",
    "search": "",
    "termMap": {
        
    },
    "writeMethod": "PUT",
    "url": "ws://127.0.0.1:8081/socket_path"
}
20:48:33.313:  Invoking handler kettle.tests.session.ws.testSocket.handler for route /socket_path with expectedGrade kettle.request.ws
20:48:33.322:  Kettle server allocated request object with type kettle.tests.session.ws.testSocket.handler
20:48:33.324:  Sending a GET request to: http://127.0.0.1:8081/testNoSessionRequest
20:48:33.325:  Invoking handler kettle.tests.session.none.handler for route /testNoSessionRequest with expectedGrade kettle.request.http
20:48:33.330:  Kettle server allocated request object with type kettle.tests.session.none.handler
20:48:33.333:  Sending a GET request to: http://127.0.0.1:8081/testSessionEnd/123
20:48:33.333:  Invoking handler kettle.tests.session.end.handler for route /testSessionEnd/:token with expectedGrade kettle.request.http
20:48:33.339:  Kettle server allocated request object with type kettle.tests.session.end.handler
20:48:33.342:  Stopping Kettle Server cgaxtng3-7145 on port 8081
20:48:33.342:  Kettle Server cgaxtng3-7145 on port 8081 is stopped
20:48:33.343:  kettle.test.request.ws client error{
    
}
20:48:33.344:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:48:33.369:  Successfully queued test Error tests I
20:48:33.369:  kettle.test.request.ws closed, response code: 1006, reason: ""
20:48:33.369:  Failing to resume callback for request cgaxtng3-7323 which has already concluded
20:48:33.370:  jq: Test concluded - Module "kettle.tests.session.webSockets.config tests" Test name "WebSockets Session tests": 31/31 passed - PASS
20:48:33.398:  Initializing the Express app
20:48:33.399:  Initializing the HTTP server
20:48:33.401:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:48:33.402:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:48:33.402:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:48:33.402:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:48:33.402:  Opening Kettle Server on port 8081
20:48:33.402:  Kettle Server cgaxtng3-7496 is listening on port 8081
20:48:33.404:  FATAL ERROR: Uncaught exception: "Global Error Triggered".triggerError is not a function
TypeError: "Global Error Triggered".triggerError is not a function
    at kettle.tests.triggerGlobalErrorSync (/data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:15:778)
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:16:14
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:48:33.405:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.417:  Invoking handler kettle.tests.error.requestError for route / with expectedGrade kettle.request.http
20:48:33.428:  Kettle server allocated request object with type kettle.tests.error.requestError
20:48:33.428:  ASSERTION FAILED: Simulated assertion failed in request - this failure is expected: 
20:48:33.429:  Current activity: 
20:48:33.429:      while invoking invoker with name handleRequest and record {
    "func": undefined,
    "funcName": "fluid.fail",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": [
        "Simulated assertion failed in request - this failure is expected: "
    ],
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: cgaxtng3-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-cgaxtng3-7437.tests.configuration.server.app.requests.request
20:48:33.429:      while firing to listener to event named onHandle of component component { typeName: "kettle.tests.error.requestError id: cgaxtng3-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-cgaxtng3-7437.tests.configuration.server.app.requests.request
20:48:33.429:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.error.requestError id: cgaxtng3-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-cgaxtng3-7437.tests.configuration.server.app.requests.request
20:48:33.431:  kettle.tests.error.handleFullRequest forwarding error to express
20:48:33.432:  kettle.tests.server.upgradeError received error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:48:33.432:  kettle.tests.server.upgradeError throwing uncaught exception error {
    "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
    "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)\n    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)\n    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
20:48:33.432:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: 
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at fluid.componentConstructor.invokeInvoker [as handleRequest] (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2781:25)
    at kettle.request.handleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:97:157)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.request.handleRequestTask (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:104:25)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:241:31
    at fluid.promise.pushHandler (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:85:17)
    at that.then (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:32:23)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:240:19)
    at fluid.promise.sequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:270:19)
    at kettle.request.sequenceRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:120:169)
    at kettle.request.initiateHandleRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:132:530)
    at togo (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2849:29)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.concludeComponentInit (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1536:26)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2208:25
    at Array.forEach (<anonymous>)
    at localWorkflowTask (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2207:37)
    at Object.invokeNext (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:257:52)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:237:35)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at fluid.promise.progressSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:218:19)
    at fluid.promise.resumeSequence (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:246:27)
    at commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2329:27)
    at fluid.tryCatch (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:241:20)
    at fluid.commitPotentiae (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:2314:11)
    at fluid.concludeAnyTreeTransaction (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidIoC.js:1429:15)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at kettle.server.checkCreateRequest (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:53:303)
    at fluid.componentConstructor.dispatcher (/data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:59:232)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleServer.js:69:213
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at expressInit (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/init.js:40:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at query (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/middleware/query.js:45:5)
    at Layer.handle [as handle_request] (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:323:13)
    at /data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:341:12)
    at next (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/router/index.js:174:3)
    at Function.handle (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/application.js:174:10)
    at Server.app (/data/js-variants/multee/Clients/session/kettle/node_modules/express/lib/express.js:39:9)
    at Server.emit (node:events:527:28)
    at parserOnIncoming (node:_http_server:993:12)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)
20:48:33.432:  Current activity: 
20:48:33.432:      while invoking invoker with name handleFullRequest and record {
    "func": undefined,
    "funcName": "kettle.tests.error.handleFullRequest",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "args": {
        "value": "NO_ARGUMENTS"
    },
    "componentSource": "kettle.tests.error.requestError"
} holding component component { typeName: "kettle.tests.error.requestError id: cgaxtng3-7566" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.error.requestError"]} at path serverEnvironment-cgaxtng3-7437.tests.configuration.server.app.requests.request
20:48:33.433:  ASSERTION FAILED: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
20:48:33.433:  FATAL ERROR: Uncaught exception: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:5 .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]
Error: Assertion failure - check console for more details: Error: rejecting promise {
    "then": { Function
        
    },
    "resolve": { Function
        
    },
    "reject": { Function
        
    },
    "cancel": { Function
        
    },
    "complete": { Function
        
    },
    "disposition": "reject",
    "value": {
        "message": "Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: ",
        "stack": "Error: Assertion failure - check console for more details: Simulated assertion failed in request - this failure is expected: \n    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)\n    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)\n    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)\n    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/ .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars]which has already received "reject"
    at new fluid.FluidError (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:182:22)
    at fluid.builtinFail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:206:11)
    at kettle.failureHandler (/data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:585)
    at fluid.event.firer.fire (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:1764:36)
    at fluid.fail (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/Fluid.js:222:28)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:51:23)
    at that.complete (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:72:21)
    at that.reject (/data/js-variants/multee/Clients/session/kettle/node_modules/infusion/src/framework/core/js/FluidPromises.js:58:18)
    at /data/js-variants/multee/Clients/session/kettle/lib/KettleUtils.js:18:444
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:48:33.435:  Sending a GET request to: http://127.0.0.1:8081/errorCode
20:48:33.436:  Invoking handler kettle.tests.error.requestErrorCode.handler for route /errorCode with expectedGrade kettle.request.http
20:48:33.445:  Kettle server allocated request object with type kettle.tests.error.requestErrorCode.handler
20:48:33.448:  Stopping Kettle Server cgaxtng3-7496 on port 8081
20:48:33.448:  Kettle Server cgaxtng3-7496 on port 8081 is stopped
20:48:33.468:  Successfully queued test Error tests II
20:48:33.469:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests I": 4/4 passed - PASS
20:48:33.496:  Initializing the Express app
20:48:33.497:  Initializing the HTTP server
20:48:33.499:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:48:33.499:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:48:33.499:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:48:33.500:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:48:33.500:  Opening Kettle Server on port 8081
20:48:33.500:  Kettle Server cgaxtng3-7658 is listening on port 8081
20:48:33.501:  Sending a GET request to: http://127.0.0.1:8081/errorAsync
20:48:33.502:  Invoking handler kettle.tests.error.requestErrorAsync.handler for route /errorAsync with expectedGrade kettle.request.http
20:48:33.508:  Kettle server allocated request object with type kettle.tests.error.requestErrorAsync.handler
20:48:33.509:  FATAL ERROR: Uncaught exception: Uncharacterised error which should cause request failure
Error: Uncharacterised error which should cause request failure
    at /data/js-variants/multee/Clients/session/kettle/tests/ErrorTests.js:13:1376
    at wrappedCallback (/data/js-variants/multee/Clients/session/kettle/lib/KettleRequest.js:51:625)
    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)
20:48:33.511:  Stopping Kettle Server cgaxtng3-7658 on port 8081
20:48:33.511:  Kettle Server cgaxtng3-7658 on port 8081 is stopped
20:48:33.526:  Successfully queued test Plaintext response error test
20:48:33.526:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Error tests II": 1/1 passed - PASS
20:48:33.546:  Initializing the Express app
20:48:33.547:  Initializing the HTTP server
20:48:33.548:  Registering request handler {
    "type": "kettle.tests.error.requestError",
    "route": "/",
    "method": "get"
}
20:48:33.548:  Registering request handler {
    "type": "kettle.tests.error.requestErrorCode.handler",
    "route": "/errorCode",
    "method": "get"
}
20:48:33.548:  Registering request handler {
    "type": "kettle.tests.error.requestErrorAsync.handler",
    "route": "/errorAsync",
    "method": "get"
}
20:48:33.549:  Registering request handler {
    "type": "kettle.tests.error.plainRequestError.handler",
    "route": "/plainRequestError",
    "method": "get"
}
20:48:33.549:  Opening Kettle Server on port 8081
20:48:33.549:  Kettle Server cgaxtng3-7796 is listening on port 8081
20:48:33.549:  Sending a GET request to: http://127.0.0.1:8081/plainRequestError
20:48:33.550:  Invoking handler kettle.tests.error.plainRequestError.handler for route /plainRequestError with expectedGrade kettle.request.http
20:48:33.556:  Kettle server allocated request object with type kettle.tests.error.plainRequestError.handler
20:48:33.558:  Stopping Kettle Server cgaxtng3-7796 on port 8081
20:48:33.559:  Kettle Server cgaxtng3-7796 on port 8081 is stopped
20:48:33.577:  Successfully queued test Bad config: missing handler test
20:48:33.577:  jq: Test concluded - Module "kettle.tests.error.config tests" Test name "Plaintext response error test": 2/2 passed - PASS
20:48:33.599:  Initializing the Express app
20:48:33.599:  Initializing the HTTP server
20:48:33.601:  Registering request handler {
    "type": "kettle.tests.badRequest.missing.handler",
    "route": "/",
    "method": "get"
}
20:48:33.601:  Opening Kettle Server on port 8081
20:48:33.601:  Kettle Server cgaxtng3-7940 is listening on port 8081
20:48:33.602:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.611:  Invoking handler kettle.tests.badRequest.missing.handler for route / with expectedGrade kettle.request.http
20:48:33.611:  ASSERTION FAILED: Error in Kettle application definition - couldn't load handler kettle.tests.badRequest.missing.handler and gradeNames [] to a component derived from kettle.request - got defaults of undefined
20:48:33.613:  Stopping Kettle Server cgaxtng3-7940 on port 8081
20:48:33.613:  Kettle Server cgaxtng3-7940 on port 8081 is stopped
20:48:33.634:  Successfully queued test Bad config: missing handler type test
20:48:33.635:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:48:33.662:  Initializing the Express app
20:48:33.663:  Initializing the HTTP server
20:48:33.665:  Registering request handler {
    "type": null,
    "route": "/",
    "method": "get"
}
20:48:33.666:  Opening Kettle Server on port 8081
20:48:33.666:  Kettle Server cgaxtng3-8066 is listening on port 8081
20:48:33.667:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.668:  ASSERTION FAILED: Error in Kettle application definition - handler {
    "method": "get",
    "type": null,
    "route": "/",
    "keys": [],
    "regexp": {
        "keys": []
    }
} must have a request grade name registered as member "type"
20:48:33.670:  Stopping Kettle Server cgaxtng3-8066 on port 8081
20:48:33.670:  Kettle Server cgaxtng3-8066 on port 8081 is stopped
20:48:33.691:  Successfully queued test Bad config: missing handler test
20:48:33.691:  jq: Test concluded - Module "kettle.tests.badRequest.missing.handlerType.config.mergedConfig tests" Test name "Bad config: missing handler type test": 4/4 passed - PASS
20:48:33.713:  Initializing the Express app
20:48:33.714:  Initializing the HTTP server
20:48:33.715:  Registering request handler {
    "type": "kettle.tests.badRequest.throwing.handler",
    "route": "/",
    "method": "get"
}
20:48:33.715:  Opening Kettle Server on port 8081
20:48:33.715:  Kettle Server cgaxtng3-8192 is listening on port 8081
20:48:33.716:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.717:  Invoking handler kettle.tests.badRequest.throwing.handler for route / with expectedGrade kettle.request.http
20:48:33.723:  Kettle server allocated request object with type kettle.tests.badRequest.throwing.handler
20:48:33.726:  Stopping Kettle Server cgaxtng3-8192 on port 8081
20:48:33.726:  Kettle Server cgaxtng3-8192 on port 8081 is stopped
20:48:33.744:  Successfully queued test Bad config: missing middleware test
20:48:33.744:  jq: Test concluded - Module "kettle.tests.badRequest.throwing.handler.config.mergedConfig tests" Test name "Bad config: missing handler test": 3/3 passed - PASS
20:48:33.766:  Initializing the Express app
20:48:33.767:  Initializing the HTTP server
20:48:33.768:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.missing.handler",
    "route": "/",
    "method": "get"
}
20:48:33.768:  Opening Kettle Server on port 8081
20:48:33.768:  Kettle Server cgaxtng3-8339 is listening on port 8081
20:48:33.769:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.778:  Invoking handler kettle.tests.badRequest.middleware.missing.handler for route / with expectedGrade kettle.request.http
20:48:33.784:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.missing.handler
20:48:33.784:  ASSERTION FAILED: Couldn't resolve reference {middlewareHolder}.missingMiddleware from member "middleware" of record {
    "middleware": "{middlewareHolder}.missingMiddleware"
} to a middleware component for a kettle.tests.badRequest.middleware.missing.handler requestMiddleware  entry: got undefined
20:48:33.784:  Current activity: 
20:48:33.785:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.missing.handler id: cgaxtng3-8410" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.missing.handler"]} at path serverEnvironment-cgaxtng3-8285.tests.configuration.server.app.requests.request
20:48:33.786:  Unhandled promise rejection: {
    "isError": true,
    "message": "Couldn't resolve reference {middlewareHolder}.missingMiddleware from member \"middleware\" of record "
}
20:48:33.787:  Stopping Kettle Server cgaxtng3-8339 on port 8081
20:48:33.787:  Kettle Server cgaxtng3-8339 on port 8081 is stopped
20:48:33.806:  Successfully queued test Bad config: bad middleware test
20:48:33.806:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.missing.config.mergedConfig tests" Test name "Bad config: missing middleware test": 4/4 passed - PASS
20:48:33.828:  Initializing the Express app
20:48:33.828:  Initializing the HTTP server
20:48:33.830:  Registering request handler {
    "type": "kettle.tests.badRequest.middleware.bad.handler",
    "route": "/",
    "method": "get"
}
20:48:33.830:  Opening Kettle Server on port 8081
20:48:33.830:  Kettle Server cgaxtng3-8485 is listening on port 8081
20:48:33.831:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.832:  Invoking handler kettle.tests.badRequest.middleware.bad.handler for route / with expectedGrade kettle.request.http
20:48:33.840:  Kettle server allocated request object with type kettle.tests.badRequest.middleware.bad.handler
20:48:33.840:  ASSERTION FAILED: Middleware component {
    "typeName": "kettle.tests.badRequest.bad.middleware",
    "id": "cgaxtng3-8557",
    "lifecycleStatus": "treeConstructed",
    "destroy": { Function
        
    },
    "options": {
        "gradeNames": [
            "fluid.component",
            "kettle.middleware",
            "kettle.plainMiddleware",
            "kettle.tests.badRequest.bad.middleware"
        ],
        "events": {
            "onCreate": "promise",
            "onDestroy": "promise",
            "afterDestroy": "promise"
        },
        "invokers": {
            "handle": {
                "func": undefined,
                "funcName": "kettle.plainMiddleware.resolve",
                "listener": undefined,
                "this": undefined,
                "method": undefined,
                "changePath": undefined,
                "value": undefined,
                "componentSource": "kettle.plainMiddleware",
                "args": [
                    "{that}",
                    "{arguments}.0",
                    " .... [output suppressed at 1024 chars - for more output, increase fluid.logObjectRenderChars] with type kettle.tests.badRequest.bad.middleware is improperly configured - an option named "middleware" of function type is required - got undefined
20:48:33.841:  Current activity: 
20:48:33.841:      while invoking invoker with name handle and record {
    "func": undefined,
    "funcName": "kettle.plainMiddleware.resolve",
    "listener": undefined,
    "this": undefined,
    "method": undefined,
    "changePath": undefined,
    "value": undefined,
    "componentSource": "kettle.plainMiddleware",
    "args": [
        "{that}",
        "{arguments}.0",
        "{plainMiddleware}.options.asyncMiddleware"
    ]
} holding component component { typeName: "kettle.tests.badRequest.bad.middleware id: cgaxtng3-8557" gradeNames: ["kettle.middleware","kettle.plainMiddleware","kettle.tests.badRequest.bad.middleware"]} at path serverEnvironment-cgaxtng3-8431.tests.configuration.server.app.requests.request.badMiddleware
20:48:33.841:      while firing to listener to event named onCreate of component component { typeName: "kettle.tests.badRequest.middleware.bad.handler id: cgaxtng3-8556" gradeNames: ["kettle.request","kettle.request.http","kettle.tests.badRequest.middleware.bad.handler"]} at path serverEnvironment-cgaxtng3-8431.tests.configuration.server.app.requests.request
20:48:33.843:  Unhandled promise rejection: {
    "isError": true,
    "message": "Middleware component "
}
20:48:33.844:  Stopping Kettle Server cgaxtng3-8485 on port 8081
20:48:33.844:  Kettle Server cgaxtng3-8485 on port 8081 is stopped
20:48:33.862:  Successfully queued test Bad config: static middleware with no path test
20:48:33.862:  jq: Test concluded - Module "kettle.tests.badRequest.middleware.bad.config.mergedConfig tests" Test name "Bad config: bad middleware test": 4/4 passed - PASS
20:48:33.884:  Initializing the Express app
20:48:33.885:  Initializing the HTTP server
20:48:33.886:  Registering request handler {
    "type": "kettle.tests.badRequest.static.nopath.handler",
    "route": "/",
    "method": "get"
}
20:48:33.887:  Opening Kettle Server on port 8081
20:48:33.887:  Kettle Server cgaxtng3-8635 is listening on port 8081
20:48:33.887:  Sending a GET request to: http://127.0.0.1:8081/
20:48:33.888:  Invoking handler kettle.tests.badRequest.static.nopath.handler for route / with expectedGrade kettle.request.http
20:48:33.895:  ASSERTION FAILED: Static middleware must have a root path configured to serve options - got undefined
20:48:33.895:  Current activity: 
20:48:33.895:      while constructing component of type kettle.middleware.static at path serverEnvironment-cgaxtng3-8581.tests.configuration.server.app.requests.request.badStatic
20:48:33.897:  Stopping Kettle Server cgaxtng3-8635 on port 8081
20:48:33.897:  Kettle Server cgaxtng3-8635 on port 8081 is stopped
20:48:33.924:  Successfully queued test Bad request: bad URL-encoded request parameter
20:48:33.925:  jq: Test concluded - Module "kettle.tests.badRequest.static.nopath.config.mergedConfig tests" Test name "Bad config: static middleware with no path test": 3/3 passed - PASS
20:48:33.950:  Initializing the Express app
20:48:33.950:  Initializing the HTTP server
20:48:33.952:  Registering request handler {
    "type": "kettle.tests.HTTPMethods.get.handler",
    "route": "/route/:key",
    "method": "get"
}
20:48:33.952:  Opening Kettle Server on port 8081
20:48:33.952:  Kettle Server cgaxtng3-8788 is listening on port 8081
20:48:33.953:  Sending a GET request to: http://127.0.0.1:8081/route/%ZZ
20:48:33.963:  Stopping Kettle Server cgaxtng3-8788 on port 8081
20:48:33.963:  Kettle Server cgaxtng3-8788 on port 8081 is stopped
20:48:33.982:  Successfully queued test Good request: bad URL-encoded request parameter
20:48:33.982:  jq: Test concluded - Module "kettle.tests.badRequest.badURL.config.mergedConfig tests" Test name "Bad request: bad URL-encoded request parameter": 3/3 passed - PASS
20:48:34.005:  Initializing the Express app
20:48:34.006:  Initializing the HTTP server
20:48:34.008:  Registering request handler {
    "type": "kettle.tests.goodRequest.emptyParameter.handler",
    "route": "/route/:key?",
    "method": "get"
}
20:48:34.009:  Opening Kettle Server on port 8081
20:48:34.009:  Kettle Server cgaxtng3-8914 is listening on port 8081
20:48:34.010:  Sending a GET request to: http://127.0.0.1:8081/route
20:48:34.011:  Invoking handler kettle.tests.goodRequest.emptyParameter.handler for route /route/:key? with expectedGrade kettle.request.http
20:48:34.018:  Kettle server allocated request object with type kettle.tests.goodRequest.emptyParameter.handler
20:48:34.020:  Stopping Kettle Server cgaxtng3-8914 on port 8081
20:48:34.020:  Kettle Server cgaxtng3-8914 on port 8081 is stopped
20:48:34.039:  Successfully queued test Good request: double handling test
20:48:34.040:  jq: Test concluded - Module "kettle.tests.goodRequest.emptyParameter.config.mergedConfig tests" Test name "Good request: bad URL-encoded request parameter": 2/2 passed - PASS
20:48:34.060:  Initializing the Express app
20:48:34.061:  Initializing the HTTP server
20:48:34.062:  Registering request handler {
    "type": "kettle.tests.goodRequest.doubleResponse.handler",
    "route": "/",
    "method": "get"
}
20:48:34.062:  Opening Kettle Server on port 8081
20:48:34.062:  Kettle Server cgaxtng3-9055 is listening on port 8081
20:48:34.063:  Sending a GET request to: http://127.0.0.1:8081/
20:48:34.064:  Invoking handler kettle.tests.goodRequest.doubleResponse.handler for route / with expectedGrade kettle.request.http
20:48:34.070:  Kettle server allocated request object with type kettle.tests.goodRequest.doubleResponse.handler
20:48:34.070:  Error in forwarding result {
    "message": "Second response"
} to promise resolve: promise has already received resolve
20:48:34.073:  Stopping Kettle Server cgaxtng3-9055 on port 8081
20:48:34.073:  Kettle Server cgaxtng3-9055 on port 8081 is stopped
20:48:34.092:  Successfully queued test Good request: options request
20:48:34.092:  jq: Test concluded - Module "kettle.tests.goodRequest.doubleResponse.config.mergedConfig tests" Test name "Good request: double handling test": 2/2 passed - PASS
20:48:34.115:  Initializing the Express app
20:48:34.116:  Initializing the HTTP server
20:48:34.118:  Registering request handler {
    "type": "kettle.tests.goodRequest.options.handler",
    "method": "options",
    "route": "/"
}
20:48:34.118:  Opening Kettle Server on port 8081
20:48:34.119:  Kettle Server cgaxtng3-9199 is listening on port 8081
20:48:34.119:  Sending a OPTIONS request to: http://127.0.0.1:8081/
20:48:34.130:  Invoking handler kettle.tests.goodRequest.options.handler for route / with expectedGrade kettle.request.http
20:48:34.136:  Kettle server allocated request object with type kettle.tests.goodRequest.options.handler
20:48:34.139:  Stopping Kettle Server cgaxtng3-9199 on port 8081
20:48:34.139:  Kettle Server cgaxtng3-9199 on port 8081 is stopped
20:48:34.157:  Successfully queued test Good request: mismatched route
20:48:34.158:  jq: Test concluded - Module "kettle.tests.goodRequest.options.config.mergedConfig tests" Test name "Good request: options request": 2/2 passed - PASS
20:48:34.180:  Initializing the Express app
20:48:34.180:  Initializing the HTTP server
20:48:34.182:  Skipping empty handler with key testHandler for app { typeName: "kettle.app id: cgaxtng3-9346" gradeNames: ["kettle.app"]}
20:48:34.182:  Opening Kettle Server on port 8081
20:48:34.182:  Kettle Server cgaxtng3-9343 is listening on port 8081
20:48:34.183:  Sending a GET request to: http://127.0.0.1:8081/route
20:48:34.184:  Kettle server getDispatcher found no matching handlers, continuing
20:48:34.184:  Stopping Kettle Server cgaxtng3-9343 on port 8081
20:48:34.185:  Kettle Server cgaxtng3-9343 on port 8081 is stopped
20:48:34.202:  Successfully queued test Good request: gradeNames for handler
20:48:34.202:  jq: Test concluded - Module "kettle.tests.goodRequest.mismatchRoute.config.mergedConfig tests" Test name "Good request: mismatched route": 2/2 passed - PASS
20:48:34.223:  Initializing the Express app
20:48:34.223:  Initializing the HTTP server
20:48:34.225:  Registering request handler {
    "type": "kettle.tests.goodRequest.gradeNames.handler",
    "gradeNames": "kettle.tests.goodRequest.gradeNames.mixin",
    "method": "get",
    "route": "/"
}
20:48:34.225:  Opening Kettle Server on port 8081
20:48:34.225:  Kettle Server cgaxtng3-9463 is listening on port 8081
20:48:34.226:  Sending a GET request to: http://127.0.0.1:8081/
20:48:34.226:  Invoking handler kettle.tests.goodRequest.gradeNames.handler for route / with expectedGrade kettle.request.http
20:48:34.234:  Kettle server allocated request object with type kettle.tests.goodRequest.gradeNames.handler
20:48:34.238:  Stopping Kettle Server cgaxtng3-9463 on port 8081
20:48:34.238:  Kettle Server cgaxtng3-9463 on port 8081 is stopped
20:48:34.264:  Successfully queued test Simple MultiConfig Test
20:48:34.264:  jq: Test concluded - Module "kettle.tests.goodRequest.gradeNames.config.mergedConfig tests" Test name "Good request: gradeNames for handler": 2/2 passed - PASS
20:48:34.323:  Initializing the Express app
20:48:34.323:  Initializing the HTTP server
20:48:34.325:  Initializing the Express app
20:48:34.325:  Initializing the HTTP server
20:48:34.336:  Registering request handler {
    "type": "kettle.tests.multiConfig.target.get.handler",
    "route": "/",
    "method": "get"
}
20:48:34.336:  Opening Kettle Server on port 8088
20:48:34.336:  Registering request handler {
    "type": "kettle.tests.multiConfig.source.get.handler",
    "route": "/",
    "method": "get"
}
20:48:34.336:  Opening Kettle Server on port 8081
20:48:34.337:  Kettle Server cgaxtng3-9605 is listening on port 8088
20:48:34.337:  Kettle Server cgaxtng3-9604 is listening on port 8081
20:48:34.337:  Sending a GET request to: http://127.0.0.1:8081/
20:48:34.338:  Invoking handler kettle.tests.multiConfig.source.get.handler for route / with expectedGrade kettle.request.http
20:48:34.350:  Kettle server allocated request object with type kettle.tests.multiConfig.source.get.handler
20:48:34.351:  DataSource Issuing HTTP request with options {
    "method": "GET",
    "headers": {
        
    },
    "protocol": "http:",
    "hostname": "localhost",
    "port": "8088",
    "pathname": "/",
    "search": "",
    "url": "http://localhost:8088/",
    "termMap": {
        
    },
    "operation": "get",
    "writeMethod": "PUT"
}
20:48:34.353:  Invoking handler kettle.tests.multiConfig.target.get.handler for route / with expectedGrade kettle.request.http
20:48:34.359:  Kettle server allocated request object with type kettle.tests.multiConfig.target.get.handler
20:48:34.365:  Stopping Kettle Server cgaxtng3-9604 on port 8081
20:48:34.366:  Stopping Kettle Server cgaxtng3-9605 on port 8088
20:48:34.366:  Kettle Server cgaxtng3-9604 on port 8081 is stopped
20:48:34.366:  Kettle Server cgaxtng3-9605 on port 8088 is stopped
20:48:34.387:  Successfully queued test Static hosting tests
20:48:34.388:  jq: Test concluded - Module "kettle.tests.multiConfig.head.config tests" Test name "Simple MultiConfig Test": 2/2 passed - PASS
20:48:34.420:  Initializing the Express app
20:48:34.421:  Initializing the HTTP server
20:48:34.422:  Registering request handler {
    "type": "kettle.tests.static.handler",
    "prefix": "/infusion",
    "route": "/*",
    "method": "get"
}
20:48:34.423:  Opening Kettle Server on port 8081
20:48:34.423:  Kettle Server cgaxtng3-9870 is listening on port 8081
20:48:34.423:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:48:34.424:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.json
20:48:34.425:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:48:34.431:  Kettle server allocated request object with type kettle.tests.static.handler
20:48:34.435:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:48:34.441:  Kettle server allocated request object with type kettle.tests.static.handler
20:48:34.449:  Sending a GET request to: http://127.0.0.1:8081/infusion/package.jsonx
20:48:34.450:  Invoking handler kettle.tests.static.handler for route /* with expectedGrade kettle.request.http
20:48:34.456:  Kettle server allocated request object with type kettle.tests.static.handler
20:48:34.462:  Stopping Kettle Server cgaxtng3-9870 on port 8081
20:48:34.462:  Kettle Server cgaxtng3-9870 on port 8081 is stopped
20:48:34.497:  Successfully queued test Multer tests
20:48:34.497:  jq: Test concluded - Module "kettle.tests.static.config tests" Test name "Static hosting tests": 9/9 passed - PASS
20:48:34.560:  Initializing the Express app
20:48:34.560:  Initializing the HTTP server
20:48:34.562:  Registering request handler {
    "type": "kettle.tests.multer.handler.single",
    "route": "/multer-single",
    "method": "post"
}
20:48:34.562:  Registering request handler {
    "type": "kettle.tests.multer.handler.array",
    "route": "/multer-array",
    "method": "post"
}
20:48:34.562:  Registering request handler {
    "type": "kettle.tests.multer.handler.fields",
    "route": "/multer-fields",
    "method": "post"
}
20:48:34.562:  Registering request handler {
    "type": "kettle.tests.multer.handler.imageOnly",
    "route": "/multer-image-only",
    "method": "post"
}
20:48:34.562:  Registering request handler {
    "type": "kettle.tests.multer.handler.diskStorage",
    "route": "/multer-disk-storage",
    "method": "post"
}
20:48:34.562:  Opening Kettle Server on port 8081
20:48:34.563:  Kettle Server cgaxtng3-10111 is listening on port 8081
20:48:34.563:  Sending a POST request to: http://127.0.0.1:8081/multer-single
20:48:34.567:  Invoking handler kettle.tests.multer.handler.single for route /multer-single with expectedGrade kettle.request.http
20:48:34.573:  Kettle server allocated request object with type kettle.tests.multer.handler.single
20:48:34.585:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:48:34.587:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:48:34.593:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:48:34.601:  Sending a POST request to: http://127.0.0.1:8081/multer-array
20:48:34.603:  Invoking handler kettle.tests.multer.handler.array for route /multer-array with expectedGrade kettle.request.http
20:48:34.608:  Kettle server allocated request object with type kettle.tests.multer.handler.array
20:48:34.616:  Sending a POST request to: http://127.0.0.1:8081/multer-fields
20:48:34.618:  Invoking handler kettle.tests.multer.handler.fields for route /multer-fields with expectedGrade kettle.request.http
20:48:34.624:  Kettle server allocated request object with type kettle.tests.multer.handler.fields
20:48:34.635:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:48:34.637:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:48:34.644:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:48:34.653:  Sending a POST request to: http://127.0.0.1:8081/multer-image-only
20:48:34.654:  Invoking handler kettle.tests.multer.handler.imageOnly for route /multer-image-only with expectedGrade kettle.request.http
20:48:34.660:  Kettle server allocated request object with type kettle.tests.multer.handler.imageOnly
20:48:34.666:  Sending a POST request to: http://127.0.0.1:8081/multer-disk-storage
20:48:34.667:  Invoking handler kettle.tests.multer.handler.diskStorage for route /multer-disk-storage with expectedGrade kettle.request.http
20:48:34.674:  Kettle server allocated request object with type kettle.tests.multer.handler.diskStorage
20:48:34.680:  Stopping Kettle Server cgaxtng3-10111 on port 8081
20:48:34.680:  Kettle Server cgaxtng3-10111 on port 8081 is stopped
20:48:34.699:  Successfully queued test Asynchronous request startup: basic fetch test
20:48:34.699:  jq: Test concluded - Module "kettle.tests.multer.config tests" Test name "Multer tests": 29/29 passed - PASS
20:48:34.721:  Initializing the Express app
20:48:34.721:  Initializing the HTTP server
20:48:34.723:  Registering request handler {
    "type": "kettle.tests.asyncRequest.handler",
    "route": "/",
    "method": "get"
}
20:48:34.723:  Opening Kettle Server on port 8081
20:48:34.723:  Kettle Server cgaxtng3-10444 is listening on port 8081
20:48:34.723:  Sending a GET request to: http://127.0.0.1:8081/
20:48:34.734:  Invoking handler kettle.tests.asyncRequest.handler for route / with expectedGrade kettle.request.http
20:48:34.745:  Kettle server allocated request object with type kettle.tests.asyncRequest.handler
20:48:34.749:  Stopping Kettle Server cgaxtng3-10444 on port 8081
20:48:34.749:  Kettle Server cgaxtng3-10444 on port 8081 is stopped
20:48:34.771:  Successfully queued test Request abort test
20:48:34.772:  jq: Test concluded - Module "kettle.tests.asyncRequest.handler.config.mergedConfig tests" Test name "Asynchronous request startup: basic fetch test": 2/2 passed - PASS
20:48:34.792:  Initializing the Express app
20:48:34.793:  Initializing the HTTP server
20:48:34.794:  Registering request handler {
    "type": "kettle.tests.requestAbort.handler",
    "route": "/",
    "method": "get"
}
20:48:34.794:  Opening Kettle Server on port 8081
20:48:34.795:  Kettle Server cgaxtng3-10616 is listening on port 8081
20:48:34.795:  Sending a GET request to: http://127.0.0.1:8081/
20:48:34.796:  Invoking handler kettle.tests.requestAbort.handler for route / with expectedGrade kettle.request.http
20:48:34.805:  Kettle server allocated request object with type kettle.tests.requestAbort.handler
20:48:35.308:  Error marking thread to request cgaxtng3-10685 which has already been destroyed
20:48:35.811:  Stopping Kettle Server cgaxtng3-10616 on port 8081
20:48:35.811:  Kettle Server cgaxtng3-10616 on port 8081 is stopped
20:48:35.824:  jq: Test concluded - Module "kettle.tests.requestAbort.config.mergedConfig tests" Test name "Request abort test": 2/2 passed - PASS
20:48:35.826:  jq: ***************
20:48:35.826:  jq: All tests concluded: 358/358 total passed in 7483ms - PASS
20:48:35.826:  jq: ***************
************* run test done *************
