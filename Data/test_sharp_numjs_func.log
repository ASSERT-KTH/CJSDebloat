/data/js-variants/multee
6
numjs is testing ./Variants/sharp/variant6/sharp
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 16s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (102ms)
    ✓ should be fast with 3x3x1 filter even if X is large (87ms)
    ✓ should be fast with 5x5 filter even if X is large (125ms)
    ✓ should be fast with 5x5x1 filter even if X is large (98ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (727ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./Variants/sharp/variant5/sharp
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 5s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (101ms)
    ✓ should be fast with 3x3x1 filter even if X is large (82ms)
    ✓ should be fast with 5x5 filter even if X is large (120ms)
    ✓ should be fast with 5x5x1 filter even if X is large (98ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (724ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./Variants/sharp/variant4/sharp
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 4s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (99ms)
    ✓ should be fast with 3x3x1 filter even if X is large (88ms)
    ✓ should be fast with 5x5 filter even if X is large (119ms)
    ✓ should be fast with 5x5x1 filter even if X is large (99ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (715ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./Variants/sharp/variant3/sharp
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 5s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (99ms)
    ✓ should be fast with 3x3x1 filter even if X is large (88ms)
    ✓ should be fast with 5x5 filter even if X is large (122ms)
    ✓ should be fast with 5x5x1 filter even if X is large (98ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (716ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./Variants/sharp/variant2/sharp
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 4s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (99ms)
    ✓ should be fast with 3x3x1 filter even if X is large (90ms)
    ✓ should be fast with 5x5 filter even if X is large (118ms)
    ✓ should be fast with 5x5x1 filter even if X is large (97ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (720ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./Variants/sharp/variant1/sharp
/data/js-variants/multee
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 4s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (101ms)
    ✓ should be fast with 3x3x1 filter even if X is large (87ms)
    ✓ should be fast with 5x5 filter even if X is large (133ms)
    ✓ should be fast with 5x5x1 filter even if X is large (111ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (740ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
variantsDepsNum: 3
/data/js-variants/multee
3
numjs is testing ./VariantsDeps/sharp/variant3/sharp
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 4s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (100ms)
    ✓ should be fast with 3x3x1 filter even if X is large (76ms)
    ✓ should be fast with 5x5 filter even if X is large (119ms)
    ✓ should be fast with 5x5x1 filter even if X is large (98ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (734ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./VariantsDeps/sharp/variant2/sharp
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 4s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (105ms)
    ✓ should be fast with 3x3x1 filter even if X is large (91ms)
    ✓ should be fast with 5x5 filter even if X is large (119ms)
    ✓ should be fast with 5x5x1 filter even if X is large (97ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (725ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
numjs is testing ./VariantsDeps/sharp/variant1/sharp
************* npm unlink module *************

removed 1 package, changed 1 package, and audited 1138 packages in 4s

10 packages are looking for funding
  run `npm fund` for details

116 vulnerabilities (5 low, 25 moderate, 70 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************
************* npm link globally done *************
************* npm link module *************

added 1 package, and audited 1140 packages in 5s

11 packages are looking for funding
  run `npm fund` for details

118 vulnerabilities (6 low, 25 moderate, 71 high, 16 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> numjs@0.16.1 test
> grunt test

Running "simplemocha:full" (simplemocha) task


  abs
    ✓ should work on vectors

  add
    ✓ can add a scalar to a vector and create a new copy
    ✓ can add a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can add a scalar to a matrix
    ✓ can sum 2 matrx

  arange
    ✓ should work if only stop given
    ✓ should work if both start and stop are given
    ✓ should work if start, stop and step are given
    ✓ should accept a dtype

  arccos
    ✓ should work on vectors

  arcsin
    ✓ should work on vectors

  arctan
    ✓ should work on vectors

  array
    ✓ can be empty
    ✓ can use a given dtype
    ✓ should create a copy of the given multi dimensionnal array
    ✓ should not create a copy of the given vector
    ✓ should considere numbers as a 1 element array
    ✓ can be converted to uint8

  assign
    ✓ can assign a scalar to a vector and create a new copy
    ✓ can assign a scalar to a vector without crating a copy
    ✓ can assign a vector to another
    ✓ can assign to a matrix without creating a copy

  clip
    ✓ should work on vectors

  clone
    ✓ should create a deep copy
    ✓ should preserve dtype

  concat
    ✓ can concatenate 2 vectors
    ✓ should raise an error when trying to concat array with different dims
    ✓ should concatenate multidimensional arrays along the last axis
    with numbers
      ✓ should produce a vector

  convolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter
    ✓ should work with 2x3 filter
    ✓ should work with 3x2 filter
    ✓ should work with 3x3x1 filter
    ✓ should work with 5x5 filter
    ✓ should work with 5x5x1 filter
    ✓ should be fast with 3x3 filter even if X is large (102ms)
    ✓ should be fast with 3x3x1 filter even if X is large (75ms)
    ✓ should be fast with 5x5 filter even if X is large (120ms)
    ✓ should be fast with 5x5x1 filter even if X is large (97ms)

  fftconvolve
    ✓ should work on vectors
    ✓ should work with 3x3 filter

  cos
    ✓ should work on vectors

  diag
    ✓ should extract a diagonal if input is a matrix
    ✓ should produce a matrix if input is a vector

  divide
    ✓ can divide a vector with a scalar and create a new copy
    ✓ can divide a vector with a scalar without creating a copy
    ✓ can divide two vectors
    ✓ can divide two matrix with the same shape
    ✓ should throw an error when dividing an array with a vector

  dot
    ✓ should work on matrix
    ✓ should be able to multiply a vector with a matrix
    ✓ should be fast on vectors even if they are very large
    ✓ should be fast on V.M even if they are very large
    on vectors
      ✓ should work if vectors have the same length
      ✓ should throw an error lengths are different

  empty
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  equal
    ✓ should be true if all items are the same
    ✓ should not changes arrays values
    ✓ should be false if arrays do not have the same shape

  errors
    ✓ can be a ValueError
    ✓ can be a ConfigError
    ✓ can be a NotImplementedError

  exp
    ✓ should work on scalars
    ✓ should work on vectors

  fft
    ✓ should work on vectors

  flatten
    ✓ should work on vectors
    ✓ should work on slided matrix

  flip
    ✓ should work with ndarray

  get
    on 1d array
      ✓ can locate with positive index
      ✓ can locate with positive index
      ✓ can locate with negative index
    on 2d array
      ✓ should work with positive index
      ✓ should accept negative integer

  hi
    ✓ should truncates from the bottom-right of the array

  identity
    ✓ should return an n x n array with its main diagonal set to one, and all other elements 0.

  images
    area avg
      ✓ should work on the top left corner
      ✓ should work on the middle corner
      ✓ should work on the first line
      ✓ should work on the last line
      ✓ should work on the last col

  images
    data
      ✓ should have the "five" img
      ✓ should have the "nodejs" PNG img
      ✓ should have the "lenna" img
      ✓ should have the "moon" img

  images
    flip
      ✓ should work on gray scale img

  images
    read
      ✓ should be able to convert Color images
      ✓ should be able to read PNG Color images from file

  images
    resize
      ✓ should be able to downscale a Grayscale img
      ✓ should be able to upscale a Grayscale img

  images
    ✓ can convert RGBA to grayscale

  images
    Sum Area Table (SAT)
      ✓ should work on 3x3 matrix

  images
    scharr
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    sobel
      ✓ should work on 3x3 images
      ✓ should work on 25x25 images
      ✓ should be full of zeros if no edges

  images
    Squared Sum Area Table (SSAT)
      ✓ should work on 3x3 matrix

  lo
    ✓ should creates a shifted view of the array

  log
    ✓ should work on scalars
    ✓ should work on vectors

  max
    ✓ should be null for an empty array
    ✓ should return the max element in array

  mean
    ✓ should work on vectors

  min
    ✓ should be null for an empty array
    ✓ should return the min element in array

  mod
    ✓ should compute (array([ 4, 7]) % array([ 4, 7])) => array([ 0, 1])
    ✓ should compute (array([ 0, 1, 2, 3, 4, 5, 6]) % array([ 0, 1, 2, 3, 4, 5, 6])) => array([ 0, 1, 2, 3, 4, 0, 1])

  multiply
    ✓ can multiply a vector with a scalar and create a new copy
    ✓ can multiply a vector with a scalar without creating a copy
    ✓ can multiply two vectors
    ✓ can multiply two matrix with the same shape
    ✓ should throw an error when multiplying an array with a vector

  ndim
    ✓ should be readable

  negative
    ✓ should numerical negative, element-wise.

  ones
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype

  power
    ✓ can pow a vector with a scalar
    ✓ can pow a vector with another vector
    ✓ can pow a vector with a scalar without crating a copy
    ✓ can pow a vector with another vector without crating a copy

  random
    ✓ can generate vectors
    ✓ should vectors
    ✓ can generate matrix

  reshape
    ✓ should accept native array as input
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should preserve type
    ✓ should work on a sliced array but create a cpy
    ✓ should not create a copy of the data if adding a new dim at the end
    ✓ should not create a removing the last dim
    ✓ should flatten the array if shape is -1
    ✓ should throw an error if more than 1 dimension is set to -1
    ✓ should replace unknown dimension with the right value

  rot90
    ✓ should work with default params
    ✓ should accept native array as input
    ✓ should work when k = 2 
    ✓ should work when k = 3
    ✓ should work when k = 4
    ✓ should raise an error if custom axes is not a 1d array of length 2
    ✓ should raise an error axes are the same
    ✓ should support custom axes
    ✓ should work on ndarrays

  round
    ✓ should work on vectors

  shape
    ✓ should be readable
    ✓ should not be writableable
    ✓ should be correct if array empty
    ✓ should be correct if array is a vector
    ✓ should be correct if array is a matrix
    ✓ should be correct if array is a 3d array

  sigmoid
    ✓ should work on vectors

  sin
    ✓ should work on vectors

  size
    ✓ should be readable
    ✓ should not be writableable

  slice
    on 1d array
      ✓ can skip first items
      ✓ can take first items
      ✓ can slice using both start and end indexes
      ✓ can slice using start, end and step
      ✓ can just provide the step
      ✓ can slice using start and step
    on 2d array
      ✓ can skip first rows
      ✓ can skip first cols
      ✓ can skip first rows and cols
      ✓ can slice in all dimensions using start, end and step

  softmax
    ✓ should work on vectors
    ✓ should work on matrix

  sqrt
    ✓ should work on vectors

  stack
    ✓ should throw an error if no array given
    ✓ should throw an error if arrays do not have the same shape
    ✓ should work with numbers
    ✓ should work with vectors
    ✓ should enable custom axis
    ✓ should work with matrices

  std
    ✓ should work on vectors
    ✓ should be zeros if the array is full of 0s
    support for both sample and population variance
      ✓ should default to using the sample variance
      ✓ should accomodate using the population variance

  subtract
    ✓ can subtract a scalar to a vector and create a new copy
    ✓ can subtract a scalar to a vector without crating a copy
    ✓ can sum 2 vector
    ✓ can subtract a scalar to a matrix
    ✓ can subtract 2 matrix

  sum
    ✓ should work on vectors
    ✓ should work on matrix

  tan
    ✓ should work on vectors

  tanh
    ✓ should work on vectors

  toString
    ✓ should properly format 1d array
    ✓ should properly format 2d array
    ✓ should properly format 3d arrays
    ✓ should properly format typed array
    ✓ should hide some data if it is too big
    with custom printThreshold
      ✓ should give less information

  transpose
    ✓ should work on vectors
    ✓ should work on matrix
    ✓ should work on multdimensional array with custom axes passed as a list
    ✓ should work on multdimensional array with custom axes
    ✓ should work after slicing
    ✓ should be used with T shortcut

  utils
    ✓ broadcast
    iteraxis
      ✓ should raise an error if axis NOT valid
      ✓ can iterate over rows
      ✓ can iterate over columns
      ✓ can iterate over the last axis

  zeros
    ✓ can generate a vectors
    ✓ can generate matrix
    ✓ should accept a dtype


  211 passing (737ms)


Running "browserify:dist" (browserify) task
>> Bundle dist/numjs.js created.

Running "uglify:dist" (uglify) task
>> 1 file created 776.73 kB → 178.3 kB

Done.
************* run test done *************
