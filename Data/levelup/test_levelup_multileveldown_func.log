/data/js-variants/multee
16
multileveldown is testing ./Variants/levelup/variant16/levelup
/data/js-variants/multee
************* npm unlink module *************

up to date, audited 736 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 403ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant15/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 433ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant14/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 402ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant13/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 398ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant12/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant11/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant10/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 405ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant9/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 433ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant8/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 393ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant7/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 417ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant6/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant5/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 410ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant4/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 443ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant3/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 436ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant2/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 425ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./Variants/levelup/variant1/levelup
/data/js-variants/multee
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 401ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
variantsDepsNum: 6
/data/js-variants/multee
6
multileveldown is testing ./VariantsDeps/levelup/variant6/levelup
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 398ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./VariantsDeps/levelup/variant5/levelup
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 405ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./VariantsDeps/levelup/variant4/levelup
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 500ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./VariantsDeps/levelup/variant3/levelup
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 479ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./VariantsDeps/levelup/variant2/levelup
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 407ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
multileveldown is testing ./VariantsDeps/levelup/variant1/levelup
************* npm unlink module *************

added 3 packages, changed 1 package, and audited 736 packages in 3s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 397ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 3 packages, changed 1 package, and audited 734 packages in 2s

220 packages are looking for funding
  run `npm fund` for details

2 vulnerabilities (1 moderate, 1 critical)

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> multileveldown@5.0.1 test
> standard && hallmark && (nyc -s tape test/*.js | faucet) && nyc report

# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# testCommon.factory() returns a unique database[K
  ok [1m[32m1[0m no error while opening db1[K  ok [1m[32m2[0m no error while opening db2[K  ok [1m[32m3[0m put key in db1[K  ok [1m[32m4[0m got items from db2[K  ok [1m[32m5[0m db2 should be empty[K  ok [1m[32m6[0m no error while closing db1[K  ok [1m[32m7[0m no error while closing db2[K[1A[1G[1m[32mâœ“ testCommon.factory() returns a unique database[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db has manifest[K
  ok [1m[32m8[0m manifest is object[K  ok [1m[32m9[0m additionalMethods is object[K  ok [1m[32m10[0m truthy: bufferKeys[K  ok [1m[32m11[0m truthy: snapshots[K  ok [1m[32m12[0m truthy: permanence[K  ok [1m[32m13[0m false: seek[K  ok [1m[32m14[0m truthy: clear[K  ok [1m[32m15[0m truthy: getMany[K  ok [1m[32m16[0m false: createIfMissing[K  ok [1m[32m17[0m false: errorIfExists[K  ok [1m[32m18[0m truthy: status[K  ok [1m[32m19[0m false: keyIterator[K  ok [1m[32m20[0m false: valueIterator[K  ok [1m[32m21[0m false: iteratorNextv[K  ok [1m[32m22[0m false: iteratorAll[K  ok [1m[32m23[0m false: idempotentOpen[K  ok [1m[32m24[0m false: passiveOpen[K  ok [1m[32m25[0m false: serialize[K  ok [1m[32m26[0m truthy: deferredOpen[K  ok [1m[32m27[0m truthy: openCallback[K  ok [1m[32m28[0m truthy: promises[K  ok [1m[32m29[0m truthy: streams[K  ok [1m[32m30[0m truthy: encodings[K  ok [1m[32m31[0m false: events[K  ok [1m[32m32[0m truthy: additionalMethods[K  ok [1m[32m33[0m manifest has unique identity[K  ok [1m[32m34[0m manifest.encodings has unique identity[K  ok [1m[32m35[0m manifest.additionalMethods has unique identity[K  ok [1m[32m36[0m no open error[K  ok [1m[32m37[0m manifest did not change after open[K  ok [1m[32m38[0m no close error[K  ok [1m[32m39[0m manifest did not change after close[K[1A[1G[1m[32mâœ“ db has manifest[0m[1B[1G# manifest has status[K
  ok [1m[32m40[0m should be strictly equal[K  ok [1m[32m41[0m no open error[K[1A[1G[1m[32mâœ“ manifest has status[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# test database open method exists[K
  ok [1m[32m42[0m database object returned[K  ok [1m[32m43[0m open() function exists[K[1A[1G[1m[32mâœ“ test database open method exists[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp[K
[1A[1G[1m[32mâœ“ setUp[0m[1B[1G# test database open, no options[K
  ok [1m[32m44[0m null[K[1A[1G[1m[32mâœ“ test database open, no options[0m[1B[1G# test database open, options and callback[K
  ok [1m[32m45[0m null[K[1A[1G[1m[32mâœ“ test database open, options and callback[0m[1B[1G# test database open, close and open[K
  ok [1m[32m46[0m null[K  ok [1m[32m47[0m undefined[K  ok [1m[32m48[0m null[K[1A[1G[1m[32mâœ“ test database open, close and open[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test close()[K
  ok [1m[32m49[0m undefined[K[1A[1G[1m[32mâœ“ test close()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple put()[K
  ok [1m[32m50[0m undefined[K  ok [1m[32m51[0m null[K  ok [1m[32m52[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple put()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple get()[K
  ok [1m[32m53[0m undefined[K  ok [1m[32m54[0m null[K  ok [1m[32m55[0m should be strictly equal[K  ok [1m[32m56[0m null[K  ok [1m[32m57[0m should be strictly equal[K  ok [1m[32m58[0m null[K  ok [1m[32m59[0m should be string if not buffer[K  ok [1m[32m60[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple get()[0m[1B[1G# test simultaneous get()[K
  ok [1m[32m61[0m undefined[K  ok [1m[32m62[0m null[K  ok [1m[32m63[0m should be strictly equal[K  ok [1m[32m64[0m null[K  ok [1m[32m65[0m should be strictly equal[K  ok [1m[32m66[0m null[K  ok [1m[32m67[0m should be strictly equal[K  ok [1m[32m68[0m null[K  ok [1m[32m69[0m should be strictly equal[K  ok [1m[32m70[0m null[K  ok [1m[32m71[0m should be strictly equal[K  ok [1m[32m72[0m null[K  ok [1m[32m73[0m should be strictly equal[K  ok [1m[32m74[0m null[K  ok [1m[32m75[0m should be strictly equal[K  ok [1m[32m76[0m null[K  ok [1m[32m77[0m should be strictly equal[K  ok [1m[32m78[0m null[K  ok [1m[32m79[0m should be strictly equal[K  ok [1m[32m80[0m null[K  ok [1m[32m81[0m should be strictly equal[K  ok [1m[32m82[0m should error[K  ok [1m[32m83[0m should have correct error message[K  ok [1m[32m84[0m value is undefined[K  ok [1m[32m85[0m should error[K  ok [1m[32m86[0m should have correct error message[K  ok [1m[32m87[0m value is undefined[K  ok [1m[32m88[0m should error[K  ok [1m[32m89[0m should have correct error message[K  ok [1m[32m90[0m value is undefined[K  ok [1m[32m91[0m should error[K  ok [1m[32m92[0m should have correct error message[K  ok [1m[32m93[0m value is undefined[K  ok [1m[32m94[0m should error[K  ok [1m[32m95[0m should have correct error message[K  ok [1m[32m96[0m value is undefined[K  ok [1m[32m97[0m should error[K  ok [1m[32m98[0m should have correct error message[K  ok [1m[32m99[0m value is undefined[K  ok [1m[32m100[0m should error[K  ok [1m[32m101[0m should have correct error message[K  ok [1m[32m102[0m value is undefined[K  ok [1m[32m103[0m should error[K  ok [1m[32m104[0m should have correct error message[K  ok [1m[32m105[0m value is undefined[K  ok [1m[32m106[0m should error[K  ok [1m[32m107[0m should have correct error message[K  ok [1m[32m108[0m value is undefined[K  ok [1m[32m109[0m should error[K  ok [1m[32m110[0m should have correct error message[K  ok [1m[32m111[0m value is undefined[K[1A[1G[1m[32mâœ“ test simultaneous get()[0m[1B[1G# test get() not found error is asynchronous[K
  ok [1m[32m112[0m should error[K  ok [1m[32m113[0m should have correct error message[K  ok [1m[32m114[0m value is undefined[K  ok [1m[32m115[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() not found error is asynchronous[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple del()[K
  ok [1m[32m116[0m undefined[K  ok [1m[32m117[0m undefined[K  ok [1m[32m118[0m entry properly deleted[K  ok [1m[32m119[0m value is undefined[K  ok [1m[32m120[0m NotFound error[K[1A[1G[1m[32mâœ“ test simple del()[0m[1B[1G# test del on non-existent key[K
  ok [1m[32m121[0m undefined[K[1A[1G[1m[32mâœ“ test del on non-existent key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test get() with null key causes error[K
  ok [1m[32m122[0m has error[K  ok [1m[32m123[0m should be truthy[K  ok [1m[32m124[0m correct error message[K  ok [1m[32m125[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with null key causes error[0m[1B[1G# test del() with null key causes error[K
  ok [1m[32m126[0m has error[K  ok [1m[32m127[0m should be truthy[K  ok [1m[32m128[0m correct error message[K  ok [1m[32m129[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with null key causes error[0m[1B[1G# test getMany() with null key causes error[K
  ok [1m[32m130[0m callback (anonymous) is asynchronous[K  ok [1m[32m131[0m callback (anonymous) is asynchronous[K  ok [1m[32m132[0m has error[K  ok [1m[32m133[0m should be truthy[K  ok [1m[32m134[0m correct error message[K  ok [1m[32m135[0m has error[K  ok [1m[32m136[0m should be truthy[K  ok [1m[32m137[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with null key causes error[0m[1B[1G# test put() with null key causes error[K
  ok [1m[32m138[0m has error[K  ok [1m[32m139[0m should be truthy[K  ok [1m[32m140[0m correct error message[K  ok [1m[32m141[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null key causes error[0m[1B[1G# test get() with undefined key causes error[K
  ok [1m[32m142[0m has error[K  ok [1m[32m143[0m should be truthy[K  ok [1m[32m144[0m correct error message[K  ok [1m[32m145[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with undefined key causes error[0m[1B[1G# test del() with undefined key causes error[K
  ok [1m[32m146[0m has error[K  ok [1m[32m147[0m should be truthy[K  ok [1m[32m148[0m correct error message[K  ok [1m[32m149[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with undefined key causes error[0m[1B[1G# test getMany() with undefined key causes error[K
  ok [1m[32m150[0m callback (anonymous) is asynchronous[K  ok [1m[32m151[0m callback (anonymous) is asynchronous[K  ok [1m[32m152[0m has error[K  ok [1m[32m153[0m should be truthy[K  ok [1m[32m154[0m correct error message[K  ok [1m[32m155[0m has error[K  ok [1m[32m156[0m should be truthy[K  ok [1m[32m157[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with undefined key causes error[0m[1B[1G# test put() with undefined key causes error[K
  ok [1m[32m158[0m has error[K  ok [1m[32m159[0m should be truthy[K  ok [1m[32m160[0m correct error message[K  ok [1m[32m161[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined key causes error[0m[1B[1G# test get() with empty String key causes error[K
  ok [1m[32m162[0m has error[K  ok [1m[32m163[0m should be truthy[K  ok [1m[32m164[0m correct error message[K  ok [1m[32m165[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty String key causes error[0m[1B[1G# test del() with empty String key causes error[K
  ok [1m[32m166[0m has error[K  ok [1m[32m167[0m should be truthy[K  ok [1m[32m168[0m correct error message[K  ok [1m[32m169[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty String key causes error[0m[1B[1G# test getMany() with empty String key causes error[K
  ok [1m[32m170[0m callback (anonymous) is asynchronous[K  ok [1m[32m171[0m callback (anonymous) is asynchronous[K  ok [1m[32m172[0m has error[K  ok [1m[32m173[0m should be truthy[K  ok [1m[32m174[0m correct error message[K  ok [1m[32m175[0m has error[K  ok [1m[32m176[0m should be truthy[K  ok [1m[32m177[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty String key causes error[0m[1B[1G# test put() with empty String key causes error[K
  ok [1m[32m178[0m has error[K  ok [1m[32m179[0m should be truthy[K  ok [1m[32m180[0m correct error message[K  ok [1m[32m181[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty String key causes error[0m[1B[1G# test get() with empty Buffer key causes error[K
  ok [1m[32m182[0m has error[K  ok [1m[32m183[0m should be truthy[K  ok [1m[32m184[0m correct error message[K  ok [1m[32m185[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Buffer key causes error[0m[1B[1G# test del() with empty Buffer key causes error[K
  ok [1m[32m186[0m has error[K  ok [1m[32m187[0m should be truthy[K  ok [1m[32m188[0m correct error message[K  ok [1m[32m189[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Buffer key causes error[0m[1B[1G# test getMany() with empty Buffer key causes error[K
  ok [1m[32m190[0m callback (anonymous) is asynchronous[K  ok [1m[32m191[0m callback (anonymous) is asynchronous[K  ok [1m[32m192[0m has error[K  ok [1m[32m193[0m should be truthy[K  ok [1m[32m194[0m correct error message[K  ok [1m[32m195[0m has error[K  ok [1m[32m196[0m should be truthy[K  ok [1m[32m197[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Buffer key causes error[0m[1B[1G# test put() with empty Buffer key causes error[K
  ok [1m[32m198[0m has error[K  ok [1m[32m199[0m should be truthy[K  ok [1m[32m200[0m correct error message[K  ok [1m[32m201[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Buffer key causes error[0m[1B[1G# test get() with empty Array key causes error[K
  ok [1m[32m202[0m has error[K  ok [1m[32m203[0m should be truthy[K  ok [1m[32m204[0m correct error message[K  ok [1m[32m205[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test get() with empty Array key causes error[0m[1B[1G# test del() with empty Array key causes error[K
  ok [1m[32m206[0m has error[K  ok [1m[32m207[0m should be truthy[K  ok [1m[32m208[0m correct error message[K  ok [1m[32m209[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test del() with empty Array key causes error[0m[1B[1G# test getMany() with empty Array key causes error[K
  ok [1m[32m210[0m callback (anonymous) is asynchronous[K  ok [1m[32m211[0m callback (anonymous) is asynchronous[K  ok [1m[32m212[0m has error[K  ok [1m[32m213[0m should be truthy[K  ok [1m[32m214[0m correct error message[K  ok [1m[32m215[0m has error[K  ok [1m[32m216[0m should be truthy[K  ok [1m[32m217[0m correct error message[K[1A[1G[1m[32mâœ“ test getMany() with empty Array key causes error[0m[1B[1G# test put() with empty Array key causes error[K
  ok [1m[32m218[0m has error[K  ok [1m[32m219[0m should be truthy[K  ok [1m[32m220[0m correct error message[K  ok [1m[32m221[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with empty Array key causes error[0m[1B[1G# test put() with null value causes error[K
  ok [1m[32m222[0m has error[K  ok [1m[32m223[0m should be truthy[K  ok [1m[32m224[0m correct error message[K  ok [1m[32m225[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with null value causes error[0m[1B[1G# test put() with undefined value causes error[K
  ok [1m[32m226[0m has error[K  ok [1m[32m227[0m should be truthy[K  ok [1m[32m228[0m correct error message[K  ok [1m[32m229[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put() with undefined value causes error[0m[1B[1G# test put()/get()/del() with `0` key[K
  ok [1m[32m230[0m undefined[K  ok [1m[32m231[0m no error, has key/value for ``0` key`[K  ok [1m[32m232[0m is a string[K  ok [1m[32m233[0m should be strictly equal[K  ok [1m[32m234[0m no error, deleted key/value for ``0` key`[K  ok [1m[32m235[0m entry properly deleted[K  ok [1m[32m236[0m should have correct error message[K  ok [1m[32m237[0m value is undefined[K  ok [1m[32m238[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` key[0m[1B[1G# test put()/get()/del() with long String key[K
  ok [1m[32m239[0m undefined[K  ok [1m[32m240[0m no error, has key/value for `long String key`[K  ok [1m[32m241[0m is a string[K  ok [1m[32m242[0m should be strictly equal[K  ok [1m[32m243[0m no error, deleted key/value for `long String key`[K  ok [1m[32m244[0m entry properly deleted[K  ok [1m[32m245[0m should have correct error message[K  ok [1m[32m246[0m value is undefined[K  ok [1m[32m247[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String key[0m[1B[1G# test put()/get()/del() with Buffer key[K
  ok [1m[32m248[0m undefined[K  ok [1m[32m249[0m no error, has key/value for `Buffer key`[K  ok [1m[32m250[0m is a string[K  ok [1m[32m251[0m should be strictly equal[K  ok [1m[32m252[0m no error, deleted key/value for `Buffer key`[K  ok [1m[32m253[0m entry properly deleted[K  ok [1m[32m254[0m should have correct error message[K  ok [1m[32m255[0m value is undefined[K  ok [1m[32m256[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer key[0m[1B[1G# test put()/get()/del() with Array value[K
  ok [1m[32m257[0m undefined[K  ok [1m[32m258[0m no error, has key/value for `Array value`[K  ok [1m[32m259[0m is a string[K  ok [1m[32m260[0m should be strictly equal[K  ok [1m[32m261[0m no error, deleted key/value for `Array value`[K  ok [1m[32m262[0m entry properly deleted[K  ok [1m[32m263[0m should have correct error message[K  ok [1m[32m264[0m value is undefined[K  ok [1m[32m265[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array value[0m[1B[1G# test put()/get()/del() with `false` value[K
  ok [1m[32m266[0m undefined[K  ok [1m[32m267[0m no error, has key/value for ``false` value`[K  ok [1m[32m268[0m is a string[K  ok [1m[32m269[0m should be strictly equal[K  ok [1m[32m270[0m no error, deleted key/value for ``false` value`[K  ok [1m[32m271[0m entry properly deleted[K  ok [1m[32m272[0m should have correct error message[K  ok [1m[32m273[0m value is undefined[K  ok [1m[32m274[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `false` value[0m[1B[1G# test put()/get()/del() with `0` value[K
  ok [1m[32m275[0m undefined[K  ok [1m[32m276[0m no error, has key/value for ``0` value`[K  ok [1m[32m277[0m is a string[K  ok [1m[32m278[0m should be strictly equal[K  ok [1m[32m279[0m no error, deleted key/value for ``0` value`[K  ok [1m[32m280[0m entry properly deleted[K  ok [1m[32m281[0m should have correct error message[K  ok [1m[32m282[0m value is undefined[K  ok [1m[32m283[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `0` value[0m[1B[1G# test put()/get()/del() with `NaN` value[K
  ok [1m[32m284[0m undefined[K  ok [1m[32m285[0m no error, has key/value for ``NaN` value`[K  ok [1m[32m286[0m is a string[K  ok [1m[32m287[0m should be strictly equal[K  ok [1m[32m288[0m no error, deleted key/value for ``NaN` value`[K  ok [1m[32m289[0m entry properly deleted[K  ok [1m[32m290[0m should have correct error message[K  ok [1m[32m291[0m value is undefined[K  ok [1m[32m292[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with `NaN` value[0m[1B[1G# test put()/get()/del() with empty String value[K
  ok [1m[32m293[0m undefined[K  ok [1m[32m294[0m no error, has key/value for `empty String value`[K  ok [1m[32m295[0m is a string[K  ok [1m[32m296[0m should be strictly equal[K  ok [1m[32m297[0m no error, deleted key/value for `empty String value`[K  ok [1m[32m298[0m entry properly deleted[K  ok [1m[32m299[0m should have correct error message[K  ok [1m[32m300[0m value is undefined[K  ok [1m[32m301[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty String value[0m[1B[1G# test put()/get()/del() with empty Buffer value[K
  ok [1m[32m302[0m undefined[K  ok [1m[32m303[0m no error, has key/value for `empty Buffer value`[K  ok [1m[32m304[0m is a string[K  ok [1m[32m305[0m should be strictly equal[K  ok [1m[32m306[0m no error, deleted key/value for `empty Buffer value`[K  ok [1m[32m307[0m entry properly deleted[K  ok [1m[32m308[0m should have correct error message[K  ok [1m[32m309[0m value is undefined[K  ok [1m[32m310[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Buffer value[0m[1B[1G# test put()/get()/del() with empty Array value[K
  ok [1m[32m311[0m undefined[K  ok [1m[32m312[0m no error, has key/value for `empty Array value`[K  ok [1m[32m313[0m is a string[K  ok [1m[32m314[0m should be strictly equal[K  ok [1m[32m315[0m no error, deleted key/value for `empty Array value`[K  ok [1m[32m316[0m entry properly deleted[K  ok [1m[32m317[0m should have correct error message[K  ok [1m[32m318[0m value is undefined[K  ok [1m[32m319[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with empty Array value[0m[1B[1G# test put()/get()/del() with long String value[K
  ok [1m[32m320[0m undefined[K  ok [1m[32m321[0m no error, has key/value for `long String value`[K  ok [1m[32m322[0m is a string[K  ok [1m[32m323[0m should be strictly equal[K  ok [1m[32m324[0m no error, deleted key/value for `long String value`[K  ok [1m[32m325[0m entry properly deleted[K  ok [1m[32m326[0m should have correct error message[K  ok [1m[32m327[0m value is undefined[K  ok [1m[32m328[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with long String value[0m[1B[1G# test put()/get()/del() with Buffer value[K
  ok [1m[32m329[0m undefined[K  ok [1m[32m330[0m no error, has key/value for `Buffer value`[K  ok [1m[32m331[0m is a string[K  ok [1m[32m332[0m should be strictly equal[K  ok [1m[32m333[0m no error, deleted key/value for `Buffer value`[K  ok [1m[32m334[0m entry properly deleted[K  ok [1m[32m335[0m should have correct error message[K  ok [1m[32m336[0m value is undefined[K  ok [1m[32m337[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Buffer value[0m[1B[1G# test put()/get()/del() with Array key[K
  ok [1m[32m338[0m undefined[K  ok [1m[32m339[0m no error, has key/value for `Array key`[K  ok [1m[32m340[0m is a string[K  ok [1m[32m341[0m should be strictly equal[K  ok [1m[32m342[0m no error, deleted key/value for `Array key`[K  ok [1m[32m343[0m entry properly deleted[K  ok [1m[32m344[0m should have correct error message[K  ok [1m[32m345[0m value is undefined[K  ok [1m[32m346[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test put()/get()/del() with Array key[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test getMany() requires an array argument (callback)[K
  ok [1m[32m347[0m callback (anonymous) is asynchronous[K  ok [1m[32m348[0m callback (anonymous) is asynchronous[K  ok [1m[32m349[0m should be strictly equal[K  ok [1m[32m350[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (callback)[0m[1B[1G# test getMany() requires an array argument (promise)[K
  ok [1m[32m351[0m should be strictly equal[K  ok [1m[32m352[0m should be strictly equal[K  ok [1m[32m353[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() requires an array argument (promise)[0m[1B[1G# test getMany() support is reflected in manifest[K
  ok [1m[32m354[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() support is reflected in manifest[0m[1B[1G# test simple getMany()[K
  ok [1m[32m355[0m undefined[K  ok [1m[32m356[0m null[K  ok [1m[32m357[0m got an array[K  ok [1m[32m358[0m array has 1 element[K  ok [1m[32m359[0m should be strictly equal[K  ok [1m[32m360[0m null[K  ok [1m[32m361[0m got an array[K  ok [1m[32m362[0m array has 1 element[K  ok [1m[32m363[0m should be strictly equal[K  ok [1m[32m364[0m null[K  ok [1m[32m365[0m should be string if not buffer[K  ok [1m[32m366[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simple getMany()[0m[1B[1G# test getMany() with multiple keys[K
  ok [1m[32m367[0m undefined[K  ok [1m[32m368[0m null[K  ok [1m[32m369[0m should be deeply equivalent[K  ok [1m[32m370[0m null[K  ok [1m[32m371[0m maintains order of input keys[K[1A[1G[1m[32mâœ“ test getMany() with multiple keys[0m[1B[1G# test empty getMany()[K
  ok [1m[32m372[0m callback (anonymous) is asynchronous[K  ok [1m[32m373[0m callback (anonymous) is asynchronous[K  ok [1m[32m374[0m null[K  ok [1m[32m375[0m should be deeply equivalent[K  ok [1m[32m376[0m null[K  ok [1m[32m377[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test empty getMany()[0m[1B[1G# test not-found getMany()[K
  ok [1m[32m378[0m callback (anonymous) is asynchronous[K  ok [1m[32m379[0m callback (anonymous) is asynchronous[K  ok [1m[32m380[0m null[K  ok [1m[32m381[0m should be deeply equivalent[K  ok [1m[32m382[0m null[K  ok [1m[32m383[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test not-found getMany()[0m[1B[1G# test getMany() with promise[K
  ok [1m[32m384[0m should be deeply equivalent[K  ok [1m[32m385[0m should be deeply equivalent[K  ok [1m[32m386[0m should be deeply equivalent[K  ok [1m[32m387[0m should be deeply equivalent[K  ok [1m[32m388[0m should be deeply equivalent[K  ok [1m[32m389[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() with promise[0m[1B[1G# test simultaneous getMany()[K
  ok [1m[32m390[0m undefined[K  ok [1m[32m391[0m null[K  ok [1m[32m392[0m should be strictly equal[K  ok [1m[32m393[0m should be strictly equal[K  ok [1m[32m394[0m null[K  ok [1m[32m395[0m should be strictly equal[K  ok [1m[32m396[0m should be strictly equal[K  ok [1m[32m397[0m null[K  ok [1m[32m398[0m should be strictly equal[K  ok [1m[32m399[0m should be strictly equal[K  ok [1m[32m400[0m null[K  ok [1m[32m401[0m should be strictly equal[K  ok [1m[32m402[0m should be strictly equal[K  ok [1m[32m403[0m null[K  ok [1m[32m404[0m should be strictly equal[K  ok [1m[32m405[0m should be strictly equal[K  ok [1m[32m406[0m null[K  ok [1m[32m407[0m should be strictly equal[K  ok [1m[32m408[0m should be strictly equal[K  ok [1m[32m409[0m null[K  ok [1m[32m410[0m should be strictly equal[K  ok [1m[32m411[0m should be strictly equal[K  ok [1m[32m412[0m null[K  ok [1m[32m413[0m should be strictly equal[K  ok [1m[32m414[0m should be strictly equal[K  ok [1m[32m415[0m null[K  ok [1m[32m416[0m should be strictly equal[K  ok [1m[32m417[0m should be strictly equal[K  ok [1m[32m418[0m null[K  ok [1m[32m419[0m should be strictly equal[K  ok [1m[32m420[0m should be strictly equal[K  ok [1m[32m421[0m null[K  ok [1m[32m422[0m should be deeply equivalent[K  ok [1m[32m423[0m null[K  ok [1m[32m424[0m should be deeply equivalent[K  ok [1m[32m425[0m null[K  ok [1m[32m426[0m should be deeply equivalent[K  ok [1m[32m427[0m null[K  ok [1m[32m428[0m should be deeply equivalent[K  ok [1m[32m429[0m null[K  ok [1m[32m430[0m should be deeply equivalent[K  ok [1m[32m431[0m null[K  ok [1m[32m432[0m should be deeply equivalent[K  ok [1m[32m433[0m null[K  ok [1m[32m434[0m should be deeply equivalent[K  ok [1m[32m435[0m null[K  ok [1m[32m436[0m should be deeply equivalent[K  ok [1m[32m437[0m null[K  ok [1m[32m438[0m should be deeply equivalent[K  ok [1m[32m439[0m null[K  ok [1m[32m440[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test simultaneous getMany()[0m[1B[1G# test getMany() on new db[K
  ok [1m[32m441[0m should be strictly equal[K  ok [1m[32m442[0m should be strictly equal[K  ok [1m[32m443[0m (unnamed assert)[K  ok [1m[32m444[0m should be strictly equal[K  ok [1m[32m445[0m should be strictly equal[K  ok [1m[32m446[0m (unnamed assert)[K  ok [1m[32m447[0m callback (anonymous) is asynchronous[K  ok [1m[32m448[0m callback (anonymous) is asynchronous[K  ok [1m[32m449[0m callback (anonymous) is asynchronous[K  ok [1m[32m450[0m callback (anonymous) is asynchronous[K  ok [1m[32m451[0m LevelUP[K  ok [1m[32m452[0m LevelUP[K  ok [1m[32m453[0m no error[K  ok [1m[32m454[0m should be deeply equivalent[K  ok [1m[32m455[0m no error[K  ok [1m[32m456[0m should be deeply equivalent[K  ok [1m[32m457[0m no error[K  ok [1m[32m458[0m should be deeply equivalent[K  ok [1m[32m459[0m no error[K  ok [1m[32m460[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on new db[0m[1B[1G# test getMany() on opening db[K
  ok [1m[32m461[0m callback (open) is asynchronous[K  ok [1m[32m462[0m callback (anonymous) is asynchronous[K  ok [1m[32m463[0m callback (open) is asynchronous[K  ok [1m[32m464[0m callback (anonymous) is asynchronous[K  ok [1m[32m465[0m LevelUP[K  ok [1m[32m466[0m LevelUP[K  ok [1m[32m467[0m no error[K  ok [1m[32m468[0m should be deeply equivalent[K  ok [1m[32m469[0m no error[K  ok [1m[32m470[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test getMany() on opening db[0m[1B[1G# test getMany() on closed db[K
  ok [1m[32m471[0m null[K  ok [1m[32m472[0m should be strictly equal[K  ok [1m[32m473[0m null[K  ok [1m[32m474[0m should be strictly equal[K  ok [1m[32m475[0m undefined[K  ok [1m[32m476[0m should be strictly equal[K  ok [1m[32m477[0m callback (anonymous) is asynchronous[K  ok [1m[32m478[0m undefined[K  ok [1m[32m479[0m should be strictly equal[K  ok [1m[32m480[0m callback (anonymous) is asynchronous[K  ok [1m[32m481[0m should be strictly equal[K  ok [1m[32m482[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closed db[0m[1B[1G# test getMany() on closing db[K
  ok [1m[32m483[0m null[K  ok [1m[32m484[0m callback (anonymous) is asynchronous[K  ok [1m[32m485[0m null[K  ok [1m[32m486[0m callback (anonymous) is asynchronous[K  ok [1m[32m487[0m undefined[K  ok [1m[32m488[0m should be strictly equal[K  ok [1m[32m489[0m undefined[K  ok [1m[32m490[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test getMany() on closing db[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch() with missing `value`[K
  ok [1m[32m491[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with missing `value`[0m[1B[1G# test batch() with null or undefined `value`[K
  ok [1m[32m492[0m correct error message[K  ok [1m[32m493[0m correct error message[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `value`[0m[1B[1G# test batch() with missing `key`[K
  ok [1m[32m494[0m got error[K  ok [1m[32m495[0m correct error message[K  ok [1m[32m496[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key`[0m[1B[1G# test batch() with null or undefined `key`[K
  ok [1m[32m497[0m got error[K  ok [1m[32m498[0m correct error message[K  ok [1m[32m499[0m callback is asynchronous[K  ok [1m[32m500[0m got error[K  ok [1m[32m501[0m correct error message[K  ok [1m[32m502[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null or undefined `key`[0m[1B[1G# test batch() with empty `key`[K
  ok [1m[32m503[0m got error[K  ok [1m[32m504[0m correct error message[K  ok [1m[32m505[0m callback is asynchronous[K  ok [1m[32m506[0m got error[K  ok [1m[32m507[0m correct error message[K  ok [1m[32m508[0m callback is asynchronous[K  ok [1m[32m509[0m got error[K  ok [1m[32m510[0m correct error message[K  ok [1m[32m511[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty `key`[0m[1B[1G# test batch() with missing `key` and `value`[K
  ok [1m[32m512[0m got error[K  ok [1m[32m513[0m correct error message[K  ok [1m[32m514[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `key` and `value`[0m[1B[1G# test batch() with missing `type`[K
  ok [1m[32m515[0m got error[K  ok [1m[32m516[0m correct error message[K  ok [1m[32m517[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing `type`[0m[1B[1G# test batch() with wrong `type`[K
  ok [1m[32m518[0m got error[K  ok [1m[32m519[0m correct error message[K  ok [1m[32m520[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with wrong `type`[0m[1B[1G# test batch() with missing array[K
  ok [1m[32m521[0m got error[K  ok [1m[32m522[0m correct error message[K  ok [1m[32m523[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with missing array[0m[1B[1G# test batch() with undefined array[K
  ok [1m[32m524[0m got error[K  ok [1m[32m525[0m correct error message[K  ok [1m[32m526[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined array[0m[1B[1G# test batch() with null array[K
  ok [1m[32m527[0m got error[K  ok [1m[32m528[0m correct error message[K  ok [1m[32m529[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null array[0m[1B[1G# test batch() with null options[K
  ok [1m[32m530[0m undefined[K[1A[1G[1m[32mâœ“ test batch() with null options[0m[1B[1G# test batch() with null element[K
  ok [1m[32m531[0m got error[K  ok [1m[32m532[0m correct error message[K  ok [1m[32m533[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with null element[0m[1B[1G# test batch() with undefined element[K
  ok [1m[32m534[0m got error[K  ok [1m[32m535[0m correct error message[K  ok [1m[32m536[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with undefined element[0m[1B[1G# test batch() with number element[K
  ok [1m[32m537[0m got error[K  ok [1m[32m538[0m correct error message[K  ok [1m[32m539[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with number element[0m[1B[1G# test batch() with boolean element[K
  ok [1m[32m540[0m got error[K  ok [1m[32m541[0m correct error message[K  ok [1m[32m542[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with boolean element[0m[1B[1G# test batch() with empty array[K
  ok [1m[32m543[0m no error from batch()[K  ok [1m[32m544[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch() with empty array[0m[1B[1G# test simple batch()[K
  ok [1m[32m545[0m undefined[K  ok [1m[32m546[0m null[K  ok [1m[32m547[0m should be strictly equal[K  ok [1m[32m548[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test simple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m549[0m undefined[K  ok [1m[32m550[0m null[K  ok [1m[32m551[0m should be strictly equal[K  ok [1m[32m552[0m should be strictly equal[K  ok [1m[32m553[0m entry not found[K  ok [1m[32m554[0m value is undefined[K  ok [1m[32m555[0m NotFound error[K  ok [1m[32m556[0m null[K  ok [1m[32m557[0m should be strictly equal[K  ok [1m[32m558[0m should be strictly equal[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# test multiple batch()[K
  ok [1m[32m559[0m should error[K  ok [1m[32m560[0m callback is asynchronous[K  ok [1m[32m561[0m should not be found[K  ok [1m[32m562[0m should not be found[K[1A[1G[1m[32mâœ“ test multiple batch()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test batch has db reference[K
  ok [1m[32m563[0m should be truthy[K[1A[1G[1m[32mâœ“ test batch has db reference[0m[1B[1G# test batch#put() with missing `value`[K
  ok [1m[32m564[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `value`[0m[1B[1G# test batch#put() with missing `key`[K
  ok [1m[32m565[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key`[0m[1B[1G# test batch#put() with null `key`[K
  ok [1m[32m566[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null `key`[0m[1B[1G# test batch#put() with missing `key` and `value`[K
  ok [1m[32m567[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with missing `key` and `value`[0m[1B[1G# test batch#put() with null or undefined `value`[K
  ok [1m[32m568[0m correct error message[K  ok [1m[32m569[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() with null or undefined `value`[0m[1B[1G# test batch#del() with missing `key`[K
  ok [1m[32m570[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with missing `key`[0m[1B[1G# test batch#del() with null or undefined `key`[K
  ok [1m[32m571[0m correct error message[K  ok [1m[32m572[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() with null or undefined `key`[0m[1B[1G# test batch#clear() doesn't throw[K
[1A[1G[1m[32mâœ“ test batch#clear() doesn't throw[0m[1B[1G# test batch#put() after write()[K
  ok [1m[32m573[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#put() after write()[0m[1B[1G# test batch#del() after write()[K
  ok [1m[32m574[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#del() after write()[0m[1B[1G# test batch#clear() after write()[K
  ok [1m[32m575[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#clear() after write()[0m[1B[1G# test batch#write() after write()[K
  ok [1m[32m576[0m correct error message[K[1A[1G[1m[32mâœ“ test batch#write() after write()[0m[1B[1G# test batch#write() with no operations[K
  ok [1m[32m577[0m no error from write()[K  ok [1m[32m578[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test batch#write() with no operations[0m[1B[1G# test basic batch[K
  ok [1m[32m579[0m undefined[K  ok [1m[32m580[0m undefined[K  ok [1m[32m581[0m undefined[K  ok [1m[32m582[0m correct number of entries[K  ok [1m[32m583[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test basic batch[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test iterator has db reference[K
  ok [1m[32m584[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator has db reference[0m[1B[1G# test iterator#next returns this in callback mode[K
  ok [1m[32m585[0m should be truthy[K[1A[1G[1m[32mâœ“ test iterator#next returns this in callback mode[0m[1B[1G# test twice iterator#end() callback with error[K
  ok [1m[32m586[0m undefined[K  ok [1m[32m587[0m returned error[K  ok [1m[32m588[0m correct error[K  ok [1m[32m589[0m should be strictly equal[K  ok [1m[32m590[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test twice iterator#end() callback with error[0m[1B[1G# test iterator#next after iterator#end() callback with error[K
  ok [1m[32m591[0m undefined[K  ok [1m[32m592[0m returned error[K  ok [1m[32m593[0m correct error[K  ok [1m[32m594[0m correct message[K  ok [1m[32m595[0m callback is asynchronous[K[1A[1G[1m[32mâœ“ test iterator#next after iterator#end() callback with error[0m[1B[1G# test twice iterator#next() throws[K
  ok [1m[32m596[0m returned error[K  ok [1m[32m597[0m correct error[K  ok [1m[32m598[0m should be strictly equal[K  ok [1m[32m599[0m callback is asynchronous[K  ok [1m[32m600[0m null[K  ok [1m[32m601[0m undefined[K[1A[1G[1m[32mâœ“ test twice iterator#next() throws[0m[1B[1G# test simple iterator()[K
  ok [1m[32m602[0m undefined[K  ok [1m[32m603[0m null[K  ok [1m[32m604[0m key argument is a string[K  ok [1m[32m605[0m value argument is a string[K  ok [1m[32m606[0m correct key[K  ok [1m[32m607[0m correct value[K  ok [1m[32m608[0m null[K  ok [1m[32m609[0m key argument is a string[K  ok [1m[32m610[0m value argument is a string[K  ok [1m[32m611[0m correct key[K  ok [1m[32m612[0m correct value[K  ok [1m[32m613[0m null[K  ok [1m[32m614[0m key argument is a string[K  ok [1m[32m615[0m value argument is a string[K  ok [1m[32m616[0m correct key[K  ok [1m[32m617[0m correct value[K  ok [1m[32m618[0m null[K  ok [1m[32m619[0m err argument is nullish[K  ok [1m[32m620[0m key argument is undefined[K  ok [1m[32m621[0m value argument is undefined[K  ok [1m[32m622[0m correct number of entries[K[1A[1G[1m[32mâœ“ test simple iterator()[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test full data collection[K
  ok [1m[32m623[0m undefined[K  ok [1m[32m624[0m correct number of entries[K  ok [1m[32m625[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection[0m[1B[1G# test full data collection (flipped)[K
  ok [1m[32m626[0m undefined[K  ok [1m[32m627[0m correct number of entries[K  ok [1m[32m628[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test full data collection (flipped)[0m[1B[1G# test iterator with reverse=true[K
  ok [1m[32m629[0m undefined[K  ok [1m[32m630[0m correct number of entries[K  ok [1m[32m631[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with reverse=true[0m[1B[1G# test iterator with gte=00[K
  ok [1m[32m632[0m undefined[K  ok [1m[32m633[0m correct number of entries[K  ok [1m[32m634[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00[0m[1B[1G# test iterator with gte=00 (flipped)[K
  ok [1m[32m635[0m undefined[K  ok [1m[32m636[0m correct number of entries[K  ok [1m[32m637[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=00 (flipped)[0m[1B[1G# test iterator with gte=50[K
  ok [1m[32m638[0m undefined[K  ok [1m[32m639[0m correct number of entries[K  ok [1m[32m640[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50[0m[1B[1G# test iterator with gte=50 (flipped)[K
  ok [1m[32m641[0m undefined[K  ok [1m[32m642[0m correct number of entries[K  ok [1m[32m643[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50 (flipped)[0m[1B[1G# test iterator with lte=50 and reverse=true[K
  ok [1m[32m644[0m undefined[K  ok [1m[32m645[0m correct number of entries[K  ok [1m[32m646[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 and reverse=true[0m[1B[1G# test iterator with gte=49.5 (midway)[K
  ok [1m[32m647[0m undefined[K  ok [1m[32m648[0m correct number of entries[K  ok [1m[32m649[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway)[0m[1B[1G# test iterator with gte=49.5 (midway) (flipped)[K
  ok [1m[32m650[0m undefined[K  ok [1m[32m651[0m correct number of entries[K  ok [1m[32m652[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49.5 (midway) (flipped)[0m[1B[1G# test iterator with gte=49999 (midway)[K
  ok [1m[32m653[0m undefined[K  ok [1m[32m654[0m correct number of entries[K  ok [1m[32m655[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway)[0m[1B[1G# test iterator with gte=49999 (midway) (flipped)[K
  ok [1m[32m656[0m undefined[K  ok [1m[32m657[0m correct number of entries[K  ok [1m[32m658[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=49999 (midway) (flipped)[0m[1B[1G# test iterator with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m659[0m undefined[K  ok [1m[32m660[0m correct number of entries[K  ok [1m[32m661[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m662[0m undefined[K  ok [1m[32m663[0m correct number of entries[K  ok [1m[32m664[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=49.5 (midway) and reverse=true[0m[1B[1G# test iterator with lt=50 and reverse=true[K
  ok [1m[32m665[0m undefined[K  ok [1m[32m666[0m correct number of entries[K  ok [1m[32m667[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50 and reverse=true[0m[1B[1G# test iterator with lte=50[K
  ok [1m[32m668[0m undefined[K  ok [1m[32m669[0m correct number of entries[K  ok [1m[32m670[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50[0m[1B[1G# test iterator with lte=50 (flipped)[K
  ok [1m[32m671[0m undefined[K  ok [1m[32m672[0m correct number of entries[K  ok [1m[32m673[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50 (flipped)[0m[1B[1G# test iterator with lte=50.5 (midway)[K
  ok [1m[32m674[0m undefined[K  ok [1m[32m675[0m correct number of entries[K  ok [1m[32m676[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway)[0m[1B[1G# test iterator with lte=50.5 (midway) (flipped)[K
  ok [1m[32m677[0m undefined[K  ok [1m[32m678[0m correct number of entries[K  ok [1m[32m679[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50.5 (midway) (flipped)[0m[1B[1G# test iterator with lte=50555 (midway)[K
  ok [1m[32m680[0m undefined[K  ok [1m[32m681[0m correct number of entries[K  ok [1m[32m682[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway)[0m[1B[1G# test iterator with lte=50555 (midway) (flipped)[K
  ok [1m[32m683[0m undefined[K  ok [1m[32m684[0m correct number of entries[K  ok [1m[32m685[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=50555 (midway) (flipped)[0m[1B[1G# test iterator with lt=50555 (midway)[K
  ok [1m[32m686[0m undefined[K  ok [1m[32m687[0m correct number of entries[K  ok [1m[32m688[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway)[0m[1B[1G# test iterator with lt=50555 (midway) (flipped)[K
  ok [1m[32m689[0m undefined[K  ok [1m[32m690[0m correct number of entries[K  ok [1m[32m691[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=50555 (midway) (flipped)[0m[1B[1G# test iterator with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m692[0m undefined[K  ok [1m[32m693[0m correct number of entries[K  ok [1m[32m694[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m695[0m undefined[K  ok [1m[32m696[0m correct number of entries[K  ok [1m[32m697[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50.5 (midway) and reverse=true[0m[1B[1G# test iterator with gt=50 and reverse=true[K
  ok [1m[32m698[0m undefined[K  ok [1m[32m699[0m correct number of entries[K  ok [1m[32m700[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=50 and reverse=true[0m[1B[1G# test iterator with lte=0[K
  ok [1m[32m701[0m undefined[K  ok [1m[32m702[0m correct number of entries[K  ok [1m[32m703[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0[0m[1B[1G# test iterator with lte=0 (flipped)[K
  ok [1m[32m704[0m undefined[K  ok [1m[32m705[0m correct number of entries[K  ok [1m[32m706[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte=0 (flipped)[0m[1B[1G# test iterator with lt=0[K
  ok [1m[32m707[0m undefined[K  ok [1m[32m708[0m correct number of entries[K  ok [1m[32m709[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0[0m[1B[1G# test iterator with lt=0 (flipped)[K
  ok [1m[32m710[0m undefined[K  ok [1m[32m711[0m correct number of entries[K  ok [1m[32m712[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt=0 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70[K
  ok [1m[32m713[0m undefined[K  ok [1m[32m714[0m correct number of entries[K  ok [1m[32m715[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70[0m[1B[1G# test iterator with gte=30 and lte=70 (flipped)[K
  ok [1m[32m716[0m undefined[K  ok [1m[32m717[0m correct number of entries[K  ok [1m[32m718[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 (flipped)[0m[1B[1G# test iterator with gt=29 and lt=71[K
  ok [1m[32m719[0m undefined[K  ok [1m[32m720[0m correct number of entries[K  ok [1m[32m721[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71[0m[1B[1G# test iterator with gt=29 and lt=71 (flipped)[K
  ok [1m[32m722[0m undefined[K  ok [1m[32m723[0m correct number of entries[K  ok [1m[32m724[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 (flipped)[0m[1B[1G# test iterator with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m725[0m undefined[K  ok [1m[32m726[0m correct number of entries[K  ok [1m[32m727[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte=30 and lte=70 and reverse=true[0m[1B[1G# test iterator with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m728[0m undefined[K  ok [1m[32m729[0m correct number of entries[K  ok [1m[32m730[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt=29 and lt=71 and reverse=true[0m[1B[1G# test iterator with limit=20[K
  ok [1m[32m731[0m undefined[K  ok [1m[32m732[0m correct number of entries[K  ok [1m[32m733[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20[0m[1B[1G# test iterator with limit=20 and gte=20[K
  ok [1m[32m734[0m undefined[K  ok [1m[32m735[0m correct number of entries[K  ok [1m[32m736[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and gte=20[0m[1B[1G# test iterator with limit=20 and reverse=true[K
  ok [1m[32m737[0m undefined[K  ok [1m[32m738[0m correct number of entries[K  ok [1m[32m739[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and reverse=true[0m[1B[1G# test iterator with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m740[0m undefined[K  ok [1m[32m741[0m correct number of entries[K  ok [1m[32m742[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=20 and lte=79 and reverse=true[0m[1B[1G# test iterator with limit=-1 should iterate over whole database[K
  ok [1m[32m743[0m undefined[K  ok [1m[32m744[0m correct number of entries[K  ok [1m[32m745[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=-1 should iterate over whole database[0m[1B[1G# test iterator with limit=0 should not iterate over anything[K
  ok [1m[32m746[0m undefined[K  ok [1m[32m747[0m correct number of entries[K  ok [1m[32m748[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with limit=0 should not iterate over anything[0m[1B[1G# test iterator with lte after limit[K
  ok [1m[32m749[0m undefined[K  ok [1m[32m750[0m correct number of entries[K  ok [1m[32m751[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after limit[0m[1B[1G# test iterator with lte before limit[K
  ok [1m[32m752[0m undefined[K  ok [1m[32m753[0m correct number of entries[K  ok [1m[32m754[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before limit[0m[1B[1G# test iterator with gte after database end[K
  ok [1m[32m755[0m undefined[K  ok [1m[32m756[0m correct number of entries[K  ok [1m[32m757[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end[0m[1B[1G# test iterator with gte after database end (flipped)[K
  ok [1m[32m758[0m undefined[K  ok [1m[32m759[0m correct number of entries[K  ok [1m[32m760[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gte after database end (flipped)[0m[1B[1G# test iterator with gt after database end[K
  ok [1m[32m761[0m undefined[K  ok [1m[32m762[0m correct number of entries[K  ok [1m[32m763[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end[0m[1B[1G# test iterator with gt after database end (flipped)[K
  ok [1m[32m764[0m undefined[K  ok [1m[32m765[0m correct number of entries[K  ok [1m[32m766[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with gt after database end (flipped)[0m[1B[1G# test iterator with lte after database end and reverse=true[K
  ok [1m[32m767[0m undefined[K  ok [1m[32m768[0m correct number of entries[K  ok [1m[32m769[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte after database end and reverse=true[0m[1B[1G# test iterator with lt after database end[K
  ok [1m[32m770[0m undefined[K  ok [1m[32m771[0m correct number of entries[K  ok [1m[32m772[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end[0m[1B[1G# test iterator with lt after database end (flipped)[K
  ok [1m[32m773[0m undefined[K  ok [1m[32m774[0m correct number of entries[K  ok [1m[32m775[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt after database end (flipped)[0m[1B[1G# test iterator with lt at database end[K
  ok [1m[32m776[0m undefined[K  ok [1m[32m777[0m correct number of entries[K  ok [1m[32m778[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end[0m[1B[1G# test iterator with lt at database end (flipped)[K
  ok [1m[32m779[0m undefined[K  ok [1m[32m780[0m correct number of entries[K  ok [1m[32m781[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt at database end (flipped)[0m[1B[1G# test iterator with lte at database end[K
  ok [1m[32m782[0m undefined[K  ok [1m[32m783[0m correct number of entries[K  ok [1m[32m784[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end[0m[1B[1G# test iterator with lte at database end (flipped)[K
  ok [1m[32m785[0m undefined[K  ok [1m[32m786[0m correct number of entries[K  ok [1m[32m787[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte at database end (flipped)[0m[1B[1G# test iterator with lt before database end[K
  ok [1m[32m788[0m undefined[K  ok [1m[32m789[0m correct number of entries[K  ok [1m[32m790[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end[0m[1B[1G# test iterator with lt before database end (flipped)[K
  ok [1m[32m791[0m undefined[K  ok [1m[32m792[0m correct number of entries[K  ok [1m[32m793[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt before database end (flipped)[0m[1B[1G# test iterator with lte before database end[K
  ok [1m[32m794[0m undefined[K  ok [1m[32m795[0m correct number of entries[K  ok [1m[32m796[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end[0m[1B[1G# test iterator with lte before database end (flipped)[K
  ok [1m[32m797[0m undefined[K  ok [1m[32m798[0m correct number of entries[K  ok [1m[32m799[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte before database end (flipped)[0m[1B[1G# test iterator with lte and gte after database and reverse=true[K
  ok [1m[32m800[0m undefined[K  ok [1m[32m801[0m correct number of entries[K  ok [1m[32m802[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lte and gte after database and reverse=true[0m[1B[1G# test iterator with lt and gt after database and reverse=true[K
  ok [1m[32m803[0m undefined[K  ok [1m[32m804[0m correct number of entries[K  ok [1m[32m805[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ test iterator with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setup[K
  ok [1m[32m806[0m no open() error[K  ok [1m[32m807[0m no batch() error[K[1A[1G[1m[32mâœ“ setup[0m[1B[1G# for await...of db.iterator()[K
  ok [1m[32m808[0m ended[K  ok [1m[32m809[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of db.iterator()[0m[1B[1G# for await...of db.iterator() does not permit reuse[K
  ok [1m[32m810[0m nexted[K  ok [1m[32m811[0m nexted[K  ok [1m[32m812[0m should be strictly equal[K[1A[1G[1m[32mâœ“ for await...of db.iterator() does not permit reuse[0m[1B[1G# for await...of db.iterator() ends on user error[K
  ok [1m[32m813[0m should be strictly equal[K  ok [1m[32m814[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user error[0m[1B[1G# for await...of db.iterator() with user error and end() error[K
  ok [1m[32m815[0m no real error from end()[K  ok [1m[32m816[0m should be strictly equal[K  ok [1m[32m817[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user error and end() error[0m[1B[1G# for await...of db.iterator() ends on iterator error[K
  ok [1m[32m818[0m nexted[K  ok [1m[32m819[0m should be strictly equal[K  ok [1m[32m820[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on iterator error[0m[1B[1G# for await...of db.iterator() with iterator error and end() error[K
  ok [1m[32m821[0m nexted[K  ok [1m[32m822[0m no real error from end()[K  ok [1m[32m823[0m should be strictly equal[K  ok [1m[32m824[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with iterator error and end() error[0m[1B[1G# for await...of db.iterator() ends on user break[K
  ok [1m[32m825[0m got a chance to break[K  ok [1m[32m826[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() ends on user break[0m[1B[1G# for await...of db.iterator() with user break and end() error[K
  ok [1m[32m827[0m got a chance to break[K  ok [1m[32m828[0m no real error from end()[K  ok [1m[32m829[0m should be strictly equal[K  ok [1m[32m830[0m ended[K[1A[1G[1m[32mâœ“ for await...of db.iterator() with user break and end() error[0m[1B[1G# teardown[K
  ok [1m[32m831[0m no close() error[K[1A[1G[1m[32mâœ“ teardown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# delete key after creating iterator[K
  ok [1m[32m832[0m no open error[K  ok [1m[32m833[0m no batch error[K  ok [1m[32m834[0m no run error[K  ok [1m[32m835[0m no iterator error[K  ok [1m[32m836[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ delete key after creating iterator[0m[1B[1G# batch delete key after creating iterator[K
  ok [1m[32m837[0m no open error[K  ok [1m[32m838[0m no batch error[K  ok [1m[32m839[0m no run error[K  ok [1m[32m840[0m no iterator error[K  ok [1m[32m841[0m maybe supports snapshots[K[1A[1G[1m[32mâœ“ batch delete key after creating iterator[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# setUp db[K
[1A[1G[1m[32mâœ“ setUp db[0m[1B[1G# test simple clear() on string keys[K
  ok [1m[32m842[0m no open error[K  ok [1m[32m843[0m no batch error[K  ok [1m[32m844[0m no concat error[K  ok [1m[32m845[0m has entries[K  ok [1m[32m846[0m no clear error[K  ok [1m[32m847[0m no concat error[K  ok [1m[32m848[0m has no entries[K  ok [1m[32m849[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on string keys[0m[1B[1G# test simple clear() on buffer keys[K
  ok [1m[32m850[0m no open error[K  ok [1m[32m851[0m no batch error[K  ok [1m[32m852[0m no concat error[K  ok [1m[32m853[0m has entries[K  ok [1m[32m854[0m no clear error[K  ok [1m[32m855[0m no concat error[K  ok [1m[32m856[0m has no entries[K  ok [1m[32m857[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on buffer keys[0m[1B[1G# test simple clear() on mixed keys[K
  ok [1m[32m858[0m no open error[K  ok [1m[32m859[0m no batch error[K  ok [1m[32m860[0m no concat error[K  ok [1m[32m861[0m has entries[K  ok [1m[32m862[0m no clear error[K  ok [1m[32m863[0m no concat error[K  ok [1m[32m864[0m has no entries[K  ok [1m[32m865[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on mixed keys[0m[1B[1G# test simple clear() on non-utf8 buffer keys[K
  ok [1m[32m866[0m no open error[K  ok [1m[32m867[0m no batch error[K  ok [1m[32m868[0m no concat error[K  ok [1m[32m869[0m has entries[K  ok [1m[32m870[0m no clear error[K  ok [1m[32m871[0m no concat error[K  ok [1m[32m872[0m has no entries[K  ok [1m[32m873[0m no close error[K[1A[1G[1m[32mâœ“ test simple clear() on non-utf8 buffer keys[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# setUp common[K
[1A[1G[1m[32mâœ“ setUp common[0m[1B[1G# db#clear() with full range[K
  ok [1m[32m874[0m no open error[K  ok [1m[32m875[0m no batch error[K  ok [1m[32m876[0m no clear error[K  ok [1m[32m877[0m no concat error[K  ok [1m[32m878[0m correct number of entries[K  ok [1m[32m879[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with full range[0m[1B[1G# db#clear() with reverse=true[K
  ok [1m[32m880[0m no open error[K  ok [1m[32m881[0m no batch error[K  ok [1m[32m882[0m no clear error[K  ok [1m[32m883[0m no concat error[K  ok [1m[32m884[0m correct number of entries[K  ok [1m[32m885[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with reverse=true[0m[1B[1G# db#clear() with gte=00[K
  ok [1m[32m886[0m no open error[K  ok [1m[32m887[0m no batch error[K  ok [1m[32m888[0m no clear error[K  ok [1m[32m889[0m no concat error[K  ok [1m[32m890[0m correct number of entries[K  ok [1m[32m891[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=00[0m[1B[1G# db#clear() with gte=50[K
  ok [1m[32m892[0m no open error[K  ok [1m[32m893[0m no batch error[K  ok [1m[32m894[0m no clear error[K  ok [1m[32m895[0m no concat error[K  ok [1m[32m896[0m correct number of entries[K  ok [1m[32m897[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50[0m[1B[1G# db#clear() with lte=50 and reverse=true[K
  ok [1m[32m898[0m no open error[K  ok [1m[32m899[0m no batch error[K  ok [1m[32m900[0m no clear error[K  ok [1m[32m901[0m no concat error[K  ok [1m[32m902[0m correct number of entries[K  ok [1m[32m903[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50 and reverse=true[0m[1B[1G# db#clear() with gte=49.5 (midway)[K
  ok [1m[32m904[0m no open error[K  ok [1m[32m905[0m no batch error[K  ok [1m[32m906[0m no clear error[K  ok [1m[32m907[0m no concat error[K  ok [1m[32m908[0m correct number of entries[K  ok [1m[32m909[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49.5 (midway)[0m[1B[1G# db#clear() with gte=49999 (midway)[K
  ok [1m[32m910[0m no open error[K  ok [1m[32m911[0m no batch error[K  ok [1m[32m912[0m no clear error[K  ok [1m[32m913[0m no concat error[K  ok [1m[32m914[0m correct number of entries[K  ok [1m[32m915[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=49999 (midway)[0m[1B[1G# db#clear() with lte=49.5 (midway) and reverse=true[K
  ok [1m[32m916[0m no open error[K  ok [1m[32m917[0m no batch error[K  ok [1m[32m918[0m no clear error[K  ok [1m[32m919[0m no concat error[K  ok [1m[32m920[0m correct number of entries[K  ok [1m[32m921[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=49.5 (midway) and reverse=true[K
  ok [1m[32m922[0m no open error[K  ok [1m[32m923[0m no batch error[K  ok [1m[32m924[0m no clear error[K  ok [1m[32m925[0m no concat error[K  ok [1m[32m926[0m correct number of entries[K  ok [1m[32m927[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=49.5 (midway) and reverse=true[0m[1B[1G# db#clear() with lt=50 and reverse=true[K
  ok [1m[32m928[0m no open error[K  ok [1m[32m929[0m no batch error[K  ok [1m[32m930[0m no clear error[K  ok [1m[32m931[0m no concat error[K  ok [1m[32m932[0m correct number of entries[K  ok [1m[32m933[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50 and reverse=true[0m[1B[1G# db#clear() with lte=50[K
  ok [1m[32m934[0m no open error[K  ok [1m[32m935[0m no batch error[K  ok [1m[32m936[0m no clear error[K  ok [1m[32m937[0m no concat error[K  ok [1m[32m938[0m correct number of entries[K  ok [1m[32m939[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50[0m[1B[1G# db#clear() with lte=50.5 (midway)[K
  ok [1m[32m940[0m no open error[K  ok [1m[32m941[0m no batch error[K  ok [1m[32m942[0m no clear error[K  ok [1m[32m943[0m no concat error[K  ok [1m[32m944[0m correct number of entries[K  ok [1m[32m945[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50.5 (midway)[0m[1B[1G# db#clear() with lte=50555 (midway)[K
  ok [1m[32m946[0m no open error[K  ok [1m[32m947[0m no batch error[K  ok [1m[32m948[0m no clear error[K  ok [1m[32m949[0m no concat error[K  ok [1m[32m950[0m correct number of entries[K  ok [1m[32m951[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=50555 (midway)[0m[1B[1G# db#clear() with lt=50555 (midway)[K
  ok [1m[32m952[0m no open error[K  ok [1m[32m953[0m no batch error[K  ok [1m[32m954[0m no clear error[K  ok [1m[32m955[0m no concat error[K  ok [1m[32m956[0m correct number of entries[K  ok [1m[32m957[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=50555 (midway)[0m[1B[1G# db#clear() with gte=50.5 (midway) and reverse=true[K
  ok [1m[32m958[0m no open error[K  ok [1m[32m959[0m no batch error[K  ok [1m[32m960[0m no clear error[K  ok [1m[32m961[0m no concat error[K  ok [1m[32m962[0m correct number of entries[K  ok [1m[32m963[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50.5 (midway) and reverse=true[K
  ok [1m[32m964[0m no open error[K  ok [1m[32m965[0m no batch error[K  ok [1m[32m966[0m no clear error[K  ok [1m[32m967[0m no concat error[K  ok [1m[32m968[0m correct number of entries[K  ok [1m[32m969[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50.5 (midway) and reverse=true[0m[1B[1G# db#clear() with gt=50 and reverse=true[K
  ok [1m[32m970[0m no open error[K  ok [1m[32m971[0m no batch error[K  ok [1m[32m972[0m no clear error[K  ok [1m[32m973[0m no concat error[K  ok [1m[32m974[0m correct number of entries[K  ok [1m[32m975[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=50 and reverse=true[0m[1B[1G# db#clear() with lte=0[K
  ok [1m[32m976[0m no open error[K  ok [1m[32m977[0m no batch error[K  ok [1m[32m978[0m no clear error[K  ok [1m[32m979[0m no concat error[K  ok [1m[32m980[0m correct number of entries[K  ok [1m[32m981[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte=0[0m[1B[1G# db#clear() with lt=0[K
  ok [1m[32m982[0m no open error[K  ok [1m[32m983[0m no batch error[K  ok [1m[32m984[0m no clear error[K  ok [1m[32m985[0m no concat error[K  ok [1m[32m986[0m correct number of entries[K  ok [1m[32m987[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt=0[0m[1B[1G# db#clear() with gte=30 and lte=70[K
  ok [1m[32m988[0m no open error[K  ok [1m[32m989[0m no batch error[K  ok [1m[32m990[0m no clear error[K  ok [1m[32m991[0m no concat error[K  ok [1m[32m992[0m correct number of entries[K  ok [1m[32m993[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70[0m[1B[1G# db#clear() with gt=29 and lt=71[K
  ok [1m[32m994[0m no open error[K  ok [1m[32m995[0m no batch error[K  ok [1m[32m996[0m no clear error[K  ok [1m[32m997[0m no concat error[K  ok [1m[32m998[0m correct number of entries[K  ok [1m[32m999[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71[0m[1B[1G# db#clear() with gte=30 and lte=70 and reverse=true[K
  ok [1m[32m1000[0m no open error[K  ok [1m[32m1001[0m no batch error[K  ok [1m[32m1002[0m no clear error[K  ok [1m[32m1003[0m no concat error[K  ok [1m[32m1004[0m correct number of entries[K  ok [1m[32m1005[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte=30 and lte=70 and reverse=true[0m[1B[1G# db#clear() with gt=29 and lt=71 and reverse=true[K
  ok [1m[32m1006[0m no open error[K  ok [1m[32m1007[0m no batch error[K  ok [1m[32m1008[0m no clear error[K  ok [1m[32m1009[0m no concat error[K  ok [1m[32m1010[0m correct number of entries[K  ok [1m[32m1011[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt=29 and lt=71 and reverse=true[0m[1B[1G# db#clear() with limit=20[K
  ok [1m[32m1012[0m no open error[K  ok [1m[32m1013[0m no batch error[K  ok [1m[32m1014[0m no clear error[K  ok [1m[32m1015[0m no concat error[K  ok [1m[32m1016[0m correct number of entries[K  ok [1m[32m1017[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20[0m[1B[1G# db#clear() with limit=20 and gte=20[K
  ok [1m[32m1018[0m no open error[K  ok [1m[32m1019[0m no batch error[K  ok [1m[32m1020[0m no clear error[K  ok [1m[32m1021[0m no concat error[K  ok [1m[32m1022[0m correct number of entries[K  ok [1m[32m1023[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and gte=20[0m[1B[1G# db#clear() with limit=20 and reverse=true[K
  ok [1m[32m1024[0m no open error[K  ok [1m[32m1025[0m no batch error[K  ok [1m[32m1026[0m no clear error[K  ok [1m[32m1027[0m no concat error[K  ok [1m[32m1028[0m correct number of entries[K  ok [1m[32m1029[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and reverse=true[0m[1B[1G# db#clear() with limit=20 and lte=79 and reverse=true[K
  ok [1m[32m1030[0m no open error[K  ok [1m[32m1031[0m no batch error[K  ok [1m[32m1032[0m no clear error[K  ok [1m[32m1033[0m no concat error[K  ok [1m[32m1034[0m correct number of entries[K  ok [1m[32m1035[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=20 and lte=79 and reverse=true[0m[1B[1G# db#clear() with limit=-1 should clear whole database[K
  ok [1m[32m1036[0m no open error[K  ok [1m[32m1037[0m no batch error[K  ok [1m[32m1038[0m no clear error[K  ok [1m[32m1039[0m no concat error[K  ok [1m[32m1040[0m correct number of entries[K  ok [1m[32m1041[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=-1 should clear whole database[0m[1B[1G# db#clear() with limit=0 should not clear anything[K
  ok [1m[32m1042[0m no open error[K  ok [1m[32m1043[0m no batch error[K  ok [1m[32m1044[0m no clear error[K  ok [1m[32m1045[0m no concat error[K  ok [1m[32m1046[0m correct number of entries[K  ok [1m[32m1047[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with limit=0 should not clear anything[0m[1B[1G# db#clear() with lte after limit[K
  ok [1m[32m1048[0m no open error[K  ok [1m[32m1049[0m no batch error[K  ok [1m[32m1050[0m no clear error[K  ok [1m[32m1051[0m no concat error[K  ok [1m[32m1052[0m correct number of entries[K  ok [1m[32m1053[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after limit[0m[1B[1G# db#clear() with lte before limit[K
  ok [1m[32m1054[0m no open error[K  ok [1m[32m1055[0m no batch error[K  ok [1m[32m1056[0m no clear error[K  ok [1m[32m1057[0m no concat error[K  ok [1m[32m1058[0m correct number of entries[K  ok [1m[32m1059[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte before limit[0m[1B[1G# db#clear() with gte after database end[K
  ok [1m[32m1060[0m no open error[K  ok [1m[32m1061[0m no batch error[K  ok [1m[32m1062[0m no clear error[K  ok [1m[32m1063[0m no concat error[K  ok [1m[32m1064[0m correct number of entries[K  ok [1m[32m1065[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gte after database end[0m[1B[1G# db#clear() with gt after database end[K
  ok [1m[32m1066[0m no open error[K  ok [1m[32m1067[0m no batch error[K  ok [1m[32m1068[0m no clear error[K  ok [1m[32m1069[0m no concat error[K  ok [1m[32m1070[0m correct number of entries[K  ok [1m[32m1071[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with gt after database end[0m[1B[1G# db#clear() with lte after database end and reverse=true[K
  ok [1m[32m1072[0m no open error[K  ok [1m[32m1073[0m no batch error[K  ok [1m[32m1074[0m no clear error[K  ok [1m[32m1075[0m no concat error[K  ok [1m[32m1076[0m correct number of entries[K  ok [1m[32m1077[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte after database end and reverse=true[0m[1B[1G# db#clear() with lte and gte after database and reverse=true[K
  ok [1m[32m1078[0m no open error[K  ok [1m[32m1079[0m no batch error[K  ok [1m[32m1080[0m no clear error[K  ok [1m[32m1081[0m no concat error[K  ok [1m[32m1082[0m correct number of entries[K  ok [1m[32m1083[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lte and gte after database and reverse=true[0m[1B[1G# db#clear() with lt and gt after database and reverse=true[K
  ok [1m[32m1084[0m no open error[K  ok [1m[32m1085[0m no batch error[K  ok [1m[32m1086[0m no clear error[K  ok [1m[32m1087[0m no concat error[K  ok [1m[32m1088[0m correct number of entries[K  ok [1m[32m1089[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ db#clear() with lt and gt after database and reverse=true[0m[1B[1G# tearDown[K
[1A[1G[1m[32mâœ“ tearDown[0m[1B[1G# get[K
  ok [1m[32m1090[0m no err[K  ok [1m[32m1091[0m no err[K  ok [1m[32m1092[0m should be deeply equivalent[K  ok [1m[32m1093[0m no err[K  ok [1m[32m1094[0m should be deeply equivalent[K  ok [1m[32m1095[0m no err[K  ok [1m[32m1096[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get[0m[1B[1G# get with valueEncoding: json in constructor[K
  ok [1m[32m1097[0m no err[K  ok [1m[32m1098[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in constructor[0m[1B[1G# get with valueEncoding: json in get options[K
  ok [1m[32m1099[0m no err[K  ok [1m[32m1100[0m no err[K  ok [1m[32m1101[0m should be deeply equivalent[K  ok [1m[32m1102[0m no err[K  ok [1m[32m1103[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ get with valueEncoding: json in get options[0m[1B[1G# put[K
  ok [1m[32m1104[0m no err[K  ok [1m[32m1105[0m no err[K  ok [1m[32m1106[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put[0m[1B[1G# put with valueEncoding: json in constructor[K
  ok [1m[32m1107[0m no err[K  ok [1m[32m1108[0m no err[K  ok [1m[32m1109[0m should be deeply equivalent[K  ok [1m[32m1110[0m no err[K  ok [1m[32m1111[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in constructor[0m[1B[1G# put with valueEncoding: json in put options[K
  ok [1m[32m1112[0m no err[K  ok [1m[32m1113[0m no err[K  ok [1m[32m1114[0m should be deeply equivalent[K  ok [1m[32m1115[0m no err[K  ok [1m[32m1116[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ put with valueEncoding: json in put options[0m[1B[1G# readonly[K
  ok [1m[32m1117[0m put failed[K  ok [1m[32m1118[0m no err[K  ok [1m[32m1119[0m old value[K[1A[1G[1m[32mâœ“ readonly[0m[1B[1G# del[K
  ok [1m[32m1120[0m no err[K  ok [1m[32m1121[0m no err[K  ok [1m[32m1122[0m had error[K  ok [1m[32m1123[0m not found err[K[1A[1G[1m[32mâœ“ del[0m[1B[1G# batch[K
  ok [1m[32m1124[0m no err[K  ok [1m[32m1125[0m no err[K  ok [1m[32m1126[0m should be deeply equivalent[K  ok [1m[32m1127[0m no err[K  ok [1m[32m1128[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ batch[0m[1B[1G# read stream[K
  ok [1m[32m1129[0m no err[K  ok [1m[32m1130[0m should be deeply equivalent[K  ok [1m[32m1131[0m should be deeply equivalent[K  ok [1m[32m1132[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream[0m[1B[1G# read stream (gt)[K
  ok [1m[32m1133[0m no err[K  ok [1m[32m1134[0m should be deeply equivalent[K  ok [1m[32m1135[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ read stream (gt)[0m[1B[1G# for await...of iterator[K
  ok [1m[32m1136[0m no err[K  ok [1m[32m1137[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ for await...of iterator[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1138[0m undefined[K  ok [1m[32m1139[0m should be deeply equivalent[K  ok [1m[32m1140[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# multileveldown server on encrypt-down[K
  ok [1m[32m1141[0m no err[K  ok [1m[32m1142[0m no err[K  ok [1m[32m1143[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down[0m[1B[1G# multileveldown server on encrypt-down with encoding[K
  ok [1m[32m1144[0m no err[K  ok [1m[32m1145[0m no err[K  ok [1m[32m1146[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on encrypt-down with encoding[0m[1B[1G# retry get[K
  ok [1m[32m1147[0m no err[K  ok [1m[32m1148[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# no retry get[K
  ok [1m[32m1149[0m had error[K[1A[1G[1m[32mâœ“ no retry get[0m[1B[1G# retry get[K
  ok [1m[32m1150[0m no err[K  ok [1m[32m1151[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ retry get[0m[1B[1G# retry read stream[K
  ok [1m[32m1152[0m stream continues over retry[K  ok [1m[32m1153[0m stream continues over retry[K  ok [1m[32m1154[0m stream continues over retry[K  ok [1m[32m1155[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream[0m[1B[1G# retry read stream and limit[K
  ok [1m[32m1156[0m stream continues over retry[K  ok [1m[32m1157[0m stream continues over retry[K  ok [1m[32m1158[0m no more data[K[1A[1G[1m[32mâœ“ retry read stream and limit[0m[1B[1G# two concurrent iterators[K
  ok [1m[32m1159[0m undefined[K  ok [1m[32m1160[0m should be deeply equivalent[K  ok [1m[32m1161[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ two concurrent iterators[0m[1B[1G# subleveldown on deferred multileveldown client[K
  ok [1m[32m1162[0m should be strictly equal[K  ok [1m[32m1163[0m no err[K  ok [1m[32m1164[0m should be deeply equivalent[K  ok [1m[32m1165[0m should be deeply equivalent[K  ok [1m[32m1166[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on deferred multileveldown client[0m[1B[1G# subleveldown on non-deferred multileveldown client[K
  ok [1m[32m1167[0m should be strictly equal[K  ok [1m[32m1168[0m no err[K  ok [1m[32m1169[0m should be deeply equivalent[K  ok [1m[32m1170[0m should be deeply equivalent[K  ok [1m[32m1171[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ subleveldown on non-deferred multileveldown client[0m[1B[1G# multileveldown server on deferred subleveldown[K
  ok [1m[32m1172[0m no err[K  ok [1m[32m1173[0m no err[K  ok [1m[32m1174[0m should be deeply equivalent[K  ok [1m[32m1175[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on deferred subleveldown[0m[1B[1G# multileveldown server on non-deferred subleveldown[K
  ok [1m[32m1176[0m no err[K  ok [1m[32m1177[0m no err[K  ok [1m[32m1178[0m should be deeply equivalent[K  ok [1m[32m1179[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on non-deferred subleveldown[0m[1B[1G# multileveldown server on nested subleveldown[K
  ok [1m[32m1180[0m no err[K  ok [1m[32m1181[0m no err[K  ok [1m[32m1182[0m should be deeply equivalent[K  ok [1m[32m1183[0m should be deeply equivalent[K[1A[1G[1m[32mâœ“ multileveldown server on nested subleveldown[0m[1B[1G# tests 1183[K
tests 1183# pass  1183[K
pass  1183# ok[K
[1A[1G[1m[32mâœ“ ok[0m[1B[1G--------------|---------|----------|---------|---------|--------------------------------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                          
--------------|---------|----------|---------|---------|--------------------------------------------
All files     |   86.14 |    66.71 |   94.65 |   95.26 |                                            
 client.js    |    87.5 |      100 |      60 |   86.66 | 28-32                                      
 index.js     |     100 |      100 |     100 |     100 |                                            
 leveldown.js |   84.54 |     62.6 |   88.23 |   91.32 | 78,122-125,148,168-171,334-338,356-357     
 matchdown.js |    87.5 |    83.33 |     100 |     100 | 7                                          
 messages.js  |   86.35 |    66.17 |     100 |   96.59 | ...1269,1285-1286,1308-1310,1353-1355,1363 
 server.js    |    86.8 |    74.64 |   97.05 |    92.8 | 45-47,61,68-72                             
--------------|---------|----------|---------|---------|--------------------------------------------
************* run test done *************
