/data/js-variants/multee
7
koop-core is testing ./Variants/compression/variant7/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 6s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 878ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 497ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (191ms)
      ✓ should read data on GET (66ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (116ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (771ms)

************* run test done *************
koop-core is testing ./Variants/compression/variant6/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 1s

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 446ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (165ms)
      ✓ should read data on GET (63ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (114ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route (55ms)

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (787ms)

************* run test done *************
koop-core is testing ./Variants/compression/variant5/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 950ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 574ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (82ms)
      ✓ should read data on GET (60ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (158ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (634ms)

************* run test done *************
koop-core is testing ./Variants/compression/variant4/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 834ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 496ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (80ms)
      ✓ should read data on GET (45ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (147ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (682ms)

************* run test done *************
koop-core is testing ./Variants/compression/variant3/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 921ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 654ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (100ms)
      ✓ should read data on GET (52ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (117ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (686ms)

************* run test done *************
koop-core is testing ./Variants/compression/variant2/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 705ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 488ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (136ms)
      ✓ should read data on GET (62ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (118ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully (68ms)

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (779ms)

************* run test done *************
koop-core is testing ./Variants/compression/variant1/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 843ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 452ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (126ms)
      ✓ should read data on GET (49ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (112ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (657ms)

************* run test done *************
variantsDepsNum: 4
/data/js-variants/multee
4
koop-core is testing ./VariantsDeps/compression/variant4/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 747ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 546ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (141ms)
      ✓ should read data on GET (66ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (126ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (694ms)

************* run test done *************
koop-core is testing ./VariantsDeps/compression/variant3/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 790ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 449ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (78ms)
      ✓ should read data on GET (52ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (131ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (634ms)

************* run test done *************
koop-core is testing ./VariantsDeps/compression/variant2/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 715ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 480ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (67ms)
      ✓ should read data on GET (47ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (144ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route (40ms)

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (648ms)

************* run test done *************
koop-core is testing ./VariantsDeps/compression/variant1/compression
/data/js-variants/multee
************* npm unlink module *************

added 4 packages, changed 1 package, and audited 826 packages in 4s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 752ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 478ms

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 4 packages, changed 1 package, and audited 823 packages in 3s

63 packages are looking for funding
  run `npm fund` for details

17 vulnerabilities (6 moderate, 9 high, 2 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> koop@5.0.0 test
> standard && mocha test --recursive -t 5000

WARNING: "/MapServer" routes will be registered, but only for specialized 404 handling in FeatureServer.
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}


  Datsets API
    Cache CRUD
      ✓ should insert data on PUT (88ms)
      ✓ should read data on GET (51ms)
      ✓ should delete data on DELETE
    Metadata CRUD
      ✓ should insert metadata on PUT
      ✓ should read metadata on GET
      ✓ should delete metadata on DELETE
    FeatureServer
      ✓ should get features at /FeatureServer/0/query (130ms)

  Index tests
    Koop instantiation
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should instantiate Koop with config
    Provider registration
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider and add output and provider routes to router stack
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register provider-routes before plugin-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST


"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    

{"level":"info","message":"registered provider:"}
      ✓ should register plugin-routes before provider-routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/path-to-route/fake/:id          GET    


"Geoservices" output routes for the "test-provider" provider                 Methods  
---------------------------------------------------------------------------  ---------
/path-to-route/test-provider/rest/info                                       GET, POST
/path-to-route/test-provider/tokens/:method                                  GET, POST
/path-to-route/test-provider/tokens                                          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer                 GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/path-to-route/test-provider/:id/FeatureServer/layers                        GET, POST
/path-to-route/test-provider/:id/FeatureServer/:layer                        GET, POST
/path-to-route/test-provider/:id/FeatureServer                               GET, POST
/path-to-route/test-provider/rest/services/:id/FeatureServer*                GET, POST
/path-to-route/test-provider/:id/FeatureServer*                              GET, POST
/path-to-route/test-provider/rest/services/:id/MapServer*                    GET, POST
/path-to-route/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully a provider with a routePrefix
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach cache and options object to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional custom cache to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing an upsert method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject cache option missing a retrieve method
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject routePrefix option that is not a string
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully and attach optional "before" and "after" function to model
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "before" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should reject optional "after" function that does not have correct arity
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"options-name" provider routes  Methods
------------------------------  -------
/fake/:id                       GET    


"Geoservices" output routes for the "options-name" provider   Methods  
------------------------------------------------------------  ---------
/options-name/rest/info                                       GET, POST
/options-name/tokens/:method                                  GET, POST
/options-name/tokens                                          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/options-name/rest/services/:id/FeatureServer/layers          GET, POST
/options-name/rest/services/:id/FeatureServer/:layer          GET, POST
/options-name/rest/services/:id/FeatureServer                 GET, POST
/options-name/:id/FeatureServer/:layer/:method                GET, POST
/options-name/:id/FeatureServer/layers                        GET, POST
/options-name/:id/FeatureServer/:layer                        GET, POST
/options-name/:id/FeatureServer                               GET, POST
/options-name/rest/services/:id/FeatureServer*                GET, POST
/options-name/:id/FeatureServer*                              GET, POST
/options-name/rest/services/:id/MapServer*                    GET, POST
/options-name/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should successfully use options "name" in route
    can register a provider and apply a route prefix to all routes
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed custom route
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/api/test/fake/:id               GET    


"Geoservices" output routes for the "test-provider" provider            Methods  
----------------------------------------------------------------------  ---------
/api/test/test-provider/rest/info                                       GET, POST
/api/test/test-provider/tokens/:method                                  GET, POST
/api/test/test-provider/tokens                                          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer                 GET, POST
/api/test/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/api/test/test-provider/:id/FeatureServer/layers                        GET, POST
/api/test/test-provider/:id/FeatureServer/:layer                        GET, POST
/api/test/test-provider/:id/FeatureServer                               GET, POST
/api/test/test-provider/rest/services/:id/FeatureServer*                GET, POST
/api/test/test-provider/:id/FeatureServer*                              GET, POST
/api/test/test-provider/rest/services/:id/MapServer*                    GET, POST
/api/test/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should not return 404 for prefixed plugin route

  Tests for registering auth plugin
    can register an auth plugin
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully
    can register an auth plugin and selectively apply methods to a provider
{"level":"info","message":"registered output:"}
{"level":"info","message":"registered filesystem:"}

"datasets" provider routes  Methods
--------------------------  -------
/datasets/:id               GET    
/datasets/:id               PUT    
/datasets/:id               DELETE 
/datasets/:id/metadata      GET    
/datasets/:id/metadata      PUT    
/datasets/:id/metadata      DELETE 


"Geoservices" output routes for the "datasets" provider   Methods  
--------------------------------------------------------  ---------
/datasets/rest/info                                       GET, POST
/datasets/tokens/:method                                  GET, POST
/datasets/tokens                                          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/datasets/rest/services/:id/FeatureServer/layers          GET, POST
/datasets/rest/services/:id/FeatureServer/:layer          GET, POST
/datasets/rest/services/:id/FeatureServer                 GET, POST
/datasets/:id/FeatureServer/:layer/:method                GET, POST
/datasets/:id/FeatureServer/layers                        GET, POST
/datasets/:id/FeatureServer/:layer                        GET, POST
/datasets/:id/FeatureServer                               GET, POST
/datasets/rest/services/:id/FeatureServer*                GET, POST
/datasets/:id/FeatureServer*                              GET, POST
/datasets/rest/services/:id/MapServer*                    GET, POST
/datasets/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}





"Geoservices" output routes for the "test-provider-ii" provider   Methods  
----------------------------------------------------------------  ---------
/test-provider-ii/rest/info                                       GET, POST
/test-provider-ii/tokens/:method                                  GET, POST
/test-provider-ii/tokens                                          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider-ii/rest/services/:id/FeatureServer                 GET, POST
/test-provider-ii/:id/FeatureServer/:layer/:method                GET, POST
/test-provider-ii/:id/FeatureServer/layers                        GET, POST
/test-provider-ii/:id/FeatureServer/:layer                        GET, POST
/test-provider-ii/:id/FeatureServer                               GET, POST
/test-provider-ii/rest/services/:id/FeatureServer*                GET, POST
/test-provider-ii/:id/FeatureServer*                              GET, POST
/test-provider-ii/rest/services/:id/MapServer*                    GET, POST
/test-provider-ii/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"Geoservices" output routes for the "test-provider" provider   Methods  
-------------------------------------------------------------  ---------
/test-provider/rest/info                                       GET, POST
/test-provider/tokens/:method                                  GET, POST
/test-provider/tokens                                          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer/:method  GET, POST
/test-provider/rest/services/:id/FeatureServer/layers          GET, POST
/test-provider/rest/services/:id/FeatureServer/:layer          GET, POST
/test-provider/rest/services/:id/FeatureServer                 GET, POST
/test-provider/:id/FeatureServer/:layer/:method                GET, POST
/test-provider/:id/FeatureServer/layers                        GET, POST
/test-provider/:id/FeatureServer/:layer                        GET, POST
/test-provider/:id/FeatureServer                               GET, POST
/test-provider/rest/services/:id/FeatureServer*                GET, POST
/test-provider/:id/FeatureServer*                              GET, POST
/test-provider/rest/services/:id/MapServer*                    GET, POST
/test-provider/:id/MapServer*                                  GET, POST

{"level":"info","message":"registered provider:"}
      ✓ should register successfully

  Tests for registering plugins
    can register a plugin
{"level":"info","message":"registered plugin:"}
      ✓ should register successfully
{"level":"info","message":"registered plugin:"}
      ✓ should override the plugin name
{"level":"info","message":"registered plugin:"}
      ✓ should honor the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should use the pluginName property rather than the legacy plugin_name property
{"level":"info","message":"registered plugin:"}
      ✓ should include plugin dependencies

  Middleware tests
    paramTrim function
      ✓ should trim leading and trail white space from body params
      ✓ should leave non-string type intact
    paramParse function
      ✓ should convert a JSON (escaped) string parameter to a JSON object
      ✓ should convert a JSON string parameter to a JSON object
    paramCoerce function
      ✓ should convert boolean strings to booleans
    copyBodyToQuery middleware
      ✓ should combine query and body, body overrides query, except for token

  Tests for create-controller
    ✓ should extend a controller authored with function syntax
    ✓ should extend a controller authored with class syntax
    ✓ should produce a controller when no base controller is provided
    ✓ should use a default namespace when unnamed constructor functions are used

  Tests for create-model
    model pull method
      ✓ should work in callback form, no upsert to cache
      ✓ should work in callback form, should upsert to cache
    createKey
      ✓ should create cache-key as provider name
      ✓ should create cache-key as provider name and concenated url params
      ✓ should create cache-key from Model defined createKey function
    auth methods
      ✓ should attach auth methods when auth plugin is registered with Koop
    transformation functions
      ✓ before function should modify request object
      ✓ after function should modify request and data object
    fetch layer metadata
      ✓ should throw an error if the getLayer() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getLayer() function if cache misses
      ✓ should use the provided createKey function
    fetch catalog metadata
      ✓ should throw an error if the getCatalog() function is not implemented
      ✓ should try to fetch from cache
      ✓ should call the getCatalog() function is cache misses
      ✓ should use the provided createKey function
    model pullStream method
      ✓ should resolve with result of getStream
      ✓ should call "before" before getStream
      ✓ should reject if the getStream() function is not implemented

  Tests for namespacedRoutePath
    ✓ create route with :host and :id parameter
    ✓ create route with :host parameter and without :id parameter
    ✓ create route without :host parameter
    ✓ create route without :host and :id parameter
    ✓ create route with templated $namespace$ substring
    ✓ create route with templated $namespace$ and $providerParams$ substrings
    ✓ create route without path construction
    ✓ create route with prefix, :host, :id parameters

  Tests for routeJoiner
    ✓ create route with simple fragments
    ✓ create route with complex fragments
    ✓ create route with empty fragments
    ✓ create route with fragments that are "/" 

  Tests for Provider

"test-provider" provider routes  Methods
-------------------------------  -------
/fake/:id                        GET    


"MockOutput" output routes for the "test-provider" provider  Methods  
-----------------------------------------------------------  ---------
/test-provider/:host/:id/koop-output/:layer                  GET, POST

    ✓ should create instance of ProviderRegistration

  Tests for ProviderOutputRoute
    ✓ should create instance of ProviderOutputRoute

  Tests for ProviderRoute
    ✓ should create instance of ProviderRoute


  75 passing (611ms)

************* run test done *************
