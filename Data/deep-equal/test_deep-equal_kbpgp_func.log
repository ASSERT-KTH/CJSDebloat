/data/js-variants/multee
15
kbpgp is testing ./Variants/deep-equal/variant15/deep-equal
/data/js-variants/multee
************* npm unlink module *************

up to date, audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 515ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: cl]KDO}8F6=*_}3[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant14/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 499ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 389ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: bT5q@GxO=!}l8S*[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant13/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 497ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: aDrB1jwl=3|>bN4[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant12/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 501ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: PfXuml<+fp?D$)8[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant11/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 2s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 500ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 395ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: Y?Y.s8Nl;ReAFfW[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant10/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 499ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 400ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: FY(~nb&<V5q-HGU[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant9/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 529ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: JrIGJ4J9M8%sV38[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant8/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 501ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 423ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: ER*)A2Tq&edG`Yh[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant7/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 2s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 535ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 398ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: C(;}?rGxJhp<O&n[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant6/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 499ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 391ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: Wca.*:.2>+WK6oH[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant5/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 506ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 394ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: Pg6m!x2to%(BnJJ[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant4/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 512ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 393ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: I3Mf6?vJ1mT(X8P[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant3/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 2s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 496ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: C^YqHuP@Aw,|+h[[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant2/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 513ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 391ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: cQw#IJ20e~0Y,T@[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./Variants/deep-equal/variant1/deep-equal
/data/js-variants/multee
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 501ms

found 0 vulnerabilities
************* npm unlink globally done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: X-LW$e:4[Ufph`A[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
variantsDepsNum: 10
/data/js-variants/multee
10
kbpgp is testing ./VariantsDeps/deep-equal/variant10/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 3s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 874ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 567ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 3s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: M7[yhJ9n;4.>G36[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant9/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 2s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 737ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 480ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 2s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: HNM</:WgXa:YS0c[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant8/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 503ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 400ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: InVL7+<xPEi!Q0w[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant7/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 2s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 525ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 404ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: b$u(]_9/=G`0)KT[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant6/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 508ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 396ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: O+ha#UL-V9e|y?H[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant5/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 517ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 424ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: O<1U)0(kpIL/Ff}[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant4/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 508ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 392ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: d5Oma7bLx$T/o2d[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant3/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 2s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 500ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 406ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: YFP,^&zDV^+Q1x-[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant2/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 497ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 413ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 2s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: OTD^:i8,W)^C;MA[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
kbpgp is testing ./VariantsDeps/deep-equal/variant1/deep-equal
************* npm unlink module *************

added 7 packages, changed 1 package, and audited 186 packages in 1s

2 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm unlink module done *************
************* npm unlink globally *************

removed 1 package, and audited 1 package in 499ms

found 0 vulnerabilities
************* npm unlink module done *************
************* npm link globally *************

added 1 package, and audited 3 packages in 407ms

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
************* npm link globally done *************
************* npm link module *************

removed 7 packages, changed 1 package, and audited 180 packages in 1s

3 packages are looking for funding
  run `npm fund` for details

5 vulnerabilities (1 moderate, 2 high, 2 critical)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
************* npm link module done *************
************* start run test *************

> kbpgp@2.1.16 test
> make test

node_modules/.bin/iced test/run.iced
[32mâœ” basex.iced: test_base58[39m
[32mâœ” basex.iced: test_base32[39m
[32mâœ” box.iced: box_unbox_1[39m
[32mâœ” box.iced: box_unbox_2[39m
[32mâœ” brainpool256.iced: import_brainpool256_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool256.iced: unlock_private_brainpool256[39m
[32mâœ” brainpool256.iced: decrypt_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_brainpool256[39m
[32mâœ” brainpool256.iced: roundtrip_sig_crypt_brainpool256[39m
[32mâœ” brainpool384.iced: import_brainpool384_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool384.iced: unlock_private_brainpool384[39m
[32mâœ” brainpool384.iced: decrypt_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_brainpool384[39m
[32mâœ” brainpool384.iced: roundtrip_sig_crypt_brainpool384[39m
[32mâœ” brainpool512.iced: import_brainpool512_key_with_private_gen_by_gnupg[39m
[32mâœ” brainpool512.iced: unlock_private_brainpool512[39m
[32mâœ” brainpool512.iced: decrypt_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_brainpool512[39m
[32mâœ” brainpool512.iced: roundtrip_sig_crypt_brainpool512[39m
[32mâœ” buffer_shift_right.iced: test_buffer_shift_right[39m
[32mâœ” buffer_shift_right.iced: test_mpi_from_left_n_bits[39m
[32mâœ” burner.iced: burn_with_hasher[39m
[32mâœ” burner.iced: burn_with_hasher_2[39m
[32mâœ” burner.iced: burner_default_hash[39m
[32mâœ” burner.iced: assert_pgp_hash[39m
[32m  â˜‘ msg 0 checked out![39m
[32m  â˜‘ msg 1 checked out![39m
[32mâœ” bzip2.iced: process[39m
[32mâœ” cast5.iced: rfc_2144_B1[39m
[32mâœ” cast5.iced: cfb[39m
[32mâœ” cfb.iced: nist_sp800_38a__f_3_17[39m
[32mâœ” critical_subpacket.iced: decode[39m
[32mâœ” cv25519.iced: import_private_cv25519_key_from_gpg[39m
[32mâœ” cv25519.iced: decrypt_cv25519_encrypted_msg_from_gpg[39m
[32mâœ” cv25519.iced: roundtrip_cv25519[39m
[32mâœ” cv25519.iced: roundtrip_cv25519_with_sign[39m
[32mâœ” cv25519.iced: decrypt_padded_coord_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_short_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_too_big_2_cv25519[39m
[32mâœ” cv25519.iced: decrypt_coord_byte_size_exact_cv25519[39m
[32mâœ” cv25519.iced: decrypt_verify_gpg2_issued_payload[39m
[32mâœ” cv25519.iced: generate_cv25519[39m
[32mâœ” cv25519.iced: generate_cv25519_and_reimport[39m
[32m  â˜‘ parsed portwood[39m
[32m  â˜‘ parsed edbett[39m
[32m  â˜‘ parsed azet[39m
[32m  â˜‘ parsed bitfolk[39m
[32m  â˜‘ parsed ophelia[39m
[32m  â˜‘ parsed sneak[39m
[32m  â˜‘ parsed elitehaxor[39m
[32m  â˜‘ parsed gmax[39m
[32m  â˜‘ parsed finn[39m
[32m  â˜‘ parsed adam[39m
[32m  â˜‘ parsed ry4an[39m
[32m  â˜‘ parsed asymptotic[39m
[32m  â˜‘ parsed dbellizzi[39m
[32m  â˜‘ parsed fincham[39m
[32m  â˜‘ parsed thierry[39m
[32m  â˜‘ parsed babazka[39m
[32m  â˜‘ parsed zyphlar[39m
[32m  â˜‘ parsed grantolson[39m
[32m  â˜‘ parsed vanity[39m
[32mâœ” decode_pgp.iced: public_keys_advanced[39m
[32m  â˜‘ parsed weston[39m
[32mâœ” decode_pgp.iced: public_keys_now[39m
[32m  â˜‘ parsed[39m
[32m  â˜‘ signatures verified[39m
[32m  â˜‘ opened key 0[39m
[32m  â˜‘ sanity checked key 0[39m
[32m  â˜‘ opened key 3[39m
[32m  â˜‘ sanity checked key 3[39m
[32mâœ” decode_pgp.iced: decode_pgp_secret_key_1[39m
[32mâœ” decode_pgp.iced: dearmor[39m
[32mâœ” decode_pgp.iced: public_key_round_trip[39m
[32mâœ” decode_pgp.iced: public_key_with_multiple_signers[39m
[32mâœ” decode_pgp.iced: public_key_with_pic[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid[39m
[32mâœ” decode_pgp.iced: public_key_expired_subkey[39m
[32mâœ” decode_pgp.iced: public_key_expired_both[39m
[32mâœ” decode_pgp.iced: public_key_expired_uid_bypass[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_pgp[39m
[32mâœ” decode_pgp.iced: test_ukm_decode_sig_nacl[39m
[32mâœ” decoder.iced: test_freestanding[39m
[32mâœ” decoder.iced: test_context_1[39m
[32mâœ” decoder.iced: test_context_2[39m
[32mâœ” decoder.iced: test_context_3[39m
[32mâœ” decoder.iced: failed_checksum_1[39m
[32mâœ” decoder.iced: failed_checksum_2[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ parsed incoming message[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported verification key[39m
[32m  â˜‘ decrypted the session key[39m
[32m  â˜‘ decrypted the message using the session key[39m
[32m  â˜‘ parsed the decrypted message body[39m
[32m  â˜‘ inflated the compressed message body[39m
[32m  â˜‘ parsed the inflated message body[39m
[32m  â˜‘ signature verified properly[39m
[32mâœ” decrypt_verify_msg.iced: run_test_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_0[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_1[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_2[39m
[32mâœ” decrypt_verify_msg.iced: process_msg_3[39m
[32mâœ” decrypt_verify_msg.iced: process_corrupted_armor[39m
[32mâœ” dsa.iced: verify_sigs[39m
[32mâœ” dsa.iced: dsa_round_trip[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p521_test[39m
[32m  â˜‘ add S+T[39m
[32m  â˜‘ add T+S[39m
[32m  â˜‘ subtract S-T[39m
[32m  â˜‘ scalar multiply 2S[39m
[32m  â˜‘ scalar multiply dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p384_test[39m
[32m  â˜‘ addition S+T[39m
[32m  â˜‘ subtraction S-T[39m
[32m  â˜‘ twice 2S[39m
[32m  â˜‘ multiplication dS[39m
[32m  â˜‘ multiply/add dS + eT[39m
[32mâœ” ecc1.iced: p256_test[39m
[32mâœ” ecc2.iced: import_ecc_key_with_private_gen_by_google_e2e_1[39m
[32mâœ” ecc2.iced: unlock_private[39m
[32mâœ” ecc2.iced: decrypt_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_ecdh_1[39m
[32mâœ” ecc2.iced: roundtrip_sig_crypt_1[39m
[32mâœ” ecc2.iced: generate_and_roundtrip[39m
[32mâœ” ecc2.iced: generate_export_import[39m
[32mâœ” ecc2.iced: generate_default_subkeys[39m
[32mâœ” ecc3.iced: generate_p521[39m
[32mâœ” ecc3.iced: export_key[39m
[32mâœ” ecc3.iced: import_key[39m
[32mâœ” eddsa.iced: import_key_1[39m
[32mâœ” eddsa.iced: verify_sigs[39m
[32mâœ” eddsa.iced: generate_key_and_sign[39m
[32mâœ” eddsa.iced: sign_and_exchange[39m
[32mâœ” eddsa.iced: invalid_signed_key[39m
[32mâœ” eddsa.iced: invalid_signature_msg[39m
[32mâœ” eddsa.iced: invalid_userid_sig[39m
[32mâœ” eddsa.iced: malformed_signature_test[39m
[32mâœ” elgamal_v3.iced: import_key[39m
[32mâœ” elgamal_v3.iced: encrypt_with_key[39m
[32m  â˜‘ key import[39m
[32m  â˜‘ key unlock[39m
[32m  â˜‘ decrypted msg 0[39m
[32m  â˜‘ decrypted/verified msg 0[39m
[32mâœ” elgamal.iced: decrypt_msgs[39m
[32mâœ” elgamal.iced: elgamal_round_trip[39m
[32mâœ” errors.iced: test_wrong_key[39m
[32mâœ” fermat2.iced: test_small_primes[39m
[32mâœ” fermat2.iced: test_small_composites[39m
[32mâœ” fermat2.iced: test_carmichael_numbers[39m
[32mâœ” fermat2.iced: test_larger_primes[39m
[32mâœ” fermat2.iced: test_larger_composites[39m
[32mâœ” fp.iced: test_mk_fp[39m
[32mâœ” get_primary_uid.iced: test_gmax[39m
[32mâœ” gh_issue_73.iced: github_issue_73[39m
[32mâœ” google_end_to_end.iced: test_decrypt[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ Encrypted a random payload[39m
[32mâœ” hide.iced: test_hide_rsa[39m
[32mâœ” hide.iced: test_hide_elgamal[39m
[32mâœ” kbbox.iced: box_unbox_with_nonce[39m
[32mâœ” key_expirations.iced: read_max_key[39m
[32mâœ” key_expirations.iced: read_jack_key[39m
[32mâœ” key_expirations.iced: read_rillian_key[39m
[32mâœ” key_expirations.iced: read_michel_slm_key[39m
[32mâœ” key_expirations.iced: read_kourier_key[39m
[32mâœ” keyfetcher.iced: verify_revoked_with_keyfetcher[39m
[32mâœ” keyfetcher.iced: verify_keyfetcher[39m
[32mâœ” keymanager.iced: step1_generate[39m
[32m  â˜‘ new OpenPGP password: tzJDE[FL1?X=CM[39m
[32mâœ” keymanager.iced: step2_salt_triplesec[39m
[32m  â˜‘ Generated new PGP Private key: -----BEGIN PGP PRIVATE KEY BLOCK----- Version: Keybase OpenPGP v2.1.16[39m
[32mâœ” keymanager.iced: step3_export_pgp_private[39m
[32mâœ” keymanager.iced: step4_import_pgp_public[39m
[32mâœ” keymanager.iced: step4a_test_failed_private_merge[39m
[32mâœ” keymanager.iced: step5_merge_pgp_private[39m
[32mâœ” keymanager.iced: step6_export_p3skb_private[39m
[32mâœ” keymanager.iced: pgp_full_hash[39m
[32mâœ” keymanager.iced: pgp_full_hash_nacl[39m
[32mâœ” keymanager.iced: change_key_and_reexport[39m
[32mâœ” keymanager.iced: generate_key_default_hash[39m
[32mâœ” keymanager.iced: sign_key_with_hasher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_zaher[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_max[39m
[32mâœ” merge_pgp_public.iced: import_and_merge_kian[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes[39m
[32mâœ” merge_pgp_public.iced: check_merge_omits_revokes_in_reverse[39m
[32mâœ” merge_pgp_public.iced: check_merge_everything_includes_userids[39m
[32mâœ” miller_rabin.iced: test_primes[39m
[32mâœ” miller_rabin.iced: test_composites[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32m  â˜‘ imported decryption key[39m
[32m  â˜‘ unlocked decryption key[39m
[32mâœ” msg_roundtrip.iced: clear_sign_1[39m
[32mâœ” msg_roundtrip.iced: clear_sign_2[39m
[32mâœ” msg_roundtrip.iced: clear_sign_3[39m
[32mâœ” msg_roundtrip.iced: clear_sign_4[39m
[32mâœ” msg_roundtrip.iced: clear_sign_5[39m
[32mâœ” msg_roundtrip.iced: clear_sign_6[39m
[32mâœ” msg_roundtrip.iced: clear_sign_7[39m
[32mâœ” msg_roundtrip.iced: clear_sign_8[39m
[32mâœ” msg_roundtrip.iced: detached_sign_wholesale[39m
[32mâœ” msg_roundtrip.iced: detached_sign_streaming[39m
[32mâœ” msg_roundtrip.iced: encrypt[39m
[32mâœ” msg_roundtrip.iced: sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign[39m
[32mâœ” msg_roundtrip.iced: encrypt_and_sign_armor[39m
[32m  â˜‘ loaded key huey[39m
[32m  â˜‘ loaded key louie[39m
[32m  â˜‘ loaded key dewey[39m
[32m  â˜‘ loaded key scrooge[39m
[32m  â˜‘ unlocked Scrooge's key[39m
[32mâœ” multiples.iced: load_key_managers_1[39m
[32mâœ” multiples.iced: multi_encrypt[39m
[32m  â˜‘ unlocked keymanager for huey for decryption[39m
[32m  â˜‘ decrypted for huey[39m
[32m  â˜‘ unlocked keymanager for louie for decryption[39m
[32m  â˜‘ decrypted for louie[39m
[32m  â˜‘ unlocked keymanager for dewey for decryption[39m
[32m  â˜‘ decrypted for dewey[39m
[32m  â˜‘ decrypted for scrooge[39m
[32mâœ” multiples.iced: decrypt_all[39m
[32mâœ” nacl_export.iced: enc_generate_keys[39m
[32mâœ” nacl_export.iced: encrypt[39m
[32mâœ” nacl_export.iced: decrypt_1[39m
[32mâœ” nacl_export.iced: enc_export_private_key[39m
[32mâœ” nacl_export.iced: enc_import_private_key[39m
[32mâœ” nacl_export.iced: decrypt_2[39m
[32mâœ” nacl_export.iced: sig_generate_keys[39m
[32mâœ” nacl_export.iced: sign_1[39m
[32mâœ” nacl_export.iced: verify_1[39m
[32mâœ” nacl_export.iced: sig_export_private_key[39m
[32mâœ” nacl_export.iced: sig_import_private_key[39m
[32mâœ” nacl_export.iced: sign_2[39m
[32mâœ” nacl_export.iced: verify_2[39m
[32mâœ” nacl1.iced: gen_eddsa[39m
[32mâœ” nacl1.iced: sign_attached_1[39m
[32mâœ” nacl1.iced: verify_attached_1[39m
[32mâœ” nacl1.iced: sign_detached_1[39m
[32mâœ” nacl1.iced: verify_dettached_1[39m
[32mâœ” nacl1.iced: box1[39m
[32mâœ” nacl1.iced: unbox1[39m
[32mâœ” nacl1.iced: exim1[39m
[32mâœ” nacl1.iced: bad_hex[39m
[32mâœ” nacl1.iced: sigeng1[39m
[32mâœ” nacl1.iced: sign_attached_2[39m
[32mâœ” nacl1.iced: verify_attached_2[39m
[32mâœ” nacl1.iced: sign_attached_3[39m
[32mâœ” nacl1.iced: verify_attached_3[39m
[32mâœ” nacl2.iced: gen_eddsa[39m
[32mâœ” nacl2.iced: encrypt_1[39m
[32mâœ” nacl2.iced: verify_attached_1[39m
[32mâœ” nacl2.iced: box_1[39m
[32mâœ” nacl2.iced: km[39m
[32mâœ” nacl2.iced: unbox_1[39m
[32mâœ” nacl2.iced: box_2[39m
[32mâœ” nacl2.iced: unbox_2[39m
[32mâœ” nacl2.iced: box_3[39m
[32mâœ” nacl2.iced: unbox_3[39m
[32mâœ” nacl2.iced: unbox_split_seed_1[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_019[39m
[32m  â˜‘ success 1[39m
[32m  â˜‘ fail 1[39m
[32m  â˜‘ fail 2[39m
[32m  â˜‘ fail 3[39m
[32m  â˜‘ fail 4[39m
[32m  â˜‘ success 2[39m
[32m  â˜‘ fail 5[39m
[32m  â˜‘ fail 6[39m
[32m  â˜‘ success 3[39m
[32m  â˜‘ fail Hash:SHA512[39m
[32m  â˜‘ fail <script>: SHA256[39m
[32m  â˜‘ fail Hash SHA512[39m
[32mâœ” openpgp_js_cure53_audit.iced: op_01_009[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired[39m
[32mâœ” p3skb_r.iced: import_and_unlock_expired_no_check_keys[39m
[32mâœ” p3skb.iced: gen_new_key[39m
[32mâœ” p3skb.iced: lock_p3skb[39m
[32mâœ” p3skb.iced: unlock_p3skb_bad_ppgen[39m
[32mâœ” p3skb.iced: unlock_p3skb[39m
[32mâœ” p521.iced: import_private_nistp521_key_from_gpg[39m
[32mâœ” p521.iced: roundtrip_nistp521[39m
[32mâœ” p521.iced: decrypt_padded_v_521[39m
[32mâœ” p521.iced: decrypt_coord_byte_size_exact_521[39m
[32m  â˜‘ dens[39m
[32m  â˜‘ loaded key[39m
[32mâœ” problem_sigs.iced: test_problem_sigs[39m
[32mâœ” revoked_subkey.iced: import_public[39m
[32m  â˜‘ about to s2k with very big parameters...[39m
[32mâœ” revoked_subkey.iced: import_private[39m
[32mâœ” revoked_subkey.iced: encrypt[39m
[32mâœ” revoked_subkey.iced: decrypt[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle[39m
[32mâœ” revokes.iced: fetch_subkey_from_revoked_bundle_with_keyring[39m
[32mâœ” revokes.iced: revoked_identity[39m
[32mâœ” revokes.iced: designated_revocation[39m
[32mâœ” revokes.iced: designated_revocation2[39m
[32mâœ” revokes.iced: test_designated_bad_sig[39m
[32mâœ” revokes.iced: test_designated_bad_revoker[39m
[32mâœ” revokes.iced: key_without_unverified_revocations[39m
[32mâœ” revokes.iced: test_misplaced_revocation[39m
[32m  â˜‘ test s_4_1[39m
[32m  â˜‘ test s_4_2[39m
[32m  â˜‘ test s_4_3[39m
[32m  â˜‘ test s_4_4[39m
[32m  â˜‘ test s_4_5[39m
[32m  â˜‘ test s_4_6[39m
[32mâœ” rfc3394.iced: run_test_vectors[39m
[32mâœ” rsa_8192.iced: import_key[39m
[32mâœ” rsa_8192.iced: encrypt[39m
[32mâœ” rsa_8192.iced: decrypt[39m
[32m  â˜‘ generated 512 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_512[39m
[32m  â˜‘ generated 1024 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32m  â˜‘ did encrypt/decrypt #8[39m
[32m  â˜‘ did encrypt/decrypt #9[39m
[32mâœ” rsa.iced: run_test_1024[39m
[32m  â˜‘ generated 2048 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32m  â˜‘ did encrypt/decrypt #6[39m
[32m  â˜‘ did encrypt/decrypt #7[39m
[32mâœ” rsa.iced: run_test_2048[39m
[32m  â˜‘ generated 3072 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32m  â˜‘ did encrypt/decrypt #5[39m
[32mâœ” rsa.iced: run_test_3072[39m
[32m  â˜‘ generated 4096 bit key![39m
[32m  â˜‘ did encrypt/decrypt #0[39m
[32m  â˜‘ did encrypt/decrypt #1[39m
[32m  â˜‘ did encrypt/decrypt #2[39m
[32m  â˜‘ did encrypt/decrypt #3[39m
[32m  â˜‘ did encrypt/decrypt #4[39m
[32mâœ” rsa.iced: run_test_4096[39m
[32mâœ” secret_subkeys_incomplete.iced: load_pub[39m
[32mâœ” secret_subkeys_incomplete.iced: load_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_priv[39m
[32mâœ” secret_subkeys_incomplete.iced: merge[39m
[32mâœ” secret_subkeys_incomplete.iced: unlock_merged[39m
[32mâœ” secret_subkeys_incomplete.iced: sign[39m
[32mâœ” secret_subkeys_incomplete.iced: encrypt[39m
[32mâœ” secret_subkeys_incomplete.iced: decrypt[39m
[32mâœ” secret_subkeys.iced: load_pub[39m
[32mâœ” secret_subkeys.iced: load_priv[39m
[32mâœ” secret_subkeys.iced: unlock_priv[39m
[32mâœ” secret_subkeys.iced: merge[39m
[32mâœ” secret_subkeys.iced: unlock_merged[39m
[32mâœ” secret_subkeys.iced: sign[39m
[32mâœ” secret_subkeys.iced: verify[39m
[32mâœ” secret_subkeys.iced: encrypt_and_sign[39m
[32mâœ” secret_subkeys.iced: decrypt_and_verify[39m
[32mâœ” secret_subkeys.iced: encrypt_private_to_server[39m
[32m  â˜‘ unlocked[39m
[32m  â˜‘ decryption still worked[39m
[32mâœ” secret_subkeys.iced: decrypt_private_from_sever[39m
[32mâœ” sig_gocli.iced: verify[39m
[32mâœ” sig_v3.iced: verify[39m
[32m  â˜‘ SHA384[39m
[32m  â˜‘ SHA224[39m
[32m  â˜‘ SHA256[39m
[32m  â˜‘ SHA1[39m
[32m  â˜‘ SHA512[39m
[32mâœ” sig_various_hashes.iced: verify[39m
[32mâœ” sigeng.iced: generate[39m
[32mâœ” sigeng.iced: box[39m
[32mâœ” sigeng.iced: unbox[39m
[32mâœ” sigeng.iced: pgp_get_unverified_payload[39m
[32mâœ” sigeng.iced: kb_generate[39m
[32mâœ” sigeng.iced: kb_box[39m
[32mâœ” sigeng.iced: kb_unbox[39m
[32mâœ” sigeng.iced: kb_get_unverified_payload[39m
[32mâœ” sigeng.iced: pgp_unbox_bcrypt[39m
[32mâœ” sigeng.iced: sigeng_verify_encrypt_msg[39m
[32mâœ” sigeng.iced: kb_generate_with_prefix[39m
[32mâœ” sigeng.iced: assert_pgp_hash[39m
[32mâœ” subkey_expiration.iced: key_1[39m
[32mâœ” subkey_multiple_sigs.iced: load_multi_binding_key_and_verify[39m
[32mâœ” subkey_multiple_sigs.iced: load_with_only_right_sig_then_verify[39m
[32mâœ” subkey_multiple_sigs.iced: do_not_merge_crosscertify[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_without_cross_sig[39m
[32mâœ” subkey_no_cross_sig.iced: test_subkey_with_cross_sig[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_did_not_expire[39m
[32mâœ” subkey_preference.iced: test_multiple_encryption_subkeys_winner_latest[39m
[32m  â˜‘ loaded key[39m
[32mâœ” subpacket33.iced: test_subpacket33[39m
[32mâœ” ukm.iced: test_kb[39m
[32mâœ” ukm.iced: test_pgp[39m
[32mâœ” unbox_cant_verify.iced: run[39m
[32mâœ” userid.iced: test_parse[39m
[32mâœ” userid.iced: test_make[39m
[32m  â˜‘ Sig 0 checked out[39m
[32m  â˜‘ Sig 1 checked out[39m
[32m  â˜‘ Sig 2 checked out[39m
[32m  â˜‘ Sig 3 checked out[39m
[32m  â˜‘ Sig 4 checked out[39m
[32m  â˜‘ Sig 5 checked out[39m
[32m  â˜‘ Sig 6 checked out[39m
[32m  â˜‘ Sig 7 checked out[39m
[32m  â˜‘ Sig 8 checked out[39m
[32mâœ” verify_clearsign_sigs.iced: verify_good_sigs[39m
[32m  â˜‘ Sig 0 failed[39m
[32m  â˜‘ Sig 1 failed[39m
[32m  â˜‘ Sig 2 failed[39m
[32m  â˜‘ Sig 3 failed[39m
[32m  â˜‘ Sig 4 failed[39m
[32m  â˜‘ Sig 5 failed[39m
[32mâœ” verify_clearsign_sigs.iced: reject_bad_sigs[39m
[32mâœ” verify_clearsign_sigs.iced: reject_expired_keys[39m
[32m  â˜‘ Sig toonces / good checked out[39m
[32m  â˜‘ Sig krohn / good checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_all_at_once[39m
[32m  â˜‘ Sig toonces checked out[39m
[32m  â˜‘ Sig krohn checked out[39m
[32mâœ” verify_detached_sigs.iced: verify_good_sigs_streaming[39m
[32m  â˜‘ Sig toonces failed[39m
[32m  â˜‘ Sig krohn failed[39m
[32mâœ” verify_detached_sigs.iced: nix_bad_sigs_streaming[39m
[32m  â˜‘ Sig checked out[39m
[32m  â˜‘ Right error message beamed back from 2099: PGP key c984c3f57f5725fb8d3f8ec2f315783b68938a90 expired at 1538854906 but we checked for time 4090003200[39m
[32mâœ” verify_detached_sigs.iced: verify_expired_detached[39m
[32m  â˜‘ loaded key[39m
[32mâœ” verify_sigs.iced: verify_peter_bance[39m
[32mâœ” zip.iced: unzip[39m
[1m[32mTests: 284/284 passed[39m[22m
Please visit in your favorite browser --> file:///data/js-variants/multee/Clients/deep-equal/kbpgp/test/browser/index.html
************* run test done *************
