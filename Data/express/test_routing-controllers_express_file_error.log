17
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (36 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided (1 ms)
      ✓ handle - null provided (11 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (19 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (6 ms)
      ✓ route should work with string regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)
      ✓ should respond with 204 No Content when null returned in action (16 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (21 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (5 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (3 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (2 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (1 ms)
      ✓ should return result from a promise (505 ms)
      ✓ should respond with 500 if promise failed (504 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1003 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (29 ms)
    ✓ @Session should return a value from session (8 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (12 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (5 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (3 ms)
    ✓ @QueryParam should give a proper values from request query parameters (2 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (3 ms)
    ✓ @HeaderParam should fail with missing required params (3 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (4 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (13 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (6 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (5 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (18 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (12 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (63 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (13 ms)
      should pass the valid param after validation
        ✓ succeed (4 ms)
        ✓ should contain param name on validation failed (16 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (75 ms)
      ✓ with roles (14 ms)
      ✓ async (24 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (3 ms)
      ✓ with roles (4 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (38 ms)
      ✓ with roles (5 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (5 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (4 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (18 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (27 ms)
      ✓ should fail (19 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (25 ms)
      ✓ should return custom code when @OnNull (31 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (8 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (45 ms)
    should apply global options
      ✓ technical wrapper (4 ms)
    should apply local options
      ✓ technical wrapper (4 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (64 ms)
      ✓ get should respond with proper status code, headers and body content (7 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (7 ms)
      ✓ wrong route should respond with 404 error (7 ms)
      ✓ wrong route should respond with 404 error (5 ms)
      ✓ wrong route should respond with 404 error (5 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (64 ms)
    using custom container should be possible
      ✓ custom container (6 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (8 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (8 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (85 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (3 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (18 ms)
    ✓ should override controller options with action transformRequest option (5 ms)
    ✓ should override controller options with action transformResponse option (2 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (8 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (3 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (3 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (3 ms)
      ✓ should handle errors in custom middlewares (20 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (7 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (3 ms)
      ✓ should return 400 from required paramOptions (15 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (3 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (18 ms)
      ✓ should call global error handler middleware (5 ms)
      ✓ should call error handler middleware if used (3 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (3 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (13 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (26 ms)
    ✓ should build meta if the only derivative controller is given (4 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (2 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (23 ms)
      ✓ when controller transform is enabled (4 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (8 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (2 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (26 ms)
      ✓ using override (3 ms)
      ✓ using original (4 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (36 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (22 ms)
      ✓ should send raw binary data from Buffer (2 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (22 ms)
      ✓ should call global error handler middleware (20 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        13.036 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    ✕ encountered a declaration exception (11 ms)

  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
    controller methods
      ✕ get should respond with proper status code, headers and body content (12 ms)
      ✕ post respond with proper status code, headers and body content (2 ms)
      ✕ put respond with proper status code, headers and body content (2 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (2 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (1 ms)
      ✕ should respond with 204 No Content when null returned in action (1 ms)
      ✕ should respond with 404 Not Found text when undefined returned in action (2 ms)
      ✕ should respond with 404 Not Found JSON when undefined returned in action (1 ms)
      ✕ should respond with 200 and text/html even in json controller's method (1 ms)
      ✕ should respond with 200 and text/plain even in json controller's method (1 ms)
      ✕ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (1 ms)
      ✕ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (1 ms)

  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✕ get should respond with proper status code, headers and body content (4 ms)
      ✕ post respond with proper status code, headers and body content (2 ms)
      ✕ put respond with proper status code, headers and body content (1 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (1 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (1 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (1 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (2 ms)
      ✕ should return result from a promise (1 ms)
      ✕ should respond with 500 if promise failed (1 ms)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
    interceptor
      ✕ custom interceptor function should replace returned content (5 ms)
      ✕ custom interceptor class should replace returned content (1 ms)
      ✕ custom interceptor class used on the whole controller should replace returned content (1 ms)
      ✕ global interceptor class should replace returned content (1 ms)
      ✕ interceptors should support promises (1 ms)

  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/get-intrinsic/index.js:201:20)
      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/side-channel/index.js:3:20)

FAIL test/functional/container.spec.ts
    using typedi container should be possible
      ✕ typedi container (42 ms)
    using custom container should be possible
      ✕ custom container (4 ms)
    using custom container with fallback should be possible
      ✕ custom container with fallback (5 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✕ custom container with fallback and fallback on throw error (6 ms)

  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✕ without roles (33 ms)
      ✕ with roles (2 ms)
      ✕ async (2 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
      ✕ async (2 ms)
    Authorized Decorators Http Status Code
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
    Authorization checker allows to throw (async)
      ✕ custom errors (2 ms)
    Authorization checker allows to throw (sync)
      ✕ custom errors (2 ms)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (25 ms)
    ✓ should build meta if the only derivative controller is given (1 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

FAIL test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✕ should load all controllers (19 ms)
    loading all express middlewares and error handlers from the given directories
      ✕ should succeed (1 ms)
      ✕ should fail (2 ms)

  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✕ should return httpCode set by @HttpCode decorator (18 ms)
      ✕ should return custom code when @OnNull (1 ms)
      ✕ should return custom error message and code when @OnUndefined is used with Error class (1 ms)
      ✕ should return custom code when @OnUndefined (2 ms)
      ✕ should return content-type in the response when @ContentType is used (2 ms)
      ✕ should return content-type in the response when @ContentType is used (1 ms)
      ✕ should return response with custom headers when @Header is used (1 ms)
      ✕ should relocate to new location when @Location is used (1 ms)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
    controller options
      ✕ controller transform is enabled by default (21 ms)
      ✕ when controller transform is enabled (3 ms)
      ✕ when controller transform is disabled (3 ms)

  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
    no options
      ✕ should not use any options if not set (48 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✕ succeed (2 ms)
      should pass the valid param after validation
        ✕ succeed (2 ms)
        ✕ should contain param name on validation failed (2 ms)
    local options
      ✕ should apply local options (2 ms)

  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✕ get should respond with proper status code, headers and body content (51 ms)
      ✕ get should respond with proper status code, headers and body content (11 ms)
      ✕ get should respond with proper status code, headers and body content - 2nd pass (12 ms)
      ✕ wrong route should respond with 404 error (4 ms)
      ✕ wrong route should respond with 404 error (12 ms)
      ✕ wrong route should respond with 404 error (3 ms)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
    express error handling
      ✕ should not call global error handler middleware if there was no errors (17 ms)
      ✕ should call global error handler middleware (3 ms)
      ✕ should call global error handler middleware (2 ms)
      ✕ should call error handler middleware if used (1 ms)
      ✕ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✕ should process JsonErrors by their toJSON method if it exists (1 ms)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✕ useClassTransformer by default must be set to true (48 ms)
      when useClassTransformer is set to true
        ✕ useClassTransformer is enabled (2 ms)
      when useClassTransformer is set to false
        ✕ useClassTransformer is disabled (2 ms)
      when routePrefix is used all controller routes should be appended by it
        ✕ routePrefix is enabled (2 ms)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✕ technical wrapper (16 ms)
    should apply global options
      ✕ technical wrapper (2 ms)
    should apply local options
      ✕ technical wrapper (1 ms)

  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
    express middlewares
      ✕ should call a global middlewares (15 ms)
      ✕ should use a custom middleware when @UseBefore or @UseAfter is used (1 ms)
      ✕ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✕ should call middleware and call it after controller action when @UseAfter is used (1 ms)
      ✕ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (1 ms)
      ✕ should handle errors in custom middlewares (1 ms)

  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
    ✕ should use controller options when action transform options are not set (17 ms)
    ✕ should override controller options with action transformRequest option (1 ms)
    ✕ should override controller options with action transformResponse option (2 ms)

  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
    defaults
      ✕ should return undefinedResultCode from defaults config for void function (5 ms)
      ✕ should return undefinedResultCode from defaults config for promise void function (1 ms)
      ✕ should return 400 from required paramOptions (2 ms)
      ✕ should return nullResultCode from defaults config (1 ms)
      ✕ should return status code from OnUndefined annotation (1 ms)
      ✕ should mark arg optional from QueryParam annotation (16 ms)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✕ should not call global error handler middleware if there was no errors (5 ms)
      ✕ should call global error handler middleware (4 ms)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/get-intrinsic/index.js:201:20)
      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/side-channel/index.js:3:20)

FAIL test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✕ should call global error handler middleware with CustomError (7 ms)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✕ using template (19 ms)
      ✕ using override (1 ms)
      ✕ using original (2 ms)

  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✕ should call middlewares in order defined by items order (5 ms)
    specified by priority option
      ✕ should call middlewares in order defined by priority parameter of decorator (1 ms)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
    special result value treatment
      ✕ should pipe stream to response (5 ms)
      ✕ should send raw binary data from Buffer (1 ms)
      ✕ should send raw binary data from UIntArray (2 ms)

  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (2 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/get-intrinsic/index.js:201:20)
      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/side-channel/index.js:3:20)

FAIL test/functional/container.spec.ts
  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/get-intrinsic/index.js:201:20)
      at Object.<anonymous> (../../../Variants/express/variant16/express/node_modules/side-channel/index.js:3:20)

FAIL test/functional/express-global-before-error-handling.spec.ts
  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/redirect-decorator.spec.ts
  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)


Test Suites: 24 failed, 2 passed, 26 total
Tests:       121 failed, 6 passed, 127 total
Snapshots:   0 total
Time:        8.982 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    ✕ encountered a declaration exception (11 ms)

  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
    controller methods
      ✕ get should respond with proper status code, headers and body content (12 ms)
      ✕ post respond with proper status code, headers and body content (3 ms)
      ✕ put respond with proper status code, headers and body content (2 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (2 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (1 ms)
      ✕ should respond with 204 No Content when null returned in action (1 ms)
      ✕ should respond with 404 Not Found text when undefined returned in action (2 ms)
      ✕ should respond with 404 Not Found JSON when undefined returned in action (1 ms)
      ✕ should respond with 200 and text/html even in json controller's method (1 ms)
      ✕ should respond with 200 and text/plain even in json controller's method (1 ms)
      ✕ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (1 ms)
      ✕ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (1 ms)

  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✕ get should respond with proper status code, headers and body content (7 ms)
      ✕ post respond with proper status code, headers and body content (2 ms)
      ✕ put respond with proper status code, headers and body content (3 ms)
      ✕ patch respond with proper status code, headers and body content (2 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (2 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✕ route should work with parameter (2 ms)
      ✕ route should work with regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (3 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (2 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (2 ms)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
    express error handling
      ✕ should not call global error handler middleware if there was no errors (4 ms)
      ✕ should call global error handler middleware (3 ms)
      ✕ should call global error handler middleware (2 ms)
      ✕ should call error handler middleware if used (1 ms)
      ✕ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✕ should process JsonErrors by their toJSON method if it exists (1 ms)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✕ get should respond with proper status code, headers and body content (37 ms)
      ✕ get should respond with proper status code, headers and body content (3 ms)
      ✕ get should respond with proper status code, headers and body content - 2nd pass (1 ms)
      ✕ wrong route should respond with 404 error (2 ms)
      ✕ wrong route should respond with 404 error (2 ms)
      ✕ wrong route should respond with 404 error (2 ms)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✕ without roles (33 ms)
      ✕ with roles (2 ms)
      ✕ async (2 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
      ✕ async (1 ms)
    Authorized Decorators Http Status Code
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
    Authorization checker allows to throw (async)
      ✕ custom errors (2 ms)
    Authorization checker allows to throw (sync)
      ✕ custom errors (2 ms)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
    using typedi container should be possible
      ✕ typedi container (54 ms)
    using custom container should be possible
      ✕ custom container (3 ms)
    using custom container with fallback should be possible
      ✕ custom container with fallback (3 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✕ custom container with fallback and fallback on throw error (4 ms)

  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
    interceptor
      ✕ custom interceptor function should replace returned content (19 ms)
      ✕ custom interceptor class should replace returned content (1 ms)
      ✕ custom interceptor class used on the whole controller should replace returned content (1 ms)
      ✕ global interceptor class should replace returned content (1 ms)
      ✕ interceptors should support promises (2 ms)

  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✕ should return httpCode set by @HttpCode decorator (17 ms)
      ✕ should return custom code when @OnNull (2 ms)
      ✕ should return custom error message and code when @OnUndefined is used with Error class (1 ms)
      ✕ should return custom code when @OnUndefined (1 ms)
      ✕ should return content-type in the response when @ContentType is used (1 ms)
      ✕ should return content-type in the response when @ContentType is used (1 ms)
      ✕ should return response with custom headers when @Header is used (1 ms)
      ✕ should relocate to new location when @Location is used (1 ms)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
    no options
      ✕ should not use any options if not set (48 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✕ succeed (2 ms)
      should pass the valid param after validation
        ✕ succeed (2 ms)
        ✕ should contain param name on validation failed (2 ms)
    local options
      ✕ should apply local options (2 ms)

  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✕ using template (19 ms)
      ✕ using override (2 ms)
      ✕ using original (1 ms)

  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✕ useClassTransformer by default must be set to true (59 ms)
      when useClassTransformer is set to true
        ✕ useClassTransformer is enabled (11 ms)
      when useClassTransformer is set to false
        ✕ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✕ routePrefix is enabled (4 ms)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
    special result value treatment
      ✕ should pipe stream to response (15 ms)
      ✕ should send raw binary data from Buffer (1 ms)
      ✕ should send raw binary data from UIntArray (1 ms)

  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
    express middlewares
      ✕ should call a global middlewares (15 ms)
      ✕ should use a custom middleware when @UseBefore or @UseAfter is used (1 ms)
      ✕ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✕ should call middleware and call it after controller action when @UseAfter is used (1 ms)
      ✕ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (1 ms)
      ✕ should handle errors in custom middlewares (1 ms)

  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
    controller options
      ✕ controller transform is enabled by default (16 ms)
      ✕ when controller transform is enabled (3 ms)
      ✕ when controller transform is disabled (2 ms)

  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
    defaults
      ✕ should return undefinedResultCode from defaults config for void function (39 ms)
      ✕ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✕ should return 400 from required paramOptions (8 ms)
      ✕ should return nullResultCode from defaults config (3 ms)
      ✕ should return status code from OnUndefined annotation (2 ms)
      ✕ should mark arg optional from QueryParam annotation (2 ms)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✕ technical wrapper (15 ms)
    should apply global options
      ✕ technical wrapper (2 ms)
    should apply local options
      ✕ technical wrapper (1 ms)

  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✕ should load all controllers (5 ms)
    loading all express middlewares and error handlers from the given directories
      ✕ should succeed (1 ms)
      ✕ should fail (2 ms)

  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✕ should call global error handler middleware with CustomError (8 ms)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/action-options.spec.ts
    ✕ should use controller options when action transform options are not set (22 ms)
    ✕ should override controller options with action transformRequest option (1 ms)
    ✕ should override controller options with action transformResponse option (2 ms)

  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✕ should call middlewares in order defined by items order (19 ms)
    specified by priority option
      ✕ should call middlewares in order defined by priority parameter of decorator (1 ms)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✕ should not call global error handler middleware if there was no errors (18 ms)
      ✕ should call global error handler middleware (4 ms)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (24 ms)
    ✓ should build meta if the only derivative controller is given (17 ms)
    ✓ should build meta if the only autonomous controller is given
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (6 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/has/src/index.js:5:23)
      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/get-intrinsic/index.js:200:14)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/has/src/index.js:5:23)
      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/get-intrinsic/index.js:200:14)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/action-options.spec.ts
  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/has/src/index.js:5:23)
      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/get-intrinsic/index.js:200:14)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: bind.call is not a function

      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/has/src/index.js:5:23)
      at Object.<anonymous> (../../../Variants/express/variant15/express/node_modules/get-intrinsic/index.js:200:14)


Test Suites: 24 failed, 2 passed, 26 total
Tests:       121 failed, 6 passed, 127 total
Snapshots:   0 total
Time:        9.027 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (29 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty
      ✓ handle - should process number parameters (1 ms)
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (10 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

FAIL test/functional/controller-methods.spec.ts
    controller methods
      ✕ get should respond with proper status code, headers and body content (22 ms)
      ✕ post respond with proper status code, headers and body content (5 ms)
      ✕ put respond with proper status code, headers and body content (3 ms)
      ✕ patch respond with proper status code, headers and body content (3 ms)
      ✕ delete respond with proper status code, headers and body content (3 ms)
      ✕ head respond with proper status code, headers and body content (3 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (3 ms)
      ✕ route should work with parameter (3 ms)
      ✕ route should work with regexp parameter (3 ms)
      ✕ should respond with 404 when regexp does not match (5 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (3 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (21 ms)
      ✕ should respond with 204 No Content when null returned in action (3 ms)
      ✕ should respond with 404 Not Found text when undefined returned in action (3 ms)
      ✕ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✕ should respond with 200 and text/html even in json controller's method (2 ms)
      ✕ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✕ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (13 ms)
      ✕ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

  ●  › controller methods › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › post respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 11

    - <html><body>cannot connect to a database</body></html>
    + <!DOCTYPE html>
    + <html lang="en">
    + <head>
    + <meta charset="utf-8">
    + <title>Error</title>
    + </head>
    + <body>
    + <pre>TypeError: qs.parse is not a function<br> &nbsp; &nbsp;at parseExtendedQueryString (/data/js-variants/multee/Variants/express/variant14/express/lib/utils.js:290:13)<br> &nbsp; &nbsp;at query (/data/js-variants/multee/Variants/express/variant14/express/lib/middleware/query.js:42:19)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/data/js-variants/multee/Variants/express/variant14/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:328:13)<br> &nbsp; &nbsp;at /data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:286:9<br> &nbsp; &nbsp;at Function.process_params (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:346:12)<br> &nbsp; &nbsp;at next (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:280:10)<br> &nbsp; &nbsp;at Function.handle (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:175:3)<br> &nbsp; &nbsp;at Function.handle (/data/js-variants/multee/Variants/express/variant14/express/lib/application.js:181:10)<br> &nbsp; &nbsp;at Server.app (/data/js-variants/multee/Variants/express/variant14/express/lib/express.js:39:9)</pre>
    + </body>
    + </html>
    +

      276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
    > 278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
          |                                     ^
      279 |       }
      280 |     });
      281 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:278:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect(received).toEqual(expected) // deep equality

    Expected: 401
    Received: 500

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                                       ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect(received).toEqual(expected) // deep equality

    Expected: 401
    Received: 500

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                                       ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✕ get should respond with proper status code, headers and body content (8 ms)
      ✕ post respond with proper status code, headers and body content (3 ms)
      ✕ put respond with proper status code, headers and body content (2 ms)
      ✕ patch respond with proper status code, headers and body content (3 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (2 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (15 ms)
      ✕ route should work with parameter (3 ms)
      ✕ route should work with regexp parameter (3 ms)
      ✕ should respond with 404 when regexp does not match (4 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (2 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (4 ms)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                     ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                     ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect(received).toHaveProperty(path, value)

    Expected path: "content-type"

    Expected value: "application/json; charset=utf-8"
    Received value: "text/html; charset=utf-8"

      273 |       } catch (err) {
      274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
    > 275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
          |                                      ^
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,
      278 |           message: 'Cannot connect to db',

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:275:38)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
    defaults
      ✕ should return undefinedResultCode from defaults config for void function (9 ms)
      ✕ should return undefinedResultCode from defaults config for promise void function (3 ms)
      ✕ should return 400 from required paramOptions (4 ms)
      ✕ should return nullResultCode from defaults config (3 ms)
      ✕ should return status code from OnUndefined annotation (2 ms)
      ✕ should mark arg optional from QueryParam annotation (2 ms)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                                       ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                                       ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✕ useClassTransformer by default must be set to true (83 ms)
      when useClassTransformer is set to true
        ✕ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✕ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✕ routePrefix is enabled (3 ms)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✕ without roles (42 ms)
      ✕ with roles (4 ms)
      ✕ async (3 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✕ without roles (3 ms)
      ✕ with roles (16 ms)
      ✕ async (3 ms)
    Authorized Decorators Http Status Code
      ✕ without roles (5 ms)
      ✕ with roles (3 ms)
    Authorization checker allows to throw (async)
      ✕ custom errors (4 ms)
    Authorization checker allows to throw (sync)
      ✕ custom errors (3 ms)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect(received).toEqual(expected) // deep equality

    Expected: 401
    Received: 500

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                                       ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect(received).toEqual(expected) // deep equality

    Expected: 403
    Received: 500

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                                       ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✕ technical wrapper (25 ms)
    should apply global options
      ✕ technical wrapper (2 ms)
    should apply local options
      ✕ technical wrapper (2 ms)

  ●  › should not use any options if not set › technical wrapper

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
    express error handling
      ✕ should not call global error handler middleware if there was no errors (22 ms)
      ✓ should call global error handler middleware (5 ms)
      ✕ should call global error handler middleware (3 ms)
      ✕ should call error handler middleware if used (3 ms)
      ✕ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✕ should process JsonErrors by their toJSON method if it exists (3 ms)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      144 |         expect(errorHandlerCalled).toBeTruthy();
      145 |         expect(errorHandledSpecifically).toBeFalsy();
    > 146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      147 |       }
      148 |     });
      149 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:146:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      154 |       } catch (error) {
      155 |         expect(errorHandlerCalled).toBeTruthy();
    > 156 |         expect(errorHandledSpecifically).toBeTruthy();
          |                                          ^
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }
      159 |     });

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:156:42)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect(received).toBeFalsy()

    Received: true

      164 |         await axios.get('/files');
      165 |       } catch (error) {
    > 166 |         expect(errorHandlerCalled).toBeFalsy();
          |                                    ^
      167 |         expect(errorHandledSpecifically).toBeFalsy();
      168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      169 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:166:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect(received).toEqual(expected) // deep equality

    Expected: 503
    Received: 500

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                                       ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
    using typedi container should be possible
      ✕ typedi container (62 ms)
    using custom container should be possible
      ✕ custom container (4 ms)
    using custom container with fallback should be possible
      ✕ custom container with fallback (4 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✕ custom container with fallback and fallback on throw error (5 ms)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
    special result value treatment
      ✕ should pipe stream to response (23 ms)
      ✕ should send raw binary data from Buffer (2 ms)
      ✕ should send raw binary data from UIntArray (3 ms)

  ●  › special result value treatment › should pipe stream to response

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at RedirectableRequest.handleResponse (node_modules/axios/lib/adapters/http.js:231:9)
      at RedirectableRequest.emit (node:events:527:28)
      at RedirectableRequest._processResponse (node_modules/follow-redirects/index.js:380:10)
      at ClientRequest.RedirectableRequest._onNativeResponse (node_modules/follow-redirects/index.js:56:10)
      at Object.onceWrapper (node:events:642:26)
      at ClientRequest.emit (node:events:527:28)
      at HTTPParser.parserOnIncomingClient (node:_http_client:639:27)
      at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from Buffer

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✕ should return httpCode set by @HttpCode decorator (9 ms)
      ✕ should return custom code when @OnNull (3 ms)
      ✕ should return custom error message and code when @OnUndefined is used with Error class (2 ms)
      ✕ should return custom code when @OnUndefined (2 ms)
      ✕ should return content-type in the response when @ContentType is used (2 ms)
      ✕ should return content-type in the response when @ContentType is used (2 ms)
      ✕ should return response with custom headers when @Header is used (3 ms)
      ✕ should relocate to new location when @Location is used (2 ms)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnNull

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
    no options
      ✕ should not use any options if not set (48 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✕ succeed (6 ms)
      should pass the valid param after validation
        ✕ succeed (5 ms)
        ✕ should contain param name on validation failed (10 ms)
    local options
      ✕ should apply local options (6 ms)

  ●  › no options › should not use any options if not set

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › global options › should pass the valid param after validation › succeed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                         ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:41)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✕ get should respond with proper status code, headers and body content (57 ms)
      ✕ get should respond with proper status code, headers and body content (4 ms)
      ✕ get should respond with proper status code, headers and body content - 2nd pass (4 ms)
      ✕ wrong route should respond with 404 error (5 ms)
      ✕ wrong route should respond with 404 error (3 ms)
      ✕ wrong route should respond with 404 error (3 ms)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
    interceptor
      ✕ custom interceptor function should replace returned content (9 ms)
      ✕ custom interceptor class should replace returned content (3 ms)
      ✕ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✕ global interceptor class should replace returned content (2 ms)
      ✕ interceptors should support promises (3 ms)

  ●  › interceptor › custom interceptor function should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
    express middlewares
      ✕ should call a global middlewares (8 ms)
      ✕ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✕ should call middleware and call it before controller action when @UseBefore is used (3 ms)
      ✕ should call middleware and call it after controller action when @UseAfter is used (2 ms)
      ✕ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (3 ms)
      ✕ should handle errors in custom middlewares (4 ms)

  ●  › express middlewares › should call a global middlewares

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✕ using template (9 ms)
      ✕ using override (3 ms)
      ✕ using original (2 ms)

  ●  › dynamic redirect › using template

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using override

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✕ should not call global error handler middleware if there was no errors (21 ms)
      ✕ should call global error handler middleware (11 ms)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      68 |       } catch (error) {
      69 |         expect(errorHandlerCalled).toBeTruthy();
    > 70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }
      73 |     });

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:70:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✕ should call middlewares in order defined by items order (22 ms)
    specified by priority option
      ✕ should call middlewares in order defined by priority parameter of decorator (3 ms)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
    ✕ should use controller options when action transform options are not set (24 ms)
    ✕ should override controller options with action transformRequest option (3 ms)
    ✕ should override controller options with action transformResponse option (2 ms)

  ●  › should use controller options when action transform options are not set

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformRequest option

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
    controller options
      ✕ controller transform is enabled by default (24 ms)
      ✕ when controller transform is enabled (4 ms)
      ✕ when controller transform is disabled (3 ms)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✕ should call global error handler middleware with CustomError (37 ms)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toEqual(expected) // deep equality

    Expected: "CustomError"
    Received: "TypeError"

      66 |       } catch (error) {
      67 |         expect(errorHandlerCalled).toBeTruthy();
    > 68 |         expect(errorHandlerName).toEqual('CustomError');
         |                                  ^
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }
      71 |     });

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:68:34)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✕ should load all controllers (26 ms)
    loading all express middlewares and error handlers from the given directories
      ✕ should succeed (10 ms)
      ✕ should fail (6 ms)

  ●  › loading all controllers from the given directories › should load all controllers

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect(received).toBeTruthy()

    Received: false

      100 |       } catch (error) {
      101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
    > 102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
          |                                                         ^
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();
      105 |         expect(defaultFakeService.fileMiddlewareCalled).toBeFalsy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:102:57)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received two assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

FAIL test/functional/render-decorator.spec.ts
    template rendering
      ✕ should render a template and use given variables (9 ms)
      ✕ should render a template with given variables and locals variables (2 ms)

  ●  › template rendering › should render a template and use given variables

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › template rendering › should render a template and use given variables

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      52 | 
      53 |     it('should render a template and use given variables', async () => {
    > 54 |       expect.assertions(6);
         |              ^
      55 |       const response = await axios.get('/index');
      56 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      57 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:54:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › template rendering › should render a template with given variables and locals variables

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › template rendering › should render a template with given variables and locals variables

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should render a template with given variables and locals variables', async () => {
    > 65 |       expect.assertions(7);
         |              ^
      66 |       const response = await axios.get('/locals');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
    ✕ @Req and @Res should be provided as Request and Response objects (20 ms)
    ✕ @Res writing directly to the response should work (3 ms)
    ✕ @Param should give a param from route (2 ms)
    ✕ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (5 ms)
    ✕ @Session should return a value from session (3 ms)
    ✕ @Session(param) should allow to inject empty property (2 ms)
    ✕ @QueryParams should give a proper values from request's query parameters (2 ms)
    ✕ @QueryParams should give a proper values from request's query parameters and one multiple value (3 ms)
    ✕ @QueryParams should give a proper values from request's query with validate whitelist option on (2 ms)
    ✕ @QueryParams should give a proper values from request's query parameters with nested json (2 ms)
    ✕ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✕ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✕ @QueryParam should give a proper values from request query parameters (3 ms)
    ✕ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✕ @QueryParam should give an array of string with multiple query parameters (1 ms)
    ✕ @QueryParam should give an array of number with only one query parameter (1 ms)
    ✕ @QueryParam should give an array of number with multiple query parameters (2 ms)
    ✕ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✕ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✕ @QueryParam when required params must be provided and they should not be empty (2 ms)
    ✕ @QueryParam when the type is Date then it should be parsed (6 ms)
    ✕ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (4 ms)
    ✕ @QueryParam when parseJson flag is used query param must be converted to object (3 ms)
    ✕ @HeaderParam should give a proper values from request headers (2 ms)
    ✕ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✕ @HeaderParam should fail with invalid request options (3 ms)
    ✕ @HeaderParam should fail with missing required params (2 ms)
    ✕ for @HeaderParam when parseJson flag is used query param must be converted to object (1 ms)
    ✕ @CookieParam should give a proper values from request headers (2 ms)
    ✕ @CookieParam when required is params must be provided and they should not be empty (13 ms)
    ✕ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✕ @Body should provide a request body (2 ms)
    ✕ @Body should fail if required body was not provided (2 ms)
    ✕ @Body should provide a json object for json-typed controllers and actions (2 ms)
    ✕ @Body should fail if required body was not provided for json-typed controllers and actions (2 ms)
    ✕ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✕ @BodyParam should fail if required body was not provided for json-typed controllers and actions (2 ms)
    ✕ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✕ @UploadedFile using multipart/form-data should provide uploaded file with the given name (5 ms)
    ✕ @UploadedFile with @Body should return both the file and the body (3 ms)
    ✕ @UploadedFile with @BodyParam should return both the file and the body param (3 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (2 ms)
    ✕ @UploadedFile when required is used files must be provided (3 ms)
    ✕ @UploadedFiles should provide uploaded files with the given name (3 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (3 ms)
    ✓ @UploadedFiles when required is used files must be provided (1 ms)

  ●  › @Req and @Res should be provided as Request and Response objects

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Req and @Res should be provided as Request and Response objects

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      466 | 
      467 |   it('@Req and @Res should be provided as Request and Response objects', async () => {
    > 468 |     expect.assertions(4);
          |            ^
      469 |     const response = await axios.get('/users');
      470 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      471 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:468:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Res writing directly to the response should work

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Res writing directly to the response should work

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      475 | 
      476 |   it('@Res writing directly to the response should work', async () => {
    > 477 |     expect.assertions(3);
          |            ^
      478 |     const response = await axios.get('/users-direct');
      479 |     expect(response.status).toEqual(HttpStatusCodes.CREATED);
      480 |     expect(response.headers['content-type']).toEqual('custom/x-sample; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:477:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param should give a param from route

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Param should give a param from route

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      483 | 
      484 |   it('@Param should give a param from route', async () => {
    > 485 |     expect.assertions(4);
          |            ^
      486 |     const response = await axios.get('users/1');
      487 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      488 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:485:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param multiple params should give a proper values from route

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Param multiple params should give a proper values from route

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      492 | 
      493 |   it('@Param multiple params should give a proper values from route', async () => {
    > 494 |     expect.assertions(5);
          |            ^
      495 |     const response = await axios.get('/users/23/photos/32');
      496 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      497 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:494:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session should return a value from session

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Session should return a value from session

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      511 | 
      512 |   it('@Session should return a value from session', async () => {
    > 513 |     expect.assertions(7);
          |            ^
      514 |     const response = await axios.post('/session');
      515 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      516 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:513:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session(param) should allow to inject empty property

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      554 | 
      555 |   it("@QueryParams should give a proper values from request's query parameters", async () => {
    > 556 |     expect.assertions(10);
          |            ^
      557 |     const response = await axios.get(
      558 |       '/photos-params?' +
      559 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:556:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      586 | 
      587 |   it("@QueryParams should give a proper values from request's query parameters and one multiple value", async () => {
    > 588 |     expect.assertions(10);
          |            ^
      589 |     const response = await axios.get(
      590 |       '/photos-params?' +
      591 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:588:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      611 | 
      612 |   it("@QueryParams should give a proper values from request's query with validate whitelist option on", async () => {
    > 613 |     expect.assertions(3);
          |            ^
      614 |     const response = await axios.get('/photos-params-whitelist?multipleBooleanValues=false');
      615 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      616 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:613:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    expect.assertions(13)

    Expected thirteen assertions to be called but received zero assertion calls.

      619 | 
      620 |   it("@QueryParams should give a proper values from request's query parameters with nested json", async () => {
    > 621 |     expect.assertions(13);
          |            ^
      622 |     const response = await axios.get(
      623 |       '/photos-params?' +
      624 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:621:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      651 | 
      652 |   it("@QueryParams should not validate request query parameters when it's turned off in validator options", async () => {
    > 653 |     expect.assertions(6);
          |            ^
      654 |     const response = await axios.get('/photos-params-no-validate?sortBy=verylongtext&count=2&limit=1&showAll=true');
      655 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      656 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:653:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      662 | 
      663 |   it("@QueryParams should give a proper values from request's optional query parameters", async () => {
    > 664 |     expect.assertions(6);
          |            ^
      665 |     const response = await axios.get('/photos-params-optional?sortBy=name&limit=10');
      666 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      667 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:664:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give a proper values from request query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give a proper values from request query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      673 | 
      674 |   it('@QueryParam should give a proper values from request query parameters', async () => {
    > 675 |     expect.assertions(6);
          |            ^
      676 |     const response = await axios.get('/photos?sortBy=name&count=2&limit=10&showAll=true');
      677 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      678 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:675:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with only one query parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of string with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      684 | 
      685 |   it('@QueryParam should give an array of string with only one query parameter', async () => {
    > 686 |     expect.assertions(3);
          |            ^
      687 |     const response = await axios.get('/photos-query-param-string-array?multipleStringValues=a');
      688 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      689 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:686:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with multiple query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of string with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      692 | 
      693 |   it('@QueryParam should give an array of string with multiple query parameters', async () => {
    > 694 |     expect.assertions(3);
          |            ^
      695 |     const response = await axios.get(
      696 |       '/photos-query-param-string-array?multipleStringValues=a&multipleStringValues=b&multipleStringValues=b'
      697 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:694:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with only one query parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of number with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      702 | 
      703 |   it('@QueryParam should give an array of number with only one query parameter', async () => {
    > 704 |     expect.assertions(3);
          |            ^
      705 |     const response = await axios.get('/photos-query-param-number-array?multipleNumberValues=1');
      706 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      707 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:704:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with multiple query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of number with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      710 | 
      711 |   it('@QueryParam should give an array of number with multiple query parameters', async () => {
    > 712 |     expect.assertions(3);
          |            ^
      713 |     const response = await axios.get(
      714 |       '/photos-query-param-number-array?multipleNumberValues=1&multipleNumberValues=2&multipleNumberValues=2'
      715 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:712:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with only one query parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of date with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      720 | 
      721 |   it('@QueryParam should give an array of date with only one query parameter', async () => {
    > 722 |     expect.assertions(3);
          |            ^
      723 |     const response = await axios.get('/photos-query-param-date-array?multipleDateValues=2021-01-01');
      724 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      725 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:722:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with multiple query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of date with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      728 | 
      729 |   it('@QueryParam should give an array of date with multiple query parameters', async () => {
    > 730 |     expect.assertions(3);
          |            ^
      731 |     const response = await axios.get(
      732 |       '/photos-query-param-date-array?multipleDateValues=2021-01-01&multipleDateValues=2020-01-01&multipleDateValues=2021-05-01'
      733 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:730:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when required params must be provided and they should not be empty

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam when required params must be provided and they should not be empty

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      738 | 
      739 |   it('@QueryParam when required params must be provided and they should not be empty', async () => {
    > 740 |     expect.assertions(6);
          |            ^
      741 |     let response = await axios.get('/photos-with-required?limit=0');
      742 |     expect(queryParamLimit).toEqual(0);
      743 |     expect(response.status).toBe(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:740:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date then it should be parsed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam when the type is Date then it should be parsed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      759 | 
      760 |   it('@QueryParam when the type is Date then it should be parsed', async () => {
    > 761 |     expect.assertions(2);
          |            ^
      762 |     const response = await axios.get('/posts-after/?from=2017-01-01T00:00:00Z');
      763 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      764 |     expect(response.data).toEqual('2017-01-01T00:00:00.000Z');

      at Object.<anonymous> (test/functional/action-params.spec.ts:761:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {
    > 772 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                     ^
      773 |       expect(error.response.data.name).toEqual('ParamNormalizationError');
      774 |     }
      775 |   });

      at Object.<anonymous> (test/functional/action-params.spec.ts:772:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      766 | 
      767 |   it('@QueryParam when the type is Date and it is invalid then the response should be a BadRequest error', async () => {
    > 768 |     expect.assertions(2);
          |            ^
      769 |     try {
      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:768:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      776 | 
      777 |   it('@QueryParam when parseJson flag is used query param must be converted to object', async () => {
    > 778 |     expect.assertions(3);
          |            ^
      779 |     const response = await axios.get('/photos-with-json/?filter={"keyword": "name", "limit": 5}');
      780 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      781 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:778:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should give a proper values from request headers

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      799 | 
      800 |   it('@HeaderParam when required is params must be provided and they should not be empty', async () => {
    > 801 |     expect.assertions(3);
          |            ^
      802 |     const response = await axios.get('/posts-with-required', {
      803 |       headers: {
      804 |         limit: 0,

      at Object.<anonymous> (test/functional/action-params.spec.ts:801:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with invalid request options

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      819 |       });
      820 |     } catch (error) {
    > 821 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                     ^
      822 |     }
      823 |   });
      824 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:821:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with missing required params

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      828 |       await axios.get('/posts-with-required');
      829 |     } catch (error) {
    > 830 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                     ^
      831 |     }
      832 |   });
      833 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:830:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      833 | 
      834 |   it('for @HeaderParam when parseJson flag is used query param must be converted to object', async () => {
    > 835 |     expect.assertions(3);
          |            ^
      836 |     const response = await axios.get('/posts-with-json', {
      837 |       headers: {
      838 |         filter: '{"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:835:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam should give a proper values from request headers

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @CookieParam should give a proper values from request headers

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      845 | 
      846 |   it('@CookieParam should give a proper values from request headers', async () => {
    > 847 |     expect.assertions(5);
          |            ^
      848 |     const response = await axios.get('/questions', {
      849 |       headers: {
      850 |         Cookie: 'token=31ds31das231sad12; count=20; showAll=false',

      at Object.<anonymous> (test/functional/action-params.spec.ts:847:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      860 | 
      861 |   it('@CookieParam when required is params must be provided and they should not be empty', async () => {
    > 862 |     expect.assertions(4);
          |            ^
      863 |     let response = await axios.get('/questions-with-required', {
      864 |       headers: {
      865 |         Cookie: 'limit=20',

      at Object.<anonymous> (test/functional/action-params.spec.ts:862:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      879 | 
      880 |   it('@CookieParam when parseJson flag is used query param must be converted to object', async () => {
    > 881 |     expect.assertions(3);
          |            ^
      882 |     const response = await axios.get('/questions-with-json', {
      883 |       headers: {
      884 |         Cookie: 'filter={"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:881:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a request body

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should provide a request body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      892 | 
      893 |   it('@Body should provide a request body', async () => {
    > 894 |     expect.assertions(3);
          |            ^
      895 |     const response = await axios.post('/questions', 'hello', {
      896 |       headers: {
      897 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:894:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should fail if required body was not provided

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      904 | 
      905 |   it('@Body should fail if required body was not provided', async () => {
    > 906 |     expect.assertions(5);
          |            ^
      907 |     let response = await axios.post('/questions-with-required', '0', {
      908 |       headers: {
      909 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:906:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a json object for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      936 | 
      937 |   it('@Body should provide a json object for json-typed controllers and actions', async () => {
    > 938 |     expect.assertions(4);
          |            ^
      939 |     const response = await axios.post('/posts', { hello: 'world' });
      940 |     expect(body).toEqual({ hello: 'world' });
      941 |     expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:938:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      945 | 
      946 |   it('@Body should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 947 |     expect.assertions(2);
          |            ^
      948 |     let response = await axios.post('posts-with-required', { hello: '' });
      949 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      950 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:947:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      957 | 
      958 |   it('@BodyParam should provide a json object for json-typed controllers and actions', async () => {
    > 959 |     expect.assertions(4);
          |            ^
      960 |     const response = await axios.post('/users', { name: 'johny', age: 27, isActive: true });
      961 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      962 |     expect(bodyParamName).toEqual('johny');

      at Object.<anonymous> (test/functional/action-params.spec.ts:959:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      966 | 
      967 |   it('@BodyParam should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 968 |     expect.assertions(8);
          |            ^
      969 |     let response = await axios.post('/users-with-required', { name: 'johny', age: 27, isActive: true });
      970 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      971 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:968:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1005 | 
      1006 |   it('@Body using application/x-www-form-urlencoded should handle url encoded form data', async () => {
    > 1007 |     expect.assertions(3);
           |            ^
      1008 |     const response = await axios.post(
      1009 |       '/form-data-body',
      1010 |       qs.stringify({

      at Object.<anonymous> (test/functional/action-params.spec.ts:1007:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1026 | 
      1027 |   it('@UploadedFile using multipart/form-data should provide uploaded file with the given name', async () => {
    > 1028 |     expect.assertions(3);
           |            ^
      1029 |     const form = new FormData();
      1030 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1031 |     const response = await axios.post('/file', form, {

      at Object.<anonymous> (test/functional/action-params.spec.ts:1028:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @Body should return both the file and the body

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile with @Body should return both the file and the body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1038 | 
      1039 |   it('@UploadedFile with @Body should return both the file and the body', async () => {
    > 1040 |     expect.assertions(3);
           |            ^
      1041 |     const form = new FormData();
      1042 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1043 |     form.append('anotherField', 'hello');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1040:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1054 | 
      1055 |   it('@UploadedFile with @BodyParam should return both the file and the body param', async () => {
    > 1056 |     expect.assertions(3);
           |            ^
      1057 |     const form = new FormData();
      1058 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1059 |     form.append('testParam', 'testParamOne');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1056:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile when required is used files must be provided

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile when required is used files must be provided

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      1081 | 
      1082 |   it('@UploadedFile when required is used files must be provided', async () => {
    > 1083 |     expect.assertions(4);
           |            ^
      1084 |     const form = new FormData();
      1085 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1086 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1083:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles should provide uploaded files with the given name

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFiles should provide uploaded files with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1102 | 
      1103 |   it('@UploadedFiles should provide uploaded files with the given name', async () => {
    > 1104 |     expect.assertions(3);
           |            ^
      1105 |     const form = new FormData();
      1106 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1107 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));

      at Object.<anonymous> (test/functional/action-params.spec.ts:1104:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

FAIL test/functional/controller-methods.spec.ts
  ●  › controller methods › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › post respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 11

    - <html><body>cannot connect to a database</body></html>
    + <!DOCTYPE html>
    + <html lang="en">
    + <head>
    + <meta charset="utf-8">
    + <title>Error</title>
    + </head>
    + <body>
    + <pre>TypeError: qs.parse is not a function<br> &nbsp; &nbsp;at parseExtendedQueryString (/data/js-variants/multee/Variants/express/variant14/express/lib/utils.js:290:13)<br> &nbsp; &nbsp;at query (/data/js-variants/multee/Variants/express/variant14/express/lib/middleware/query.js:42:19)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/data/js-variants/multee/Variants/express/variant14/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:328:13)<br> &nbsp; &nbsp;at /data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:286:9<br> &nbsp; &nbsp;at Function.process_params (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:346:12)<br> &nbsp; &nbsp;at next (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:280:10)<br> &nbsp; &nbsp;at Function.handle (/data/js-variants/multee/Variants/express/variant14/express/lib/router/index.js:175:3)<br> &nbsp; &nbsp;at Function.handle (/data/js-variants/multee/Variants/express/variant14/express/lib/application.js:181:10)<br> &nbsp; &nbsp;at Server.app (/data/js-variants/multee/Variants/express/variant14/express/lib/express.js:39:9)</pre>
    + </body>
    + </html>
    +

      276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
    > 278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
          |                                     ^
      279 |       }
      280 |     });
      281 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:278:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect(received).toEqual(expected) // deep equality

    Expected: 401
    Received: 500

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                                       ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect(received).toEqual(expected) // deep equality

    Expected: 401
    Received: 500

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                                       ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
  ●  › json-controller methods › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                     ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                     ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect(received).toHaveProperty(path, value)

    Expected path: "content-type"

    Expected value: "application/json; charset=utf-8"
    Received value: "text/html; charset=utf-8"

      273 |       } catch (err) {
      274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
    > 275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
          |                                      ^
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,
      278 |           message: 'Cannot connect to db',

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:275:38)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
  ●  › defaults › should return undefinedResultCode from defaults config for void function

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                                       ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                                       ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect(received).toEqual(expected) // deep equality

    Expected: 401
    Received: 500

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                                       ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect(received).toEqual(expected) // deep equality

    Expected: 403
    Received: 500

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                                       ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
  ●  › should not use any options if not set › technical wrapper

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
  ●  › express error handling › should not call global error handler middleware if there was no errors

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      144 |         expect(errorHandlerCalled).toBeTruthy();
      145 |         expect(errorHandledSpecifically).toBeFalsy();
    > 146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                                       ^
      147 |       }
      148 |     });
      149 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:146:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      154 |       } catch (error) {
      155 |         expect(errorHandlerCalled).toBeTruthy();
    > 156 |         expect(errorHandledSpecifically).toBeTruthy();
          |                                          ^
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }
      159 |     });

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:156:42)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect(received).toBeFalsy()

    Received: true

      164 |         await axios.get('/files');
      165 |       } catch (error) {
    > 166 |         expect(errorHandlerCalled).toBeFalsy();
          |                                    ^
      167 |         expect(errorHandledSpecifically).toBeFalsy();
      168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      169 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:166:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect(received).toEqual(expected) // deep equality

    Expected: 503
    Received: 500

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                                       ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
  ●  › special result value treatment › should pipe stream to response

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at RedirectableRequest.handleResponse (node_modules/axios/lib/adapters/http.js:231:9)
      at RedirectableRequest.emit (node:events:527:28)
      at RedirectableRequest._processResponse (node_modules/follow-redirects/index.js:380:10)
      at ClientRequest.RedirectableRequest._onNativeResponse (node_modules/follow-redirects/index.js:56:10)
      at Object.onceWrapper (node:events:642:26)
      at ClientRequest.emit (node:events:527:28)
      at HTTPParser.parserOnIncomingClient (node:_http_client:639:27)
      at HTTPParser.parserOnHeadersComplete (node:_http_common:117:17)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from Buffer

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnNull

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
  ●  › no options › should not use any options if not set

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › global options › should pass the valid param after validation › succeed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                         ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:41)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
  ●  › interceptor › custom interceptor function should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
  ●  › express middlewares › should call a global middlewares

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect(received).toEqual(expected) // deep equality

    Expected: 406
    Received: 500

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                                       ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
  ●  › dynamic redirect › using template

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using override

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toEqual(expected) // deep equality

    Expected: 404
    Received: 500

      68 |       } catch (error) {
      69 |         expect(errorHandlerCalled).toBeTruthy();
    > 70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                                       ^
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }
      73 |     });

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:70:39)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
  ●  › loaded direct from array › should call middlewares in order defined by items order

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
  ●  › should use controller options when action transform options are not set

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformRequest option

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toEqual(expected) // deep equality

    Expected: "CustomError"
    Received: "TypeError"

      66 |       } catch (error) {
      67 |         expect(errorHandlerCalled).toBeTruthy();
    > 68 |         expect(errorHandlerName).toEqual('CustomError');
         |                                  ^
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }
      71 |     });

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:68:34)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
  ●  › loading all controllers from the given directories › should load all controllers

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect(received).toBeTruthy()

    Received: false

      100 |       } catch (error) {
      101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
    > 102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
          |                                                         ^
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();
      105 |         expect(defaultFakeService.fileMiddlewareCalled).toBeFalsy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:102:57)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received two assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ●  › template rendering › should render a template and use given variables

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › template rendering › should render a template and use given variables

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      52 | 
      53 |     it('should render a template and use given variables', async () => {
    > 54 |       expect.assertions(6);
         |              ^
      55 |       const response = await axios.get('/index');
      56 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      57 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:54:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › template rendering › should render a template with given variables and locals variables

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › template rendering › should render a template with given variables and locals variables

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should render a template with given variables and locals variables', async () => {
    > 65 |       expect.assertions(7);
         |              ^
      66 |       const response = await axios.get('/locals');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
  ●  › @Req and @Res should be provided as Request and Response objects

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Req and @Res should be provided as Request and Response objects

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      466 | 
      467 |   it('@Req and @Res should be provided as Request and Response objects', async () => {
    > 468 |     expect.assertions(4);
          |            ^
      469 |     const response = await axios.get('/users');
      470 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      471 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:468:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Res writing directly to the response should work

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Res writing directly to the response should work

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      475 | 
      476 |   it('@Res writing directly to the response should work', async () => {
    > 477 |     expect.assertions(3);
          |            ^
      478 |     const response = await axios.get('/users-direct');
      479 |     expect(response.status).toEqual(HttpStatusCodes.CREATED);
      480 |     expect(response.headers['content-type']).toEqual('custom/x-sample; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:477:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param should give a param from route

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Param should give a param from route

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      483 | 
      484 |   it('@Param should give a param from route', async () => {
    > 485 |     expect.assertions(4);
          |            ^
      486 |     const response = await axios.get('users/1');
      487 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      488 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:485:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param multiple params should give a proper values from route

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Param multiple params should give a proper values from route

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      492 | 
      493 |   it('@Param multiple params should give a proper values from route', async () => {
    > 494 |     expect.assertions(5);
          |            ^
      495 |     const response = await axios.get('/users/23/photos/32');
      496 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      497 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:494:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session should return a value from session

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Session should return a value from session

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      511 | 
      512 |   it('@Session should return a value from session', async () => {
    > 513 |     expect.assertions(7);
          |            ^
      514 |     const response = await axios.post('/session');
      515 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      516 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:513:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session(param) should allow to inject empty property

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      554 | 
      555 |   it("@QueryParams should give a proper values from request's query parameters", async () => {
    > 556 |     expect.assertions(10);
          |            ^
      557 |     const response = await axios.get(
      558 |       '/photos-params?' +
      559 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:556:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      586 | 
      587 |   it("@QueryParams should give a proper values from request's query parameters and one multiple value", async () => {
    > 588 |     expect.assertions(10);
          |            ^
      589 |     const response = await axios.get(
      590 |       '/photos-params?' +
      591 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:588:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      611 | 
      612 |   it("@QueryParams should give a proper values from request's query with validate whitelist option on", async () => {
    > 613 |     expect.assertions(3);
          |            ^
      614 |     const response = await axios.get('/photos-params-whitelist?multipleBooleanValues=false');
      615 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      616 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:613:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    expect.assertions(13)

    Expected thirteen assertions to be called but received zero assertion calls.

      619 | 
      620 |   it("@QueryParams should give a proper values from request's query parameters with nested json", async () => {
    > 621 |     expect.assertions(13);
          |            ^
      622 |     const response = await axios.get(
      623 |       '/photos-params?' +
      624 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:621:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      651 | 
      652 |   it("@QueryParams should not validate request query parameters when it's turned off in validator options", async () => {
    > 653 |     expect.assertions(6);
          |            ^
      654 |     const response = await axios.get('/photos-params-no-validate?sortBy=verylongtext&count=2&limit=1&showAll=true');
      655 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      656 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:653:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      662 | 
      663 |   it("@QueryParams should give a proper values from request's optional query parameters", async () => {
    > 664 |     expect.assertions(6);
          |            ^
      665 |     const response = await axios.get('/photos-params-optional?sortBy=name&limit=10');
      666 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      667 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:664:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give a proper values from request query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give a proper values from request query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      673 | 
      674 |   it('@QueryParam should give a proper values from request query parameters', async () => {
    > 675 |     expect.assertions(6);
          |            ^
      676 |     const response = await axios.get('/photos?sortBy=name&count=2&limit=10&showAll=true');
      677 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      678 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:675:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with only one query parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of string with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      684 | 
      685 |   it('@QueryParam should give an array of string with only one query parameter', async () => {
    > 686 |     expect.assertions(3);
          |            ^
      687 |     const response = await axios.get('/photos-query-param-string-array?multipleStringValues=a');
      688 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      689 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:686:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with multiple query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of string with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      692 | 
      693 |   it('@QueryParam should give an array of string with multiple query parameters', async () => {
    > 694 |     expect.assertions(3);
          |            ^
      695 |     const response = await axios.get(
      696 |       '/photos-query-param-string-array?multipleStringValues=a&multipleStringValues=b&multipleStringValues=b'
      697 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:694:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with only one query parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of number with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      702 | 
      703 |   it('@QueryParam should give an array of number with only one query parameter', async () => {
    > 704 |     expect.assertions(3);
          |            ^
      705 |     const response = await axios.get('/photos-query-param-number-array?multipleNumberValues=1');
      706 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      707 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:704:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with multiple query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of number with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      710 | 
      711 |   it('@QueryParam should give an array of number with multiple query parameters', async () => {
    > 712 |     expect.assertions(3);
          |            ^
      713 |     const response = await axios.get(
      714 |       '/photos-query-param-number-array?multipleNumberValues=1&multipleNumberValues=2&multipleNumberValues=2'
      715 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:712:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with only one query parameter

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of date with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      720 | 
      721 |   it('@QueryParam should give an array of date with only one query parameter', async () => {
    > 722 |     expect.assertions(3);
          |            ^
      723 |     const response = await axios.get('/photos-query-param-date-array?multipleDateValues=2021-01-01');
      724 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      725 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:722:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with multiple query parameters

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam should give an array of date with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      728 | 
      729 |   it('@QueryParam should give an array of date with multiple query parameters', async () => {
    > 730 |     expect.assertions(3);
          |            ^
      731 |     const response = await axios.get(
      732 |       '/photos-query-param-date-array?multipleDateValues=2021-01-01&multipleDateValues=2020-01-01&multipleDateValues=2021-05-01'
      733 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:730:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when required params must be provided and they should not be empty

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam when required params must be provided and they should not be empty

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      738 | 
      739 |   it('@QueryParam when required params must be provided and they should not be empty', async () => {
    > 740 |     expect.assertions(6);
          |            ^
      741 |     let response = await axios.get('/photos-with-required?limit=0');
      742 |     expect(queryParamLimit).toEqual(0);
      743 |     expect(response.status).toBe(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:740:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date then it should be parsed

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam when the type is Date then it should be parsed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      759 | 
      760 |   it('@QueryParam when the type is Date then it should be parsed', async () => {
    > 761 |     expect.assertions(2);
          |            ^
      762 |     const response = await axios.get('/posts-after/?from=2017-01-01T00:00:00Z');
      763 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      764 |     expect(response.data).toEqual('2017-01-01T00:00:00.000Z');

      at Object.<anonymous> (test/functional/action-params.spec.ts:761:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {
    > 772 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                     ^
      773 |       expect(error.response.data.name).toEqual('ParamNormalizationError');
      774 |     }
      775 |   });

      at Object.<anonymous> (test/functional/action-params.spec.ts:772:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      766 | 
      767 |   it('@QueryParam when the type is Date and it is invalid then the response should be a BadRequest error', async () => {
    > 768 |     expect.assertions(2);
          |            ^
      769 |     try {
      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:768:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      776 | 
      777 |   it('@QueryParam when parseJson flag is used query param must be converted to object', async () => {
    > 778 |     expect.assertions(3);
          |            ^
      779 |     const response = await axios.get('/photos-with-json/?filter={"keyword": "name", "limit": 5}');
      780 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      781 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:778:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should give a proper values from request headers

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      799 | 
      800 |   it('@HeaderParam when required is params must be provided and they should not be empty', async () => {
    > 801 |     expect.assertions(3);
          |            ^
      802 |     const response = await axios.get('/posts-with-required', {
      803 |       headers: {
      804 |         limit: 0,

      at Object.<anonymous> (test/functional/action-params.spec.ts:801:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with invalid request options

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      819 |       });
      820 |     } catch (error) {
    > 821 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                     ^
      822 |     }
      823 |   });
      824 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:821:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with missing required params

    expect(received).toEqual(expected) // deep equality

    Expected: 400
    Received: 500

      828 |       await axios.get('/posts-with-required');
      829 |     } catch (error) {
    > 830 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                     ^
      831 |     }
      832 |   });
      833 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:830:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      833 | 
      834 |   it('for @HeaderParam when parseJson flag is used query param must be converted to object', async () => {
    > 835 |     expect.assertions(3);
          |            ^
      836 |     const response = await axios.get('/posts-with-json', {
      837 |       headers: {
      838 |         filter: '{"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:835:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam should give a proper values from request headers

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @CookieParam should give a proper values from request headers

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      845 | 
      846 |   it('@CookieParam should give a proper values from request headers', async () => {
    > 847 |     expect.assertions(5);
          |            ^
      848 |     const response = await axios.get('/questions', {
      849 |       headers: {
      850 |         Cookie: 'token=31ds31das231sad12; count=20; showAll=false',

      at Object.<anonymous> (test/functional/action-params.spec.ts:847:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      860 | 
      861 |   it('@CookieParam when required is params must be provided and they should not be empty', async () => {
    > 862 |     expect.assertions(4);
          |            ^
      863 |     let response = await axios.get('/questions-with-required', {
      864 |       headers: {
      865 |         Cookie: 'limit=20',

      at Object.<anonymous> (test/functional/action-params.spec.ts:862:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      879 | 
      880 |   it('@CookieParam when parseJson flag is used query param must be converted to object', async () => {
    > 881 |     expect.assertions(3);
          |            ^
      882 |     const response = await axios.get('/questions-with-json', {
      883 |       headers: {
      884 |         Cookie: 'filter={"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:881:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a request body

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should provide a request body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      892 | 
      893 |   it('@Body should provide a request body', async () => {
    > 894 |     expect.assertions(3);
          |            ^
      895 |     const response = await axios.post('/questions', 'hello', {
      896 |       headers: {
      897 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:894:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should fail if required body was not provided

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      904 | 
      905 |   it('@Body should fail if required body was not provided', async () => {
    > 906 |     expect.assertions(5);
          |            ^
      907 |     let response = await axios.post('/questions-with-required', '0', {
      908 |       headers: {
      909 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:906:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a json object for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      936 | 
      937 |   it('@Body should provide a json object for json-typed controllers and actions', async () => {
    > 938 |     expect.assertions(4);
          |            ^
      939 |     const response = await axios.post('/posts', { hello: 'world' });
      940 |     expect(body).toEqual({ hello: 'world' });
      941 |     expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:938:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      945 | 
      946 |   it('@Body should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 947 |     expect.assertions(2);
          |            ^
      948 |     let response = await axios.post('posts-with-required', { hello: '' });
      949 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      950 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:947:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      957 | 
      958 |   it('@BodyParam should provide a json object for json-typed controllers and actions', async () => {
    > 959 |     expect.assertions(4);
          |            ^
      960 |     const response = await axios.post('/users', { name: 'johny', age: 27, isActive: true });
      961 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      962 |     expect(bodyParamName).toEqual('johny');

      at Object.<anonymous> (test/functional/action-params.spec.ts:959:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      966 | 
      967 |   it('@BodyParam should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 968 |     expect.assertions(8);
          |            ^
      969 |     let response = await axios.post('/users-with-required', { name: 'johny', age: 27, isActive: true });
      970 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      971 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:968:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1005 | 
      1006 |   it('@Body using application/x-www-form-urlencoded should handle url encoded form data', async () => {
    > 1007 |     expect.assertions(3);
           |            ^
      1008 |     const response = await axios.post(
      1009 |       '/form-data-body',
      1010 |       qs.stringify({

      at Object.<anonymous> (test/functional/action-params.spec.ts:1007:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1026 | 
      1027 |   it('@UploadedFile using multipart/form-data should provide uploaded file with the given name', async () => {
    > 1028 |     expect.assertions(3);
           |            ^
      1029 |     const form = new FormData();
      1030 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1031 |     const response = await axios.post('/file', form, {

      at Object.<anonymous> (test/functional/action-params.spec.ts:1028:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @Body should return both the file and the body

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile with @Body should return both the file and the body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1038 | 
      1039 |   it('@UploadedFile with @Body should return both the file and the body', async () => {
    > 1040 |     expect.assertions(3);
           |            ^
      1041 |     const form = new FormData();
      1042 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1043 |     form.append('anotherField', 'hello');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1040:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1054 | 
      1055 |   it('@UploadedFile with @BodyParam should return both the file and the body param', async () => {
    > 1056 |     expect.assertions(3);
           |            ^
      1057 |     const form = new FormData();
      1058 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1059 |     form.append('testParam', 'testParamOne');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1056:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile when required is used files must be provided

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFile when required is used files must be provided

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      1081 | 
      1082 |   it('@UploadedFile when required is used files must be provided', async () => {
    > 1083 |     expect.assertions(4);
           |            ^
      1084 |     const form = new FormData();
      1085 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1086 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1083:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles should provide uploaded files with the given name

    Request failed with status code 500

      at createError (node_modules/axios/lib/core/createError.js:16:15)
      at settle (node_modules/axios/lib/core/settle.js:17:12)
      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:260:11)
      at IncomingMessage.emit (node:events:539:35)
      at endReadableNT (node:internal/streams/readable:1344:12)
      at processTicksAndRejections (node:internal/process/task_queues:82:21)

  ●  › @UploadedFiles should provide uploaded files with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1102 | 
      1103 |   it('@UploadedFiles should provide uploaded files with the given name', async () => {
    > 1104 |     expect.assertions(3);
           |            ^
      1105 |     const form = new FormData();
      1106 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1107 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));

      at Object.<anonymous> (test/functional/action-params.spec.ts:1104:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)


Test Suites: 24 failed, 2 passed, 26 total
Tests:       165 failed, 17 passed, 182 total
Snapshots:   0 total
Time:        10.102 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (28 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided (1 ms)
      ✓ handle - null provided (17 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (32 ms)
    ✓ @Res writing directly to the response should work (5 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (4 ms)
    ✓ @SessionParam without middleware (24 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (4 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (7 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (5 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✓ @QueryParam should give a proper values from request query parameters (3 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (9 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (3 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (2 ms)
    ✓ @HeaderParam should fail with missing required params (2 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @CookieParam should give a proper values from request headers (2 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (4 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (4 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (23 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (15 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (9 ms)
      ✓ post respond with proper status code, headers and body content (3 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (1 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)
      ✓ should respond with 204 No Content when null returned in action (22 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (21 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (2 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (4 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (6 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (58 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (4 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (24 ms)
      ✓ post respond with proper status code, headers and body content (3 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (4 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (1 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (66 ms)
      ✓ with roles (14 ms)
      ✓ async (25 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (3 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (20 ms)
      ✓ with roles (3 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (5 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (3 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (58 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (4 ms)
        ✓ should contain param name on validation failed (16 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (17 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (13 ms)
      ✓ should fail (17 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (74 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (5 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (7 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (16 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (2 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (61 ms)
    using custom container should be possible
      ✓ custom container (5 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (8 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (8 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (34 ms)
      ✓ should return custom code when @OnNull (141 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (10 ms)
      ✓ should return custom code when @OnUndefined (12 ms)
      ✓ should return content-type in the response when @ContentType is used (3 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (15 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (22 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (3 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (2 ms)
      ✓ should handle errors in custom middlewares (19 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (29 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (25 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (17 ms)
      ✓ should call global error handler middleware (6 ms)
      ✓ should call error handler middleware if used (3 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (3 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (2 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (11 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1005 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (56 ms)
    should apply global options
      ✓ technical wrapper (4 ms)
    should apply local options
      ✓ technical wrapper (5 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (19 ms)
    ✓ should override controller options with action transformRequest option (4 ms)
    ✓ should override controller options with action transformResponse option (3 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (21 ms)
      ✓ when controller transform is enabled (5 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (14 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (21 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (2 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (21 ms)
      ✓ should send raw binary data from Buffer (3 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (13 ms)
      ✓ using override (5 ms)
      ✓ using original (3 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (2 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.573 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (42 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty
      ✓ handle - should process number parameters (1 ms)
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (13 ms)
    negative
      ✕ handle - throws error if the parameter is required (8 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (19 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (3 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)
      ✓ should respond with 204 No Content when null returned in action (15 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (20 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (4 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (2 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (2 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (3 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1005 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (22 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (7 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (12 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (3 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✓ @QueryParam should give a proper values from request query parameters (3 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (3 ms)
    ✓ @HeaderParam should fail with missing required params (3 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (4 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (1 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (10 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (5 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (17 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (4 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (11 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (5 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (4 ms)
    ✓ @UploadedFile when required is used files must be provided (7 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (4 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (8 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (11 ms)
      ✓ should return custom code when @OnNull (30 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (10 ms)
      ✓ should return content-type in the response when @ContentType is used (3 ms)
      ✓ should return content-type in the response when @ContentType is used (3 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (2 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (57 ms)
      ✓ with roles (14 ms)
      ✓ async (24 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (4 ms)
      ✓ async (12 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (33 ms)
      ✓ with roles (4 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (4 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (4 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (33 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (13 ms)
      ✓ should fail (17 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (8 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (3 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (2 ms)
      ✓ should handle errors in custom middlewares (22 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (57 ms)
    should apply global options
      ✓ technical wrapper (4 ms)
    should apply local options
      ✓ technical wrapper (4 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (56 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (9 ms)
      should pass the valid param after validation
        ✓ succeed (7 ms)
        ✓ should contain param name on validation failed (26 ms)
    local options
      ✓ should apply local options (7 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (66 ms)
    using custom container should be possible
      ✓ custom container (7 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (7 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (7 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (19 ms)
    ✓ should override controller options with action transformRequest option (5 ms)
    ✓ should override controller options with action transformResponse option (3 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (74 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (3 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (3 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (17 ms)
      ✓ when controller transform is enabled (5 ms)
      ✓ when controller transform is disabled (5 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (59 ms)
      ✓ get should respond with proper status code, headers and body content (5 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (2 ms)
      ✓ wrong route should respond with 404 error (3 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (12 ms)
    ✓ should build meta if the only derivative controller is given (1 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (21 ms)
      ✓ should call global error handler middleware (3 ms)
      ✓ should call error handler middleware if used (3 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (3 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (2 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (7 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (16 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (2 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (18 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (27 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (20 ms)
      ✓ should send raw binary data from Buffer (3 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (22 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (3 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (26 ms)
      ✓ using override (4 ms)
      ✓ using original (3 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (24 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (4 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.546 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (28 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided (1 ms)
      ✓ handle - null provided (13 ms)
    negative
      ✕ handle - throws error if the parameter is required (12 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (20 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (4 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)
      ✓ should respond with 204 No Content when null returned in action (18 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (20 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (5 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (2 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (503 ms)
      ✓ should respond with 500 if promise failed (504 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (2 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1004 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (22 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (12 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✓ @QueryParam should give a proper values from request query parameters (3 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (3 ms)
    ✓ @HeaderParam should fail with missing required params (2 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (4 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (1 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (9 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (5 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (17 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (11 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (6 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (62 ms)
    using custom container should be possible
      ✓ custom container (6 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (7 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (7 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (73 ms)
      ✓ with roles (14 ms)
      ✓ async (25 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (3 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (22 ms)
      ✓ with roles (4 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (4 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (4 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (61 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (3 ms)
        ✓ should contain param name on validation failed (16 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (18 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (27 ms)
      ✓ should fail (18 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (26 ms)
      ✓ should return custom code when @OnNull (32 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (6 ms)
      ✓ should return custom code when @OnUndefined (9 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (9 ms)
      ✓ should relocate to new location when @Location is used (2 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (52 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (14 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (18 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (24 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (29 ms)
      ✓ should handle errors in custom middlewares (36 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (57 ms)
    should apply global options
      ✓ technical wrapper (4 ms)
    should apply local options
      ✓ technical wrapper (5 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (20 ms)
      ✓ should call global error handler middleware (19 ms)
      ✓ should call global error handler middleware (4 ms)
      ✓ should call error handler middleware if used (2 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (3 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (2 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given
    ✓ should build meta both when autonomous and derivative controllers are given

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (75 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (3 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (7 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (16 ms)
      ✓ should return nullResultCode from defaults config (2 ms)
      ✓ should return status code from OnUndefined annotation (3 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (13 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (31 ms)
    ✓ should override controller options with action transformRequest option (4 ms)
    ✓ should override controller options with action transformResponse option (3 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (33 ms)
      ✓ when controller transform is enabled (5 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (22 ms)
      ✓ should call global error handler middleware (19 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (21 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (2 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (58 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (2 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (25 ms)
      ✓ using override (4 ms)
      ✓ using original (3 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (23 ms)
      ✓ should send raw binary data from Buffer (2 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (27 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (2 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.477 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (28 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (13 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (19 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (5 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)
      ✓ should respond with 204 No Content when null returned in action (5 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (29 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (4 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (2 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (2 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (3 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1005 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (22 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (2 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (14 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (4 ms)
    ✓ @QueryParam should give a proper values from request query parameters (3 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (5 ms)
    ✓ @HeaderParam should fail with missing required params (2 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (3 ms)
    ✓ @CookieParam should give a proper values from request headers (2 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (3 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (1 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (8 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (17 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (12 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (9 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (2 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (3 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (2 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (3 ms)
      ✓ should handle errors in custom middlewares (22 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (71 ms)
      ✓ with roles (14 ms)
      ✓ async (23 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (3 ms)
      ✓ with roles (3 ms)
      ✓ async (14 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (19 ms)
      ✓ with roles (5 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (10 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (4 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (19 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (28 ms)
      ✓ should fail (18 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (27 ms)
      ✓ should return custom code when @OnNull (30 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (8 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (4 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (60 ms)
    should apply global options
      ✓ technical wrapper (4 ms)
    should apply local options
      ✓ technical wrapper (4 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (14 ms)
      ✓ should call global error handler middleware (21 ms)
      ✓ should call global error handler middleware (7 ms)
      ✓ should call error handler middleware if used (5 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (5 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (6 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (63 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (4 ms)
        ✓ should contain param name on validation failed (15 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (60 ms)
    using custom container should be possible
      ✓ custom container (6 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (7 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (8 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (19 ms)
    ✓ should override controller options with action transformRequest option (5 ms)
    ✓ should override controller options with action transformResponse option (2 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (18 ms)
      ✓ when controller transform is enabled (4 ms)
      ✓ when controller transform is disabled (5 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (84 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (3 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (14 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (18 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (22 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (16 ms)
      ✓ should return nullResultCode from defaults config (2 ms)
      ✓ should return status code from OnUndefined annotation (3 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (60 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (5 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (3 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (27 ms)
      ✓ using override (4 ms)
      ✓ using original (3 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (22 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (3 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (22 ms)
      ✓ should send raw binary data from Buffer (3 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (37 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (2 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.721 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (28 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty
      ✓ handle - should process number parameters (1 ms)
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (14 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (20 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (5 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)
      ✓ should respond with 204 No Content when null returned in action (5 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (21 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (11 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (5 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (2 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (2 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (503 ms)
      ✓ should respond with 500 if promise failed (505 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (24 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (3 ms)
      ✓ interceptors should support promises (1003 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (11 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (3 ms)
    ✓ @SessionParam without middleware (22 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (11 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✓ @QueryParam should give a proper values from request query parameters (3 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (8 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (4 ms)
    ✓ @HeaderParam should fail with missing required params (3 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @CookieParam should give a proper values from request headers (2 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (4 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (4 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (20 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (4 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (12 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (5 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (5 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (4 ms)
    ✓ @UploadedFile when required is used files must be provided (7 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (4 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (18 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (13 ms)
      ✓ should fail (17 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (61 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (6 ms)
        ✓ should contain param name on validation failed (17 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (69 ms)
      ✓ with roles (13 ms)
      ✓ async (24 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (3 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (20 ms)
      ✓ with roles (3 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (6 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (16 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (25 ms)
      ✓ should return custom code when @OnNull (29 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (8 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (21 ms)
      ✓ should call global error handler middleware (23 ms)
      ✓ should call global error handler middleware (3 ms)
      ✓ should call error handler middleware if used (3 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (3 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (229 ms)
    should apply global options
      ✓ technical wrapper (7 ms)
    should apply local options
      ✓ technical wrapper (6 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (69 ms)
    using custom container should be possible
      ✓ custom container (7 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (7 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (8 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (20 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (2 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (3 ms)
      ✓ should handle errors in custom middlewares (21 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (77 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (3 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (3 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (8 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (18 ms)
      ✓ should return nullResultCode from defaults config (2 ms)
      ✓ should return status code from OnUndefined annotation (2 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (18 ms)
      ✓ when controller transform is enabled (5 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (26 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (58 ms)
      ✓ get should respond with proper status code, headers and body content (3 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (4 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (2 ms)
      ✓ wrong route should respond with 404 error (3 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (21 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (3 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (32 ms)
    ✓ should override controller options with action transformRequest option (5 ms)
    ✓ should override controller options with action transformResponse option (2 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (21 ms)
      ✓ should call global error handler middleware (21 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (25 ms)
      ✓ using override (4 ms)
      ✓ using original (4 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (39 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (21 ms)
      ✓ should send raw binary data from Buffer (2 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (4 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.596 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (28 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided (1 ms)
      ✓ handle - null provided (10 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (19 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (7 ms)
      ✓ route should work with string regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (503 ms)
      ✓ should respond with 500 if promise failed (504 ms)
      ✓ should respond with 204 No Content when null returned in action (5 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (22 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (16 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (4 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (3 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (9 ms)
      ✓ post respond with proper status code, headers and body content (3 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (2 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (5 ms)
      ✓ route should work with string regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (2 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1003 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (3 ms)
    ✓ @Param should give a param from route (4 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (22 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (10 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (3 ms)
    ✓ @QueryParam should give a proper values from request query parameters (2 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (1 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (3 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (2 ms)
    ✓ @HeaderParam should fail with missing required params (3 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (3 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (3 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (5 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (20 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (4 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (11 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (4 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (64 ms)
    should apply global options
      ✓ technical wrapper (4 ms)
    should apply local options
      ✓ technical wrapper (4 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (60 ms)
      ✓ with roles (14 ms)
      ✓ async (24 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (3 ms)
      ✓ with roles (4 ms)
      ✓ async (14 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (21 ms)
      ✓ with roles (6 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (19 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (5 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (62 ms)
    using custom container should be possible
      ✓ custom container (5 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (8 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (8 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (50 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (8 ms)
      ✓ should fail (16 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (11 ms)
      ✓ should return custom code when @OnNull (29 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (8 ms)
      ✓ should return custom code when @OnUndefined (9 ms)
      ✓ should return content-type in the response when @ContentType is used (1 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (2 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (67 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (10 ms)
      should pass the valid param after validation
        ✓ succeed (8 ms)
        ✓ should contain param name on validation failed (20 ms)
    local options
      ✓ should apply local options (24 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (20 ms)
      ✓ when controller transform is enabled (5 ms)
      ✓ when controller transform is disabled (4 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (9 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (2 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (2 ms)
      ✓ should handle errors in custom middlewares (22 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (20 ms)
      ✓ should call global error handler middleware (4 ms)
      ✓ should call error handler middleware if used (2 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (3 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (2 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (75 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (7 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (7 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (15 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (3 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (20 ms)
    ✓ should override controller options with action transformRequest option (6 ms)
    ✓ should override controller options with action transformResponse option (3 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (14 ms)
      ✓ using override (3 ms)
      ✓ using original (4 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (23 ms)
      ✓ should call global error handler middleware (17 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (26 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (21 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (3 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (68 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (2 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (37 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (22 ms)
      ✓ should send raw binary data from Buffer (2 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (4 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.618 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (28 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (14 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (20 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (5 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)
      ✓ should respond with 204 No Content when null returned in action (5 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (20 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (12 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (5 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (2 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (2 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (1 ms)
      ✓ should return result from a promise (505 ms)
      ✓ should respond with 500 if promise failed (505 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1003 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (24 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (10 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (5 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (5 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (13 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✓ @QueryParam should give a proper values from request query parameters (2 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (8 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (2 ms)
    ✓ @HeaderParam should fail with missing required params (2 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (5 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (3 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (4 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (21 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (12 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (5 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (5 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (56 ms)
      ✓ when controller transform is enabled (5 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (60 ms)
      ✓ with roles (17 ms)
      ✓ async (24 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (3 ms)
      ✓ with roles (4 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (32 ms)
      ✓ with roles (4 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (5 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (4 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (33 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (8 ms)
      ✓ should fail (16 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (85 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (4 ms)
        ✓ should contain param name on validation failed (14 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (11 ms)
      ✓ should return custom code when @OnNull (32 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (9 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (46 ms)
    should apply global options
      ✓ technical wrapper (16 ms)
    should apply local options
      ✓ technical wrapper (9 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (9 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (3 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (9 ms)
      ✓ should handle errors in custom middlewares (21 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (62 ms)
    using custom container should be possible
      ✓ custom container (6 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (7 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (7 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (10 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (19 ms)
      ✓ should call global error handler middleware (20 ms)
      ✓ should call global error handler middleware (4 ms)
      ✓ should call error handler middleware if used (2 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (3 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (2 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (16 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (5 ms)
      ✓ should return 400 from required paramOptions (15 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (2 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (37 ms)
    ✓ should override controller options with action transformRequest option (5 ms)
    ✓ should override controller options with action transformResponse option (4 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (78 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (3 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (5 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (94 ms)
      ✓ get should respond with proper status code, headers and body content (7 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (7 ms)
      ✓ wrong route should respond with 404 error (7 ms)
      ✓ wrong route should respond with 404 error (5 ms)
      ✓ wrong route should respond with 404 error (5 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (26 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (27 ms)
      ✓ using override (4 ms)
      ✓ using original (3 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (20 ms)
      ✓ should call global error handler middleware (18 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (37 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (22 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (2 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (21 ms)
      ✓ should send raw binary data from Buffer (2 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.676 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (26 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty
      ✓ handle - should process number parameters (1 ms)
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (14 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (20 ms)
      ✓ post respond with proper status code, headers and body content (4 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (3 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (5 ms)
      ✓ route should work with string regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (3 ms)
      ✓ should return result from a promise (503 ms)
      ✓ should respond with 500 if promise failed (504 ms)
      ✓ should respond with 204 No Content when null returned in action (5 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (30 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (2 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (5 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (3 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (2 ms)
      ✓ interceptors should support promises (1003 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (3 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (3 ms)
    ✓ @SessionParam without middleware (22 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (6 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (13 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (3 ms)
    ✓ @QueryParam should give a proper values from request query parameters (2 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (3 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (2 ms)
    ✓ @HeaderParam should fail with missing required params (2 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (3 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (3 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (9 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (17 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (12 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (6 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (72 ms)
      ✓ with roles (14 ms)
      ✓ async (24 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (3 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (20 ms)
      ✓ with roles (3 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (5 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (3 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (13 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (12 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (3 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (4 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (3 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (3 ms)
      ✓ should handle errors in custom middlewares (23 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (50 ms)
    should apply global options
      ✓ technical wrapper (12 ms)
    should apply local options
      ✓ technical wrapper (17 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (32 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (8 ms)
      ✓ should fail (16 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (33 ms)
      ✓ should return custom code when @OnNull (183 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (29 ms)
      ✓ should return custom code when @OnUndefined (13 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (2 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (64 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (6 ms)
        ✓ should contain param name on validation failed (15 ms)
    local options
      ✓ should apply local options (6 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (30 ms)
      ✓ when controller transform is enabled (4 ms)
      ✓ when controller transform is disabled (4 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (63 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (2 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (62 ms)
    using custom container should be possible
      ✓ custom container (5 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (8 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (7 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (80 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (3 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (11 ms)
    ✓ should build meta if the only derivative controller is given (1 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (20 ms)
    ✓ should override controller options with action transformRequest option (6 ms)
    ✓ should override controller options with action transformResponse option (3 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (9 ms)
      ✓ should call global error handler middleware (18 ms)
      ✓ should call global error handler middleware (5 ms)
      ✓ should call error handler middleware if used (3 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (3 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (23 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (20 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (3 ms)
      ✓ should return 400 from required paramOptions (15 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (3 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (25 ms)
      ✓ using override (4 ms)
      ✓ using original (3 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (23 ms)
      ✓ should call global error handler middleware (18 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (22 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (2 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (22 ms)
      ✓ should send raw binary data from Buffer (3 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.681 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (29 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (4 ms)
      ✓ handle - should process number parameters (1 ms)
      ✓ handle - undefined on empty object provided
      ✓ handle - null provided (14 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (19 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (5 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (3 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (5 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)
      ✓ should respond with 204 No Content when null returned in action (16 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (21 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (4 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (2 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (3 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (2 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (2 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (3 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (1 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (504 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (9 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (3 ms)
      ✓ interceptors should support promises (1004 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (23 ms)
    ✓ @Session should return a value from session (11 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (5 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (12 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (2 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (3 ms)
    ✓ @QueryParam should give a proper values from request query parameters (2 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (5 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (2 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (2 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (7 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (3 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (2 ms)
    ✓ @HeaderParam should fail with missing required params (3 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (3 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (3 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (12 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (9 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (16 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (3 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (12 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (5 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (4 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (11 ms)
      ✓ should return custom code when @OnNull (30 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (10 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (10 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (58 ms)
      ✓ with roles (14 ms)
      ✓ async (22 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (3 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (33 ms)
      ✓ with roles (3 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (5 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (3 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (66 ms)
    should apply global options
      ✓ technical wrapper (5 ms)
    should apply local options
      ✓ technical wrapper (4 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (18 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (8 ms)
      ✓ should fail (16 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (49 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (6 ms)
      should pass the valid param after validation
        ✓ succeed (4 ms)
        ✓ should contain param name on validation failed (15 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (34 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (5 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (13 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (5 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (20 ms)
      ✓ should handle errors in custom middlewares (68 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (14 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (78 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (5 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (7 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (21 ms)
      ✓ should call global error handler middleware (21 ms)
      ✓ should call global error handler middleware (4 ms)
      ✓ should call error handler middleware if used (3 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (3 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (58 ms)
    using custom container should be possible
      ✓ custom container (6 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (7 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (8 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (33 ms)
    ✓ should override controller options with action transformRequest option (4 ms)
    ✓ should override controller options with action transformResponse option (3 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (21 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (2 ms)
      ✓ should return 400 from required paramOptions (18 ms)
      ✓ should return nullResultCode from defaults config (2 ms)
      ✓ should return status code from OnUndefined annotation (3 ms)
      ✓ should mark arg optional from QueryParam annotation (4 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (35 ms)
      ✓ when controller transform is enabled (6 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (23 ms)
      ✓ should call global error handler middleware (17 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (26 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (59 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (3 ms)
      ✓ wrong route should respond with 404 error (2 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (21 ms)
      ✓ should send raw binary data from Buffer (3 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (26 ms)
      ✓ using override (4 ms)
      ✓ using original (4 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (23 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (9 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (3 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (2 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.6 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (34 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided (1 ms)
      ✓ handle - null provided (13 ms)
    negative
      ✕ handle - throws error if the parameter is required (7 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

PASS test/functional/controller-methods.spec.ts
    controller methods
      ✓ get should respond with proper status code, headers and body content (19 ms)
      ✓ post respond with proper status code, headers and body content (5 ms)
      ✓ put respond with proper status code, headers and body content (3 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (3 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (3 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (7 ms)
      ✓ route should work with string regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (503 ms)
      ✓ should respond with 500 if promise failed (515 ms)
      ✓ should respond with 204 No Content when null returned in action (5 ms)
      ✓ should respond with 404 Not Found text when undefined returned in action (23 ms)
      ✓ should respond with 404 Not Found JSON when undefined returned in action (3 ms)
      ✓ should respond with 200 and text/html even in json controller's method (2 ms)
      ✓ should respond with 200 and text/plain even in json controller's method (2 ms)
      ✓ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (4 ms)
      ✓ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (3 ms)

PASS test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✓ get should respond with proper status code, headers and body content (10 ms)
      ✓ post respond with proper status code, headers and body content (2 ms)
      ✓ put respond with proper status code, headers and body content (2 ms)
      ✓ patch respond with proper status code, headers and body content (3 ms)
      ✓ delete respond with proper status code, headers and body content (2 ms)
      ✓ head respond with proper status code, headers and body content (3 ms)
      ✓ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✓ custom method (delete) respond with proper status code, headers and body content (2 ms)
      ✓ route should work with parameter (3 ms)
      ✓ route should work with regexp parameter (2 ms)
      ✓ should respond with 404 when regexp does not match (4 ms)
      ✓ route should work with string regexp parameter (3 ms)
      ✓ should respond with 404 when regexp does not match (2 ms)
      ✓ should return result from a promise (504 ms)
      ✓ should respond with 500 if promise failed (505 ms)

PASS test/functional/interceptors.spec.ts
    interceptor
      ✓ custom interceptor function should replace returned content (8 ms)
      ✓ custom interceptor class should replace returned content (3 ms)
      ✓ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✓ global interceptor class should replace returned content (3 ms)
      ✓ interceptors should support promises (1004 ms)

PASS test/functional/action-params.spec.ts
    ✓ @Req and @Res should be provided as Request and Response objects (10 ms)
    ✓ @Res writing directly to the response should work (4 ms)
    ✓ @Param should give a param from route (3 ms)
    ✓ @Param multiple params should give a proper values from route (2 ms)
    ✓ @SessionParam without middleware (23 ms)
    ✓ @Session should return a value from session (10 ms)
    ✓ @Session(param) should allow to inject empty property (3 ms)
    ✓ @QueryParams should give a proper values from request's query parameters (9 ms)
    ✓ @QueryParams should give a proper values from request's query parameters and one multiple value (14 ms)
    ✓ @QueryParams should give a proper values from request's query with validate whitelist option on (4 ms)
    ✓ @QueryParams should give a proper values from request's query parameters with nested json (4 ms)
    ✓ @QueryParams should not validate request query parameters when it's turned off in validator options (3 ms)
    ✓ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✓ @QueryParam should give a proper values from request query parameters (2 ms)
    ✓ @QueryParam should give an array of string with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of string with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of number with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of number with multiple query parameters (3 ms)
    ✓ @QueryParam should give an array of date with only one query parameter (3 ms)
    ✓ @QueryParam should give an array of date with multiple query parameters (3 ms)
    ✓ @QueryParam when required params must be provided and they should not be empty (9 ms)
    ✓ @QueryParam when the type is Date then it should be parsed (2 ms)
    ✓ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (2 ms)
    ✓ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @HeaderParam should give a proper values from request headers (2 ms)
    ✓ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✓ @HeaderParam should fail with invalid request options (2 ms)
    ✓ @HeaderParam should fail with missing required params (3 ms)
    ✓ for @HeaderParam when parseJson flag is used query param must be converted to object (3 ms)
    ✓ @CookieParam should give a proper values from request headers (3 ms)
    ✓ @CookieParam when required is params must be provided and they should not be empty (3 ms)
    ✓ @CookieParam when parseJson flag is used query param must be converted to object (2 ms)
    ✓ @Body should provide a request body (15 ms)
    ✓ @Body should fail if required body was not provided (6 ms)
    ✓ @Body should provide a json object for json-typed controllers and actions (3 ms)
    ✓ @Body should fail if required body was not provided for json-typed controllers and actions (4 ms)
    ✓ @BodyParam should provide a json object for json-typed controllers and actions (2 ms)
    ✓ @BodyParam should fail if required body was not provided for json-typed controllers and actions (17 ms)
    ✓ @Body using application/x-www-form-urlencoded should handle url encoded form data (4 ms)
    ✓ @UploadedFile using multipart/form-data should provide uploaded file with the given name (11 ms)
    ✓ @UploadedFile with @Body should return both the file and the body (6 ms)
    ✓ @UploadedFile with @BodyParam should return both the file and the body param (4 ms)
    ✓ @UploadedFile with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFile when required is used files must be provided (6 ms)
    ✓ @UploadedFiles should provide uploaded files with the given name (5 ms)
    ✓ @UploadedFiles with passed uploading options (limit) should throw an error (5 ms)
    ✓ @UploadedFiles when required is used files must be provided (4 ms)

PASS test/functional/express-middlewares.spec.ts
    express middlewares
      ✓ should call a global middlewares (9 ms)
      ✓ should use a custom middleware when @UseBefore or @UseAfter is used (2 ms)
      ✓ should call middleware and call it before controller action when @UseBefore is used (3 ms)
      ✓ should call middleware and call it after controller action when @UseAfter is used (2 ms)
      ✓ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (2 ms)
      ✓ should handle errors in custom middlewares (23 ms)

PASS test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✓ without roles (73 ms)
      ✓ with roles (14 ms)
      ✓ async (23 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✓ without roles (4 ms)
      ✓ with roles (3 ms)
      ✓ async (13 ms)
    Authorized Decorators Http Status Code
      ✓ without roles (20 ms)
      ✓ with roles (5 ms)
    Authorization checker allows to throw (async)
      ✓ custom errors (6 ms)
    Authorization checker allows to throw (sync)
      ✓ custom errors (17 ms)

PASS test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✓ should load all controllers (32 ms)
    loading all express middlewares and error handlers from the given directories
      ✓ should succeed (14 ms)
      ✓ should fail (19 ms)

PASS test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✓ should return httpCode set by @HttpCode decorator (12 ms)
      ✓ should return custom code when @OnNull (29 ms)
      ✓ should return custom error message and code when @OnUndefined is used with Error class (7 ms)
      ✓ should return custom code when @OnUndefined (8 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return content-type in the response when @ContentType is used (2 ms)
      ✓ should return response with custom headers when @Header is used (3 ms)
      ✓ should relocate to new location when @Location is used (3 ms)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (12 ms)
    ✓ should build meta if the only derivative controller is given (1 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✓ technical wrapper (161 ms)
    should apply global options
      ✓ technical wrapper (47 ms)
    should apply local options
      ✓ technical wrapper (5 ms)

PASS test/functional/class-validator-options.spec.ts
    no options
      ✓ should not use any options if not set (61 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✓ succeed (5 ms)
      should pass the valid param after validation
        ✓ succeed (4 ms)
        ✓ should contain param name on validation failed (21 ms)
    local options
      ✓ should apply local options (5 ms)

PASS test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✓ useClassTransformer by default must be set to true (76 ms)
      when useClassTransformer is set to true
        ✓ useClassTransformer is enabled (4 ms)
      when useClassTransformer is set to false
        ✓ useClassTransformer is disabled (4 ms)
      when routePrefix is used all controller routes should be appended by it
        ✓ routePrefix is enabled (6 ms)

PASS test/functional/controller-options.spec.ts
    controller options
      ✓ controller transform is enabled by default (32 ms)
      ✓ when controller transform is enabled (4 ms)
      ✓ when controller transform is disabled (3 ms)

PASS test/functional/container.spec.ts
    using typedi container should be possible
      ✓ typedi container (59 ms)
    using custom container should be possible
      ✓ custom container (5 ms)
    using custom container with fallback should be possible
      ✓ custom container with fallback (8 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✓ custom container with fallback and fallback on throw error (7 ms)

PASS test/functional/express-error-handling.spec.ts
    express error handling
      ✓ should not call global error handler middleware if there was no errors (19 ms)
      ✓ should call global error handler middleware (18 ms)
      ✓ should call global error handler middleware (5 ms)
      ✓ should call error handler middleware if used (4 ms)
      ✓ should not execute next middleware if soft error handled specifically and stopped error bubbling (4 ms)
      ✓ should process JsonErrors by their toJSON method if it exists (2 ms)

PASS test/functional/defaults.spec.ts
    defaults
      ✓ should return undefinedResultCode from defaults config for void function (20 ms)
      ✓ should return undefinedResultCode from defaults config for promise void function (3 ms)
      ✓ should return 400 from required paramOptions (15 ms)
      ✓ should return nullResultCode from defaults config (3 ms)
      ✓ should return status code from OnUndefined annotation (2 ms)
      ✓ should mark arg optional from QueryParam annotation (3 ms)

PASS test/functional/action-options.spec.ts
    ✓ should use controller options when action transform options are not set (33 ms)
    ✓ should override controller options with action transformRequest option (6 ms)
    ✓ should override controller options with action transformResponse option (2 ms)

PASS test/functional/render-decorator.spec.ts
    template rendering
      ✓ should render a template and use given variables (27 ms)
      ✓ should render a template with given variables and locals variables (4 ms)

PASS test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✓ should not call global error handler middleware if there was no errors (21 ms)
      ✓ should call global error handler middleware (18 ms)

PASS test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✓ using template (27 ms)
      ✓ using override (4 ms)
      ✓ using original (3 ms)

PASS test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✓ get should respond with proper status code, headers and body content (59 ms)
      ✓ get should respond with proper status code, headers and body content (4 ms)
      ✓ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✓ wrong route should respond with 404 error (4 ms)
      ✓ wrong route should respond with 404 error (2 ms)
      ✓ wrong route should respond with 404 error (3 ms)

PASS test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✓ should call middlewares in order defined by items order (21 ms)
    specified by priority option
      ✓ should call middlewares in order defined by priority parameter of decorator (2 ms)

PASS test/functional/special-result-send.spec.ts
    special result value treatment
      ✓ should pipe stream to response (20 ms)
      ✓ should send raw binary data from Buffer (3 ms)
      ✓ should send raw binary data from UIntArray (2 ms)

PASS test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✓ should call global error handler middleware with CustomError (38 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (2 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)


Test Suites: 1 failed, 25 passed, 26 total
Tests:       1 failed, 181 passed, 182 total
Snapshots:   0 total
Time:        12.537 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    ✕ encountered a declaration exception (12 ms)

  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
    controller methods
      ✕ get should respond with proper status code, headers and body content (12 ms)
      ✕ post respond with proper status code, headers and body content (2 ms)
      ✕ put respond with proper status code, headers and body content (2 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (2 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (1 ms)
      ✕ should respond with 204 No Content when null returned in action (1 ms)
      ✕ should respond with 404 Not Found text when undefined returned in action (2 ms)
      ✕ should respond with 404 Not Found JSON when undefined returned in action (1 ms)
      ✕ should respond with 200 and text/html even in json controller's method (1 ms)
      ✕ should respond with 200 and text/plain even in json controller's method (1 ms)
      ✕ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (1 ms)
      ✕ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (1 ms)

  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✕ get should respond with proper status code, headers and body content (17 ms)
      ✕ post respond with proper status code, headers and body content (1 ms)
      ✕ put respond with proper status code, headers and body content (1 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (1 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (1 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (1 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (2 ms)
      ✕ route should work with string regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (1 ms)
      ✕ should respond with 500 if promise failed (1 ms)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
    interceptor
      ✕ custom interceptor function should replace returned content (4 ms)
      ✕ custom interceptor class should replace returned content (1 ms)
      ✕ custom interceptor class used on the whole controller should replace returned content (1 ms)
      ✕ global interceptor class should replace returned content (1 ms)
      ✕ interceptors should support promises (2 ms)

  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: require(...) is not a function

      14 |  */
      15 | 
    > 16 | var finalhandler = require('finalhandler');
         |                    ^
      17 | var Router = require('./router');
      18 | var methods = require('methods');
      19 | var middleware = require('./middleware/init');

      at Object.<anonymous> (../../../Variants/express/variant3/express/node_modules/finalhandler/index.js:14:29)
      at Object.<anonymous> (../../../Variants/express/variant3/express/lib/application.js:16:20)

FAIL test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✕ technical wrapper (5 ms)
    should apply global options
      ✕ technical wrapper (1 ms)
    should apply local options
      ✕ technical wrapper (1 ms)

  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✕ without roles (39 ms)
      ✕ with roles (2 ms)
      ✕ async (1 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
      ✕ async (1 ms)
    Authorized Decorators Http Status Code
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
    Authorization checker allows to throw (async)
      ✕ custom errors (2 ms)
    Authorization checker allows to throw (sync)
      ✕ custom errors (2 ms)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✕ should load all controllers (6 ms)
    loading all express middlewares and error handlers from the given directories
      ✕ should succeed (1 ms)
      ✕ should fail (2 ms)

  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✕ should return httpCode set by @HttpCode decorator (18 ms)
      ✕ should return custom code when @OnNull (1 ms)
      ✕ should return custom error message and code when @OnUndefined is used with Error class (2 ms)
      ✕ should return custom code when @OnUndefined (1 ms)
      ✕ should return content-type in the response when @ContentType is used (1 ms)
      ✕ should return content-type in the response when @ContentType is used (1 ms)
      ✕ should return response with custom headers when @Header is used (1 ms)
      ✕ should relocate to new location when @Location is used (1 ms)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
    no options
      ✕ should not use any options if not set (42 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✕ succeed (3 ms)
      should pass the valid param after validation
        ✕ succeed (3 ms)
        ✕ should contain param name on validation failed (2 ms)
    local options
      ✕ should apply local options (2 ms)

  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
    express middlewares
      ✕ should call a global middlewares (17 ms)
      ✕ should use a custom middleware when @UseBefore or @UseAfter is used (1 ms)
      ✕ should call middleware and call it before controller action when @UseBefore is used (2 ms)
      ✕ should call middleware and call it after controller action when @UseAfter is used (1 ms)
      ✕ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (1 ms)
      ✕ should handle errors in custom middlewares (2 ms)

  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✕ useClassTransformer by default must be set to true (42 ms)
      when useClassTransformer is set to true
        ✕ useClassTransformer is enabled (3 ms)
      when useClassTransformer is set to false
        ✕ useClassTransformer is disabled (2 ms)
      when routePrefix is used all controller routes should be appended by it
        ✕ routePrefix is enabled (2 ms)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
    ✕ should use controller options when action transform options are not set (20 ms)
    ✕ should override controller options with action transformRequest option (2 ms)
    ✕ should override controller options with action transformResponse option (3 ms)

  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
    express error handling
      ✕ should not call global error handler middleware if there was no errors (5 ms)
      ✕ should call global error handler middleware (4 ms)
      ✕ should call global error handler middleware (11 ms)
      ✕ should call error handler middleware if used (2 ms)
      ✕ should not execute next middleware if soft error handled specifically and stopped error bubbling (1 ms)
      ✕ should process JsonErrors by their toJSON method if it exists (2 ms)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (28 ms)
    ✓ should build meta if the only derivative controller is given (3 ms)
    ✓ should build meta if the only autonomous controller is given
    ✓ should build meta both when autonomous and derivative controllers are given

FAIL test/functional/container.spec.ts
    using typedi container should be possible
      ✕ typedi container (33 ms)
    using custom container should be possible
      ✕ custom container (5 ms)
    using custom container with fallback should be possible
      ✕ custom container with fallback (4 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✕ custom container with fallback and fallback on throw error (4 ms)

  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
    defaults
      ✕ should return undefinedResultCode from defaults config for void function (5 ms)
      ✕ should return undefinedResultCode from defaults config for promise void function (1 ms)
      ✕ should return 400 from required paramOptions (2 ms)
      ✕ should return nullResultCode from defaults config (1 ms)
      ✕ should return status code from OnUndefined annotation (1 ms)
      ✕ should mark arg optional from QueryParam annotation (1 ms)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
    controller options
      ✕ controller transform is enabled by default (6 ms)
      ✕ when controller transform is enabled (2 ms)
      ✕ when controller transform is disabled (2 ms)

  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✕ using template (18 ms)
      ✕ using override (1 ms)
      ✕ using original (1 ms)

  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: require(...) is not a function

      14 |  */
      15 | 
    > 16 | var finalhandler = require('finalhandler');
         |                    ^
      17 | var Router = require('./router');
      18 | var methods = require('methods');
      19 | var middleware = require('./middleware/init');

      at Object.<anonymous> (../../../Variants/express/variant3/express/node_modules/finalhandler/index.js:14:29)
      at Object.<anonymous> (../../../Variants/express/variant3/express/lib/application.js:16:20)

FAIL test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✕ should not call global error handler middleware if there was no errors (5 ms)
      ✕ should call global error handler middleware (5 ms)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✕ should call middlewares in order defined by items order (4 ms)
    specified by priority option
      ✕ should call middlewares in order defined by priority parameter of decorator (1 ms)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✕ get should respond with proper status code, headers and body content (37 ms)
      ✕ get should respond with proper status code, headers and body content (2 ms)
      ✕ get should respond with proper status code, headers and body content - 2nd pass (1 ms)
      ✕ wrong route should respond with 404 error (1 ms)
      ✕ wrong route should respond with 404 error (2 ms)
      ✕ wrong route should respond with 404 error (2 ms)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✕ should call global error handler middleware with CustomError (19 ms)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/special-result-send.spec.ts
    special result value treatment
      ✕ should pipe stream to response (5 ms)
      ✕ should send raw binary data from Buffer (2 ms)
      ✕ should send raw binary data from UIntArray (1 ms)

  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: require(...) is not a function

      14 |  */
      15 | 
    > 16 | var finalhandler = require('finalhandler');
         |                    ^
      17 | var Router = require('./router');
      18 | var methods = require('methods');
      19 | var middleware = require('./middleware/init');

      at Object.<anonymous> (../../../Variants/express/variant3/express/node_modules/finalhandler/index.js:14:29)
      at Object.<anonymous> (../../../Variants/express/variant3/express/lib/application.js:16:20)

FAIL test/functional/class-transformer-options.spec.ts
  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: require(...) is not a function

      14 |  */
      15 | 
    > 16 | var finalhandler = require('finalhandler');
         |                    ^
      17 | var Router = require('./router');
      18 | var methods = require('methods');
      19 | var middleware = require('./middleware/init');

      at Object.<anonymous> (../../../Variants/express/variant3/express/node_modules/finalhandler/index.js:14:29)
      at Object.<anonymous> (../../../Variants/express/variant3/express/lib/application.js:16:20)

FAIL test/functional/express-custom-error-handling.spec.ts
  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/special-result-send.spec.ts
  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)


Test Suites: 24 failed, 2 passed, 26 total
Tests:       121 failed, 6 passed, 127 total
Snapshots:   0 total
Time:        8.748 s, estimated 13 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    ✕ encountered a declaration exception (13 ms)

  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
    controller methods
      ✕ get should respond with proper status code, headers and body content (12 ms)
      ✕ post respond with proper status code, headers and body content (2 ms)
      ✕ put respond with proper status code, headers and body content (2 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (2 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (1 ms)
      ✕ should respond with 204 No Content when null returned in action (1 ms)
      ✕ should respond with 404 Not Found text when undefined returned in action (2 ms)
      ✕ should respond with 404 Not Found JSON when undefined returned in action (1 ms)
      ✕ should respond with 200 and text/html even in json controller's method (1 ms)
      ✕ should respond with 200 and text/plain even in json controller's method (1 ms)
      ✕ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (1 ms)
      ✕ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (1 ms)

  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
    express error handling
      ✕ should not call global error handler middleware if there was no errors (17 ms)
      ✕ should call global error handler middleware (3 ms)
      ✕ should call global error handler middleware (1 ms)
      ✕ should call error handler middleware if used (2 ms)
      ✕ should not execute next middleware if soft error handled specifically and stopped error bubbling (1 ms)
      ✕ should process JsonErrors by their toJSON method if it exists (2 ms)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✕ get should respond with proper status code, headers and body content (3 ms)
      ✕ post respond with proper status code, headers and body content (1 ms)
      ✕ put respond with proper status code, headers and body content (1 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (1 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (1 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (1 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (2 ms)
      ✕ route should work with string regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (1 ms)
      ✕ should respond with 500 if promise failed (1 ms)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✕ without roles (39 ms)
      ✕ with roles (2 ms)
      ✕ async (2 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✕ without roles (19 ms)
      ✕ with roles (2 ms)
      ✕ async (2 ms)
    Authorized Decorators Http Status Code
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
    Authorization checker allows to throw (async)
      ✕ custom errors (2 ms)
    Authorization checker allows to throw (sync)
      ✕ custom errors (2 ms)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
    interceptor
      ✕ custom interceptor function should replace returned content (4 ms)
      ✕ custom interceptor class should replace returned content (1 ms)
      ✕ custom interceptor class used on the whole controller should replace returned content (2 ms)
      ✕ global interceptor class should replace returned content (1 ms)
      ✕ interceptors should support promises (1 ms)

  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
    no options
      ✕ should not use any options if not set (52 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✕ succeed (2 ms)
      should pass the valid param after validation
        ✕ succeed (2 ms)
        ✕ should contain param name on validation failed (3 ms)
    local options
      ✕ should apply local options (2 ms)

  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
    using typedi container should be possible
      ✕ typedi container (59 ms)
    using custom container should be possible
      ✕ custom container (4 ms)
    using custom container with fallback should be possible
      ✕ custom container with fallback (3 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✕ custom container with fallback and fallback on throw error (3 ms)

  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✕ should return httpCode set by @HttpCode decorator (5 ms)
      ✕ should return custom code when @OnNull (2 ms)
      ✕ should return custom error message and code when @OnUndefined is used with Error class (1 ms)
      ✕ should return custom code when @OnUndefined (1 ms)
      ✕ should return content-type in the response when @ContentType is used (2 ms)
      ✕ should return content-type in the response when @ContentType is used (1 ms)
      ✕ should return response with custom headers when @Header is used (1 ms)
      ✕ should relocate to new location when @Location is used (1 ms)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
    express middlewares
      ✕ should call a global middlewares (6 ms)
      ✕ should use a custom middleware when @UseBefore or @UseAfter is used (1 ms)
      ✕ should call middleware and call it before controller action when @UseBefore is used (1 ms)
      ✕ should call middleware and call it after controller action when @UseAfter is used (1 ms)
      ✕ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (2 ms)
      ✕ should handle errors in custom middlewares (1 ms)

  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✕ useClassTransformer by default must be set to true (55 ms)
      when useClassTransformer is set to true
        ✕ useClassTransformer is enabled (2 ms)
      when useClassTransformer is set to false
        ✕ useClassTransformer is disabled (2 ms)
      when routePrefix is used all controller routes should be appended by it
        ✕ routePrefix is enabled (2 ms)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✕ get should respond with proper status code, headers and body content (56 ms)
      ✕ get should respond with proper status code, headers and body content (2 ms)
      ✕ get should respond with proper status code, headers and body content - 2nd pass (2 ms)
      ✕ wrong route should respond with 404 error (2 ms)
      ✕ wrong route should respond with 404 error (1 ms)
      ✕ wrong route should respond with 404 error (2 ms)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✕ technical wrapper (5 ms)
    should apply global options
      ✕ technical wrapper (2 ms)
    should apply local options
      ✕ technical wrapper (3 ms)

  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✕ should call global error handler middleware with CustomError (7 ms)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/defaults.spec.ts
    defaults
      ✕ should return undefinedResultCode from defaults config for void function (6 ms)
      ✕ should return undefinedResultCode from defaults config for promise void function (1 ms)
      ✕ should return 400 from required paramOptions (1 ms)
      ✕ should return nullResultCode from defaults config (2 ms)
      ✕ should return status code from OnUndefined annotation (1 ms)
      ✕ should mark arg optional from QueryParam annotation (1 ms)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✕ should load all controllers (6 ms)
    loading all express middlewares and error handlers from the given directories
      ✕ should succeed (1 ms)
      ✕ should fail (1 ms)

  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✕ should not call global error handler middleware if there was no errors (7 ms)
      ✕ should call global error handler middleware (4 ms)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
    ✕ should use controller options when action transform options are not set (17 ms)
    ✕ should override controller options with action transformRequest option (1 ms)
    ✕ should override controller options with action transformResponse option (2 ms)

  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✕ should call middlewares in order defined by items order (15 ms)
    specified by priority option
      ✕ should call middlewares in order defined by priority parameter of decorator (1 ms)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✕ using template (4 ms)
      ✕ using override (1 ms)
      ✕ using original (1 ms)

  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
    controller options
      ✕ controller transform is enabled by default (6 ms)
      ✕ when controller transform is enabled (2 ms)
      ✕ when controller transform is disabled (3 ms)

  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
    special result value treatment
      ✕ should pipe stream to response (4 ms)
      ✕ should send raw binary data from Buffer (2 ms)
      ✕ should send raw binary data from UIntArray (1 ms)

  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (25 ms)
    ✓ should build meta if the only derivative controller is given (2 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (4 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: inherits is not a function

      at createHttpErrorConstructor (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:117:3)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:27:28)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/send/index.js:15:19)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: inherits is not a function

      at createHttpErrorConstructor (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:117:3)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:27:28)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/send/index.js:15:19)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › encountered a declaration exception

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Suite.<anonymous> (test/ActionParameterHandler.spec.ts:53:18)
      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:9:1)

FAIL test/functional/controller-methods.spec.ts
  ●  › controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-methods.spec.ts:153:23)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
  ●  › express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:116:23)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
  ●  › json-controller methods › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:117:23)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:42:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:100:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:150:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:191:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:226:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
  ●  › interceptor › custom interceptor function should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/interceptors.spec.ts:83:23)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
  ●  › no options › should not use any options if not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:59:23)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:120:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:167:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:240:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/container.spec.ts
  ●  › using typedi container should be possible › typedi container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:69:23)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:177:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:298:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/container.spec.ts:434:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:132:23)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
  ●  › express middlewares › should call a global middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:133:23)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:47:25)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:82:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:118:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/global-options.spec.ts:154:25)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:39:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
  ●  › should not use any options if not set › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:59:23)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:115:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:160:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:57:23)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/defaults.spec.ts
  ●  › defaults › should return undefinedResultCode from defaults config for void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/defaults.spec.ts:59:23)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
  ●  › loading all controllers from the given directories › should load all controllers

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:16:23)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:76:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:50:23)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
  ●  › should use controller options when action transform options are not set

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/action-options.spec.ts:52:18)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
  ●  › loaded direct from array › should call middlewares in order defined by items order

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:57:23)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:116:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
  ●  › dynamic redirect › using template

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:49:23)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
  ●  › controller options › controller transform is enabled by default

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/controller-options.spec.ts:60:23)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
  ●  › special result value treatment › should pipe stream to response

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    express package was not found installed. Try to install it: npm install express --save

      437 |           this.express = require('express')();
      438 |         } catch (e) {
    > 439 |           throw new Error('express package was not found installed. Try to install it: npm install express --save');
          |                 ^
      440 |         }
      441 |       }
      442 |     } else {

      at ExpressDriver.loadExpress (src/driver/express/ExpressDriver.ts:439:17)
      at new ExpressDriver (src/driver/express/ExpressDriver.ts:31:10)
      at Object.createExpressServer (src/index.ts:124:18)
      at Object.<anonymous> (test/functional/special-result-send.spec.ts:43:23)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ● Test suite failed to run

    TypeError: inherits is not a function

      at createHttpErrorConstructor (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:117:3)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:27:28)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/send/index.js:15:19)

FAIL test/functional/action-params.spec.ts
  ● Test suite failed to run

    TypeError: inherits is not a function

      at createHttpErrorConstructor (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:117:3)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/http-errors/index.js:27:28)
      at Object.<anonymous> (../../../Variants/express/variant2/express/node_modules/send/index.js:15:19)


Test Suites: 24 failed, 2 passed, 26 total
Tests:       121 failed, 6 passed, 127 total
Snapshots:   0 total
Time:        9.134 s
Ran all test suites.
ts-jest[config] (WARN) The option `tsConfig` is deprecated and will be removed in ts-jest 27, use `tsconfig` instead
FAIL test/ActionParameterHandler.spec.ts
  ActionParameterHandler
    positive
      ✓ handle - should process string parameters (32 ms)
      ✓ handle - should process string parameters, returns empty if a given string is empty (1 ms)
      ✓ handle - should process number parameters
      ✓ handle - undefined on empty object provided (1 ms)
      ✓ handle - null provided (13 ms)
    negative
      ✕ handle - throws error if the parameter is required (8 ms)
      ✓ handle - throws error if the parameter is required, type file provided (1 ms)

  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

FAIL test/functional/controller-methods.spec.ts
    controller methods
      ✕ get should respond with proper status code, headers and body content (12 ms)
      ✕ post respond with proper status code, headers and body content (2 ms)
      ✕ put respond with proper status code, headers and body content (2 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (2 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (2 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (1 ms)
      ✕ route should work with regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (2 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (2 ms)
      ✕ should respond with 500 if promise failed (1 ms)
      ✕ should respond with 204 No Content when null returned in action (1 ms)
      ✕ should respond with 404 Not Found text when undefined returned in action (2 ms)
      ✕ should respond with 404 Not Found JSON when undefined returned in action (1 ms)
      ✕ should respond with 200 and text/html even in json controller's method (1 ms)
      ✕ should respond with 200 and text/plain even in json controller's method (1 ms)
      ✕ should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method (1 ms)
      ✕ should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method (1 ms)

  ●  › controller methods › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
    ✕ should use controller options when action transform options are not set (17 ms)
    ✕ should override controller options with action transformRequest option (1 ms)
    ✕ should override controller options with action transformResponse option (1 ms)

  ●  › should use controller options when action transform options are not set

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
    json-controller methods
      ✕ get should respond with proper status code, headers and body content (4 ms)
      ✕ post respond with proper status code, headers and body content (1 ms)
      ✕ put respond with proper status code, headers and body content (1 ms)
      ✕ patch respond with proper status code, headers and body content (1 ms)
      ✕ delete respond with proper status code, headers and body content (1 ms)
      ✕ head respond with proper status code, headers and body content (1 ms)
      ✕ custom method (post) respond with proper status code, headers and body content (1 ms)
      ✕ custom method (delete) respond with proper status code, headers and body content (1 ms)
      ✕ route should work with parameter (1 ms)
      ✕ route should work with regexp parameter (7 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ route should work with string regexp parameter (1 ms)
      ✕ should respond with 404 when regexp does not match (1 ms)
      ✕ should return result from a promise (1 ms)
      ✕ should respond with 500 if promise failed (1 ms)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
    Controller responds with value when Authorization succeeds (async)
      ✕ without roles (78 ms)
      ✕ with roles (3 ms)
      ✕ async (2 ms)
    Controller responds with value when Authorization succeeds (sync)
      ✕ without roles (3 ms)
      ✕ with roles (2 ms)
      ✕ async (2 ms)
    Authorized Decorators Http Status Code
      ✕ without roles (2 ms)
      ✕ with roles (2 ms)
    Authorization checker allows to throw (async)
      ✕ custom errors (3 ms)
    Authorization checker allows to throw (sync)
      ✕ custom errors (2 ms)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
    express error handling
      ✕ should not call global error handler middleware if there was no errors (4 ms)
      ✕ should call global error handler middleware (3 ms)
      ✕ should call global error handler middleware (2 ms)
      ✕ should call error handler middleware if used (13 ms)
      ✕ should not execute next middleware if soft error handled specifically and stopped error bubbling (2 ms)
      ✕ should process JsonErrors by their toJSON method if it exists (1 ms)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
    custom express global before middleware error handling
      ✕ should call global error handler middleware with CustomError (21 ms)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/container.spec.ts
    using typedi container should be possible
      ✕ typedi container (83 ms)
    using custom container should be possible
      ✕ custom container (4 ms)
    using custom container with fallback should be possible
      ✕ custom container with fallback (3 ms)
    using custom container with fallback and fallback on throw error should be possible
      ✕ custom container with fallback and fallback on throw error (4 ms)

  ●  › using typedi container should be possible › typedi container

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
    controller > base routes functionality
      ✕ get should respond with proper status code, headers and body content (78 ms)
      ✕ get should respond with proper status code, headers and body content (2 ms)
      ✕ get should respond with proper status code, headers and body content - 2nd pass (3 ms)
      ✕ wrong route should respond with 404 error (2 ms)
      ✕ wrong route should respond with 404 error (2 ms)
      ✕ wrong route should respond with 404 error (5 ms)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
    special result value treatment
      ✕ should pipe stream to response (6 ms)
      ✕ should send raw binary data from Buffer (1 ms)
      ✕ should send raw binary data from UIntArray (1 ms)

  ●  › special result value treatment › should pipe stream to response

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
    other controller decorators
      ✕ should return httpCode set by @HttpCode decorator (6 ms)
      ✕ should return custom code when @OnNull (2 ms)
      ✕ should return custom error message and code when @OnUndefined is used with Error class (2 ms)
      ✕ should return custom code when @OnUndefined (2 ms)
      ✕ should return content-type in the response when @ContentType is used (2 ms)
      ✕ should return content-type in the response when @ContentType is used (2 ms)
      ✕ should return response with custom headers when @Header is used (2 ms)
      ✕ should relocate to new location when @Location is used (2 ms)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
    express middlewares
      ✕ should call a global middlewares (4 ms)
      ✕ should use a custom middleware when @UseBefore or @UseAfter is used (1 ms)
      ✕ should call middleware and call it before controller action when @UseBefore is used (12 ms)
      ✕ should call middleware and call it after controller action when @UseAfter is used (2 ms)
      ✕ should call before middleware and call after middleware when @UseAfter and @UseAfter are used (1 ms)
      ✕ should handle errors in custom middlewares (1 ms)

  ●  › express middlewares › should call a global middlewares

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
    no options
      ✕ should not use any options if not set (77 ms)
    global options
      should merge local validation options with global validation options prioritizing local
        ✕ succeed (2 ms)
      should pass the valid param after validation
        ✕ succeed (2 ms)
        ✕ should contain param name on validation failed (3 ms)
    local options
      ✕ should apply local options (2 ms)

  ●  › no options › should not use any options if not set

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
    should not use any options if not set
      ✕ technical wrapper (4 ms)
    should apply global options
      ✕ technical wrapper (2 ms)
    should apply local options
      ✕ technical wrapper (1 ms)

  ●  › should not use any options if not set › technical wrapper

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
    routing-controllers global options
      useClassTransformer default value
        ✕ useClassTransformer by default must be set to true (88 ms)
      when useClassTransformer is set to true
        ✕ useClassTransformer is enabled (2 ms)
      when useClassTransformer is set to false
        ✕ useClassTransformer is disabled (3 ms)
      when routePrefix is used all controller routes should be appended by it
        ✕ routePrefix is enabled (2 ms)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
    interceptor
      ✕ custom interceptor function should replace returned content (4 ms)
      ✕ custom interceptor class should replace returned content (2 ms)
      ✕ custom interceptor class used on the whole controller should replace returned content (1 ms)
      ✕ global interceptor class should replace returned content (1 ms)
      ✕ interceptors should support promises (1 ms)

  ●  › interceptor › custom interceptor function should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
    defaults
      ✕ should return undefinedResultCode from defaults config for void function (5 ms)
      ✕ should return undefinedResultCode from defaults config for promise void function (1 ms)
      ✕ should return 400 from required paramOptions (1 ms)
      ✕ should return nullResultCode from defaults config (1 ms)
      ✕ should return status code from OnUndefined annotation (1 ms)
      ✕ should mark arg optional from QueryParam annotation (1 ms)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
    custom express error handling
      ✕ should not call global error handler middleware if there was no errors (20 ms)
      ✕ should call global error handler middleware (3 ms)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
    loading all controllers from the given directories
      ✕ should load all controllers (4 ms)
    loading all express middlewares and error handlers from the given directories
      ✕ should succeed (1 ms)
      ✕ should fail (2 ms)

  ●  › loading all controllers from the given directories › should load all controllers

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
    controller options
      ✕ controller transform is enabled by default (7 ms)
      ✕ when controller transform is enabled (2 ms)
      ✕ when controller transform is disabled (2 ms)

  ●  › controller options › controller transform is enabled by default

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
    loaded direct from array
      ✕ should call middlewares in order defined by items order (7 ms)
    specified by priority option
      ✕ should call middlewares in order defined by priority parameter of decorator (1 ms)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
    dynamic redirect
      ✕ using template (4 ms)
      ✕ using override (2 ms)
      ✕ using original (1 ms)

  ●  › dynamic redirect › using template

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

PASS test/unit/controller-inheritance.spec.ts
  controller inheritance
    ✓ should build empty meta for empty set (11 ms)
    ✓ should build meta if the only derivative controller is given (1 ms)
    ✓ should build meta if the only autonomous controller is given (1 ms)
    ✓ should build meta both when autonomous and derivative controllers are given (1 ms)

PASS test/functional/error-subclasses.spec.ts
  HttpError
    ✓ should be instance of HttpError and Error (3 ms)
  BadRequestError
    ✓ should be instance of BadRequestError, HttpError and Error (1 ms)

FAIL test/functional/render-decorator.spec.ts
    template rendering
      ✕ should render a template and use given variables (4 ms)
      ✕ should render a template with given variables and locals variables (1 ms)

  ●  › template rendering › should render a template and use given variables

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › template rendering › should render a template and use given variables

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › template rendering › should render a template and use given variables

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      52 | 
      53 |     it('should render a template and use given variables', async () => {
    > 54 |       expect.assertions(6);
         |              ^
      55 |       const response = await axios.get('/index');
      56 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      57 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:54:14)

  ●  › template rendering › should render a template with given variables and locals variables

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › template rendering › should render a template with given variables and locals variables

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › template rendering › should render a template with given variables and locals variables

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should render a template with given variables and locals variables', async () => {
    > 65 |       expect.assertions(7);
         |              ^
      66 |       const response = await axios.get('/locals');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
    ✕ @Req and @Res should be provided as Request and Response objects (15 ms)
    ✕ @Res writing directly to the response should work (1 ms)
    ✕ @Param should give a param from route (1 ms)
    ✕ @Param multiple params should give a proper values from route (1 ms)
    ✕ @SessionParam without middleware (1 ms)
    ✕ @Session should return a value from session (1 ms)
    ✕ @Session(param) should allow to inject empty property (1 ms)
    ✕ @QueryParams should give a proper values from request's query parameters (1 ms)
    ✕ @QueryParams should give a proper values from request's query parameters and one multiple value (1 ms)
    ✕ @QueryParams should give a proper values from request's query with validate whitelist option on (1 ms)
    ✕ @QueryParams should give a proper values from request's query parameters with nested json (1 ms)
    ✕ @QueryParams should not validate request query parameters when it's turned off in validator options (1 ms)
    ✕ @QueryParams should give a proper values from request's optional query parameters (2 ms)
    ✕ @QueryParam should give a proper values from request query parameters (1 ms)
    ✕ @QueryParam should give an array of string with only one query parameter (2 ms)
    ✕ @QueryParam should give an array of string with multiple query parameters (1 ms)
    ✕ @QueryParam should give an array of number with only one query parameter (2 ms)
    ✕ @QueryParam should give an array of number with multiple query parameters (4 ms)
    ✕ @QueryParam should give an array of date with only one query parameter (2 ms)
    ✕ @QueryParam should give an array of date with multiple query parameters (1 ms)
    ✕ @QueryParam when required params must be provided and they should not be empty (2 ms)
    ✕ @QueryParam when the type is Date then it should be parsed (1 ms)
    ✕ @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error (1 ms)
    ✕ @QueryParam when parseJson flag is used query param must be converted to object (2 ms)
    ✕ @HeaderParam should give a proper values from request headers (1 ms)
    ✕ @HeaderParam when required is params must be provided and they should not be empty (2 ms)
    ✕ @HeaderParam should fail with invalid request options (1 ms)
    ✕ @HeaderParam should fail with missing required params (1 ms)
    ✕ for @HeaderParam when parseJson flag is used query param must be converted to object (1 ms)
    ✕ @CookieParam should give a proper values from request headers (1 ms)
    ✕ @CookieParam when required is params must be provided and they should not be empty (1 ms)
    ✕ @CookieParam when parseJson flag is used query param must be converted to object (1 ms)
    ✕ @Body should provide a request body (2 ms)
    ✕ @Body should fail if required body was not provided (1 ms)
    ✕ @Body should provide a json object for json-typed controllers and actions (1 ms)
    ✕ @Body should fail if required body was not provided for json-typed controllers and actions (1 ms)
    ✕ @BodyParam should provide a json object for json-typed controllers and actions (1 ms)
    ✕ @BodyParam should fail if required body was not provided for json-typed controllers and actions (1 ms)
    ✕ @Body using application/x-www-form-urlencoded should handle url encoded form data (2 ms)
    ✕ @UploadedFile using multipart/form-data should provide uploaded file with the given name (3 ms)
    ✕ @UploadedFile with @Body should return both the file and the body (2 ms)
    ✕ @UploadedFile with @BodyParam should return both the file and the body param (2 ms)
    ✕ @UploadedFile with passed uploading options (limit) should throw an error (1 ms)
    ✕ @UploadedFile when required is used files must be provided (2 ms)
    ✕ @UploadedFiles should provide uploaded files with the given name (2 ms)
    ✕ @UploadedFiles with passed uploading options (limit) should throw an error (1 ms)
    ✕ @UploadedFiles when required is used files must be provided (1 ms)

  ●  › @Req and @Res should be provided as Request and Response objects

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Req and @Res should be provided as Request and Response objects

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Req and @Res should be provided as Request and Response objects

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      466 | 
      467 |   it('@Req and @Res should be provided as Request and Response objects', async () => {
    > 468 |     expect.assertions(4);
          |            ^
      469 |     const response = await axios.get('/users');
      470 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      471 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:468:12)

  ●  › @Res writing directly to the response should work

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Res writing directly to the response should work

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Res writing directly to the response should work

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      475 | 
      476 |   it('@Res writing directly to the response should work', async () => {
    > 477 |     expect.assertions(3);
          |            ^
      478 |     const response = await axios.get('/users-direct');
      479 |     expect(response.status).toEqual(HttpStatusCodes.CREATED);
      480 |     expect(response.headers['content-type']).toEqual('custom/x-sample; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:477:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param should give a param from route

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Param should give a param from route

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Param should give a param from route

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      483 | 
      484 |   it('@Param should give a param from route', async () => {
    > 485 |     expect.assertions(4);
          |            ^
      486 |     const response = await axios.get('users/1');
      487 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      488 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:485:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param multiple params should give a proper values from route

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Param multiple params should give a proper values from route

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Param multiple params should give a proper values from route

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      492 | 
      493 |   it('@Param multiple params should give a proper values from route', async () => {
    > 494 |     expect.assertions(5);
          |            ^
      495 |     const response = await axios.get('/users/23/photos/32');
      496 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      497 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:494:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @SessionParam without middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @SessionParam without middleware

    TypeError: Cannot read properties of undefined (reading 'status')

      506 |       await axios.get('/not-use-session');
      507 |     } catch (error) {
    > 508 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      509 |     }
      510 |   });
      511 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:508:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @SessionParam without middleware

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      502 | 
      503 |   it('@SessionParam without middleware', async () => {
    > 504 |     expect.assertions(1);
          |            ^
      505 |     try {
      506 |       await axios.get('/not-use-session');
      507 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:504:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session should return a value from session

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Session should return a value from session

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Session should return a value from session

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      511 | 
      512 |   it('@Session should return a value from session', async () => {
    > 513 |     expect.assertions(7);
          |            ^
      514 |     const response = await axios.post('/session');
      515 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      516 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:513:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session(param) should allow to inject empty property

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Session(param) should allow to inject empty property

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      554 | 
      555 |   it("@QueryParams should give a proper values from request's query parameters", async () => {
    > 556 |     expect.assertions(10);
          |            ^
      557 |     const response = await axios.get(
      558 |       '/photos-params?' +
      559 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:556:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      586 | 
      587 |   it("@QueryParams should give a proper values from request's query parameters and one multiple value", async () => {
    > 588 |     expect.assertions(10);
          |            ^
      589 |     const response = await axios.get(
      590 |       '/photos-params?' +
      591 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:588:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      611 | 
      612 |   it("@QueryParams should give a proper values from request's query with validate whitelist option on", async () => {
    > 613 |     expect.assertions(3);
          |            ^
      614 |     const response = await axios.get('/photos-params-whitelist?multipleBooleanValues=false');
      615 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      616 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:613:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    expect.assertions(13)

    Expected thirteen assertions to be called but received zero assertion calls.

      619 | 
      620 |   it("@QueryParams should give a proper values from request's query parameters with nested json", async () => {
    > 621 |     expect.assertions(13);
          |            ^
      622 |     const response = await axios.get(
      623 |       '/photos-params?' +
      624 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:621:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      651 | 
      652 |   it("@QueryParams should not validate request query parameters when it's turned off in validator options", async () => {
    > 653 |     expect.assertions(6);
          |            ^
      654 |     const response = await axios.get('/photos-params-no-validate?sortBy=verylongtext&count=2&limit=1&showAll=true');
      655 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      656 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:653:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      662 | 
      663 |   it("@QueryParams should give a proper values from request's optional query parameters", async () => {
    > 664 |     expect.assertions(6);
          |            ^
      665 |     const response = await axios.get('/photos-params-optional?sortBy=name&limit=10');
      666 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      667 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:664:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give a proper values from request query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give a proper values from request query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give a proper values from request query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      673 | 
      674 |   it('@QueryParam should give a proper values from request query parameters', async () => {
    > 675 |     expect.assertions(6);
          |            ^
      676 |     const response = await axios.get('/photos?sortBy=name&count=2&limit=10&showAll=true');
      677 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      678 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:675:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with only one query parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of string with only one query parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of string with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      684 | 
      685 |   it('@QueryParam should give an array of string with only one query parameter', async () => {
    > 686 |     expect.assertions(3);
          |            ^
      687 |     const response = await axios.get('/photos-query-param-string-array?multipleStringValues=a');
      688 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      689 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:686:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with multiple query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of string with multiple query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of string with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      692 | 
      693 |   it('@QueryParam should give an array of string with multiple query parameters', async () => {
    > 694 |     expect.assertions(3);
          |            ^
      695 |     const response = await axios.get(
      696 |       '/photos-query-param-string-array?multipleStringValues=a&multipleStringValues=b&multipleStringValues=b'
      697 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:694:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with only one query parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of number with only one query parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of number with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      702 | 
      703 |   it('@QueryParam should give an array of number with only one query parameter', async () => {
    > 704 |     expect.assertions(3);
          |            ^
      705 |     const response = await axios.get('/photos-query-param-number-array?multipleNumberValues=1');
      706 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      707 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:704:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with multiple query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of number with multiple query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of number with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      710 | 
      711 |   it('@QueryParam should give an array of number with multiple query parameters', async () => {
    > 712 |     expect.assertions(3);
          |            ^
      713 |     const response = await axios.get(
      714 |       '/photos-query-param-number-array?multipleNumberValues=1&multipleNumberValues=2&multipleNumberValues=2'
      715 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:712:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with only one query parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of date with only one query parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of date with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      720 | 
      721 |   it('@QueryParam should give an array of date with only one query parameter', async () => {
    > 722 |     expect.assertions(3);
          |            ^
      723 |     const response = await axios.get('/photos-query-param-date-array?multipleDateValues=2021-01-01');
      724 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      725 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:722:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with multiple query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of date with multiple query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of date with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      728 | 
      729 |   it('@QueryParam should give an array of date with multiple query parameters', async () => {
    > 730 |     expect.assertions(3);
          |            ^
      731 |     const response = await axios.get(
      732 |       '/photos-query-param-date-array?multipleDateValues=2021-01-01&multipleDateValues=2020-01-01&multipleDateValues=2021-05-01'
      733 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:730:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when required params must be provided and they should not be empty

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when required params must be provided and they should not be empty

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam when required params must be provided and they should not be empty

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      738 | 
      739 |   it('@QueryParam when required params must be provided and they should not be empty', async () => {
    > 740 |     expect.assertions(6);
          |            ^
      741 |     let response = await axios.get('/photos-with-required?limit=0');
      742 |     expect(queryParamLimit).toEqual(0);
      743 |     expect(response.status).toBe(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:740:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date then it should be parsed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when the type is Date then it should be parsed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam when the type is Date then it should be parsed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      759 | 
      760 |   it('@QueryParam when the type is Date then it should be parsed', async () => {
    > 761 |     expect.assertions(2);
          |            ^
      762 |     const response = await axios.get('/posts-after/?from=2017-01-01T00:00:00Z');
      763 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      764 |     expect(response.data).toEqual('2017-01-01T00:00:00.000Z');

      at Object.<anonymous> (test/functional/action-params.spec.ts:761:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    TypeError: Cannot read properties of undefined (reading 'status')

      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {
    > 772 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                             ^
      773 |       expect(error.response.data.name).toEqual('ParamNormalizationError');
      774 |     }
      775 |   });

      at Object.<anonymous> (test/functional/action-params.spec.ts:772:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      766 | 
      767 |   it('@QueryParam when the type is Date and it is invalid then the response should be a BadRequest error', async () => {
    > 768 |     expect.assertions(2);
          |            ^
      769 |     try {
      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:768:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      776 | 
      777 |   it('@QueryParam when parseJson flag is used query param must be converted to object', async () => {
    > 778 |     expect.assertions(3);
          |            ^
      779 |     const response = await axios.get('/photos-with-json/?filter={"keyword": "name", "limit": 5}');
      780 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      781 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:778:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should give a proper values from request headers

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam should give a proper values from request headers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      799 | 
      800 |   it('@HeaderParam when required is params must be provided and they should not be empty', async () => {
    > 801 |     expect.assertions(3);
          |            ^
      802 |     const response = await axios.get('/posts-with-required', {
      803 |       headers: {
      804 |         limit: 0,

      at Object.<anonymous> (test/functional/action-params.spec.ts:801:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with invalid request options

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam should fail with invalid request options

    TypeError: Cannot read properties of undefined (reading 'status')

      819 |       });
      820 |     } catch (error) {
    > 821 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                             ^
      822 |     }
      823 |   });
      824 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:821:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with invalid request options

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      811 | 
      812 |   it('@HeaderParam should fail with invalid request options', async () => {
    > 813 |     expect.assertions(1);
          |            ^
      814 |     try {
      815 |       await axios.get('/posts-with-required', {
      816 |         headers: {

      at Object.<anonymous> (test/functional/action-params.spec.ts:813:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with missing required params

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam should fail with missing required params

    TypeError: Cannot read properties of undefined (reading 'status')

      828 |       await axios.get('/posts-with-required');
      829 |     } catch (error) {
    > 830 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                             ^
      831 |     }
      832 |   });
      833 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:830:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with missing required params

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      824 | 
      825 |   it('@HeaderParam should fail with missing required params', async () => {
    > 826 |     expect.assertions(1);
          |            ^
      827 |     try {
      828 |       await axios.get('/posts-with-required');
      829 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:826:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      833 | 
      834 |   it('for @HeaderParam when parseJson flag is used query param must be converted to object', async () => {
    > 835 |     expect.assertions(3);
          |            ^
      836 |     const response = await axios.get('/posts-with-json', {
      837 |       headers: {
      838 |         filter: '{"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:835:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam should give a proper values from request headers

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @CookieParam should give a proper values from request headers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @CookieParam should give a proper values from request headers

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      845 | 
      846 |   it('@CookieParam should give a proper values from request headers', async () => {
    > 847 |     expect.assertions(5);
          |            ^
      848 |     const response = await axios.get('/questions', {
      849 |       headers: {
      850 |         Cookie: 'token=31ds31das231sad12; count=20; showAll=false',

      at Object.<anonymous> (test/functional/action-params.spec.ts:847:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      860 | 
      861 |   it('@CookieParam when required is params must be provided and they should not be empty', async () => {
    > 862 |     expect.assertions(4);
          |            ^
      863 |     let response = await axios.get('/questions-with-required', {
      864 |       headers: {
      865 |         Cookie: 'limit=20',

      at Object.<anonymous> (test/functional/action-params.spec.ts:862:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      879 | 
      880 |   it('@CookieParam when parseJson flag is used query param must be converted to object', async () => {
    > 881 |     expect.assertions(3);
          |            ^
      882 |     const response = await axios.get('/questions-with-json', {
      883 |       headers: {
      884 |         Cookie: 'filter={"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:881:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a request body

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should provide a request body

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should provide a request body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      892 | 
      893 |   it('@Body should provide a request body', async () => {
    > 894 |     expect.assertions(3);
          |            ^
      895 |     const response = await axios.post('/questions', 'hello', {
      896 |       headers: {
      897 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:894:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should fail if required body was not provided

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should fail if required body was not provided

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      904 | 
      905 |   it('@Body should fail if required body was not provided', async () => {
    > 906 |     expect.assertions(5);
          |            ^
      907 |     let response = await axios.post('/questions-with-required', '0', {
      908 |       headers: {
      909 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:906:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a json object for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should provide a json object for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      936 | 
      937 |   it('@Body should provide a json object for json-typed controllers and actions', async () => {
    > 938 |     expect.assertions(4);
          |            ^
      939 |     const response = await axios.post('/posts', { hello: 'world' });
      940 |     expect(body).toEqual({ hello: 'world' });
      941 |     expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:938:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      945 | 
      946 |   it('@Body should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 947 |     expect.assertions(2);
          |            ^
      948 |     let response = await axios.post('posts-with-required', { hello: '' });
      949 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      950 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:947:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      957 | 
      958 |   it('@BodyParam should provide a json object for json-typed controllers and actions', async () => {
    > 959 |     expect.assertions(4);
          |            ^
      960 |     const response = await axios.post('/users', { name: 'johny', age: 27, isActive: true });
      961 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      962 |     expect(bodyParamName).toEqual('johny');

      at Object.<anonymous> (test/functional/action-params.spec.ts:959:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      966 | 
      967 |   it('@BodyParam should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 968 |     expect.assertions(8);
          |            ^
      969 |     let response = await axios.post('/users-with-required', { name: 'johny', age: 27, isActive: true });
      970 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      971 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:968:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1005 | 
      1006 |   it('@Body using application/x-www-form-urlencoded should handle url encoded form data', async () => {
    > 1007 |     expect.assertions(3);
           |            ^
      1008 |     const response = await axios.post(
      1009 |       '/form-data-body',
      1010 |       qs.stringify({

      at Object.<anonymous> (test/functional/action-params.spec.ts:1007:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1026 | 
      1027 |   it('@UploadedFile using multipart/form-data should provide uploaded file with the given name', async () => {
    > 1028 |     expect.assertions(3);
           |            ^
      1029 |     const form = new FormData();
      1030 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1031 |     const response = await axios.post('/file', form, {

      at Object.<anonymous> (test/functional/action-params.spec.ts:1028:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @Body should return both the file and the body

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile with @Body should return both the file and the body

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile with @Body should return both the file and the body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1038 | 
      1039 |   it('@UploadedFile with @Body should return both the file and the body', async () => {
    > 1040 |     expect.assertions(3);
           |            ^
      1041 |     const form = new FormData();
      1042 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1043 |     form.append('anotherField', 'hello');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1040:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1054 | 
      1055 |   it('@UploadedFile with @BodyParam should return both the file and the body param', async () => {
    > 1056 |     expect.assertions(3);
           |            ^
      1057 |     const form = new FormData();
      1058 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1059 |     form.append('testParam', 'testParamOne');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1056:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with passed uploading options (limit) should throw an error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile with passed uploading options (limit) should throw an error

    TypeError: Cannot read properties of undefined (reading 'status')

      1076 |       });
      1077 |     } catch (error) {
    > 1078 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
           |                             ^
      1079 |     }
      1080 |   });
      1081 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1078:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with passed uploading options (limit) should throw an error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      1067 | 
      1068 |   it('@UploadedFile with passed uploading options (limit) should throw an error', async () => {
    > 1069 |     expect.assertions(1);
           |            ^
      1070 |     const form = new FormData();
      1071 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1072 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1069:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile when required is used files must be provided

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile when required is used files must be provided

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile when required is used files must be provided

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      1081 | 
      1082 |   it('@UploadedFile when required is used files must be provided', async () => {
    > 1083 |     expect.assertions(4);
           |            ^
      1084 |     const form = new FormData();
      1085 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1086 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1083:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles should provide uploaded files with the given name

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFiles should provide uploaded files with the given name

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFiles should provide uploaded files with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1102 | 
      1103 |   it('@UploadedFiles should provide uploaded files with the given name', async () => {
    > 1104 |     expect.assertions(3);
           |            ^
      1105 |     const form = new FormData();
      1106 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1107 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));

      at Object.<anonymous> (test/functional/action-params.spec.ts:1104:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles with passed uploading options (limit) should throw an error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFiles with passed uploading options (limit) should throw an error

    TypeError: Cannot read properties of undefined (reading 'status')

      1125 |       });
      1126 |     } catch (error) {
    > 1127 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
           |                             ^
      1128 |     }
      1129 |   });
      1130 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1127:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles with passed uploading options (limit) should throw an error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      1115 | 
      1116 |   it('@UploadedFiles with passed uploading options (limit) should throw an error', async () => {
    > 1117 |     expect.assertions(1);
           |            ^
      1118 |     const form = new FormData();
      1119 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1120 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));

      at Object.<anonymous> (test/functional/action-params.spec.ts:1117:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles when required is used files must be provided

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFiles when required is used files must be provided

    TypeError: Cannot read properties of undefined (reading 'status')

      1138 |       });
      1139 |     } catch (error) {
    > 1140 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
           |                             ^
      1141 |     }
      1142 |   });
      1143 | });

      at Object.<anonymous> (test/functional/action-params.spec.ts:1140:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles when required is used files must be provided

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      1130 | 
      1131 |   it('@UploadedFiles when required is used files must be provided', async () => {
    > 1132 |     expect.assertions(1);
           |            ^
      1133 |     const form = new FormData();
      1134 | 
      1135 |     try {

      at Object.<anonymous> (test/functional/action-params.spec.ts:1132:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

Summary of all failing tests
FAIL test/ActionParameterHandler.spec.ts
  ● ActionParameterHandler › negative › handle - throws error if the parameter is required

    Expected value   "TypeError: Cannot read property 'uuid' of undefined"
    Received:
      "TypeError: Cannot read properties of undefined (reading 'uuid')"

    Message:
      expected 'TypeError: Cannot read properties of undefined (reading \'uuid\')' to equal 'TypeError: Cannot read property \'uuid\' of undefined'

    Difference:

    - Expected
    + Received

    - TypeError: Cannot read property 'uuid' of undefined
    + TypeError: Cannot read properties of undefined (reading 'uuid')

      152 |       }
      153 | 
    > 154 |       expect(error.toString()).to.be.eq("TypeError: Cannot read property 'uuid' of undefined");
          |                                      ^
      155 |     });
      156 | 
      157 |     it('handle - throws error if the parameter is required, type file provided', async () => {

      at Object.<anonymous> (test/ActionParameterHandler.spec.ts:154:38)

FAIL test/functional/controller-methods.spec.ts
  ●  › controller methods › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      157 | 
      158 |     it('get should respond with proper status code, headers and body content', async () => {
    > 159 |       expect.assertions(3);
          |              ^
      160 |       const response = await axios.get('/users');
      161 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      162 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:159:14)

  ●  › controller methods › post respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      165 | 
      166 |     it('post respond with proper status code, headers and body content', async () => {
    > 167 |       expect.assertions(3);
          |              ^
      168 |       const response = await axios.post('/users');
      169 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      170 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:167:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › put respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      173 | 
      174 |     it('put respond with proper status code, headers and body content', async () => {
    > 175 |       expect.assertions(3);
          |              ^
      176 |       const response = await axios.put('/users');
      177 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      178 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:175:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › patch respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('patch respond with proper status code, headers and body content', async () => {
    > 183 |       expect.assertions(3);
          |              ^
      184 |       const response = await axios.patch('/users');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › delete respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      189 | 
      190 |     it('delete respond with proper status code, headers and body content', async () => {
    > 191 |       expect.assertions(3);
          |              ^
      192 |       const response = await axios.delete('/users');
      193 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      194 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:191:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › head respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      197 | 
      198 |     it('head respond with proper status code, headers and body content', async () => {
    > 199 |       expect.assertions(3);
          |              ^
      200 |       const response = await axios.head('/users');
      201 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      202 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:199:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      205 | 
      206 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 207 |       expect.assertions(3);
          |              ^
      208 |       const response = await axios.post('/categories');
      209 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      210 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:207:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      213 | 
      214 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 215 |       expect.assertions(3);
          |              ^
      216 |       const response = await axios.delete('/categories');
      217 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      218 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:215:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      221 | 
      222 |     it('route should work with parameter', async () => {
    > 223 |       expect.assertions(3);
          |              ^
      224 |       const response = await axios.get('/users/umed');
      225 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      226 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:223:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {
    > 242 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      243 |       }
      244 |     });
      245 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:242:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      236 | 
      237 |     it('should respond with 404 when regexp does not match', async () => {
    > 238 |       expect.assertions(1);
          |              ^
      239 |       try {
      240 |         await axios.get('/categories/umed');
      241 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:238:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › route should work with string regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      245 | 
      246 |     it('route should work with string regexp parameter', async () => {
    > 247 |       expect.assertions(3);
          |              ^
      248 |       const response = await axios.get('/posts/1');
      249 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      250 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:247:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {
    > 259 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      260 |       }
      261 |     });
      262 | 

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:259:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      253 | 
      254 |     it('should respond with 404 when regexp does not match', async () => {
    > 255 |       expect.assertions(1);
          |              ^
      256 |       try {
      257 |         await axios.get('/posts/U');
      258 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:255:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should return result from a promise

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      262 | 
      263 |     it('should return result from a promise', async () => {
    > 264 |       expect.assertions(3);
          |              ^
      265 |       const response = await axios.get('/posts-from-db');
      266 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      267 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:264:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {
    > 276 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      277 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      278 |         expect(error.response.data).toEqual('<html><body>cannot connect to a database</body></html>');
      279 |       }

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:276:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      270 | 
      271 |     it('should respond with 500 if promise failed', async () => {
    > 272 |       expect.assertions(3);
          |              ^
      273 |       try {
      274 |         await axios.get('/posts-from-failed-db');
      275 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:272:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 204 No Content when null returned in action

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      281 | 
      282 |     it('should respond with 204 No Content when null returned in action', async () => {
    > 283 |       expect.assertions(6);
          |              ^
      284 | 
      285 |       let response = await axios.get('/return/normal/null');
      286 |       expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:283:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {
    > 301 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      302 |         expect(error.response.headers['content-type']).toEqual('text/html; charset=utf-8');
      303 |       }
      304 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:301:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found text when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      295 | 
      296 |     it('should respond with 404 Not Found text when undefined returned in action', async () => {
    > 297 |       expect.assertions(2);
          |              ^
      298 |       try {
      299 |         await axios.get('/return/normal/undefined');
      300 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:297:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    TypeError: Cannot read properties of undefined (reading 'status')

      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {
    > 311 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                               ^
      312 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      313 |       }
      314 |     });

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:311:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 404 Not Found JSON when undefined returned in action

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('should respond with 404 Not Found JSON when undefined returned in action', async () => {
    > 307 |       expect.assertions(2);
          |              ^
      308 |       try {
      309 |         await axios.get('/return/json/undefined');
      310 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/html even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      315 | 
      316 |     it("should respond with 200 and text/html even in json controller's method", async () => {
    > 317 |       expect.assertions(3);
          |              ^
      318 |       const response = await axios.get('/json-controller/text-html');
      319 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      320 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:317:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller methods › should respond with 200 and text/plain even in json controller's method

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      323 | 
      324 |     it("should respond with 200 and text/plain even in json controller's method", async () => {
    > 325 |       expect.assertions(3);
          |              ^
      326 |       const response = await axios.get('/json-controller/text-plain');
      327 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      328 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:325:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {
    > 337 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      338 |         expect(error.response.headers['content-type']).toEqual('text/plain; charset=utf-8');
      339 |         expect(typeof error.response.data).toEqual('string');
      340 |         expect(error.response.data).toMatch(/UnauthorizedError/);

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:337:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      331 | 
      332 |     it("should respond with 401 and text/html when UnauthorizedError throwed even in json controller's method", async () => {
    > 333 |       expect.assertions(4);
          |              ^
      334 |       try {
      335 |         await axios.get('/json-controller/text-plain-error');
      336 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:333:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    TypeError: Cannot read properties of undefined (reading 'status')

      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {
    > 349 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      350 |         expect(error.response.headers['content-type']).toEqual('application/json; charset=utf-8');
      351 |         expect(typeof error.response.data).toEqual('object');
      352 |         expect(error.response.data.name).toEqual('UnauthorizedError');

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:349:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller methods › should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      343 | 
      344 |     it("should respond with 401 and aplication/json when UnauthorizedError is thrown in standard json controller's method", async () => {
    > 345 |       expect.assertions(4);
          |              ^
      346 |       try {
      347 |         await axios.get('/json-controller/json-error');
      348 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-methods.spec.ts:345:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-options.spec.ts
  ●  › should use controller options when action transform options are not set

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should use controller options when action transform options are not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should use controller options when action transform options are not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |   it('should use controller options when action transform options are not set', async () => {
    > 65 |     expect.assertions(4);
         |            ^
      66 |     const response = await axios.post('/default', user);
      67 |     expect(initializedUser).toBeInstanceOf(UserModel);
      68 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:65:12)

  ●  › should override controller options with action transformRequest option

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should override controller options with action transformRequest option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformRequest option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      72 | 
      73 |   it('should override controller options with action transformRequest option', async () => {
    > 74 |     expect.assertions(4);
         |            ^
      75 |     const response = await axios.post('/transformRequestOnly', user);
      76 |     expect(initializedUser).toBeInstanceOf(UserModel);
      77 |     expect(initializedUser.lastName).toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:74:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should override controller options with action transformResponse option

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should override controller options with action transformResponse option

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should override controller options with action transformResponse option

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      81 | 
      82 |   it('should override controller options with action transformResponse option', async () => {
    > 83 |     expect.assertions(4);
         |            ^
      84 |     const response = await axios.post('/transformResponseOnly', user);
      85 |     expect(initializedUser).not.toBeInstanceOf(UserModel);
      86 |     expect(initializedUser.lastName).not.toBeUndefined();

      at Object.<anonymous> (test/functional/action-options.spec.ts:83:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/json-controller-methods.spec.ts
  ●  › json-controller methods › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('get should respond with proper status code, headers and body content', async () => {
    > 123 |       expect.assertions(3);
          |              ^
      124 |       const response = await axios.get('/users');
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      126 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:123:14)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › post respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      138 | 
      139 |     it('post respond with proper status code, headers and body content', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       const response = await axios.post('/users');
      142 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      143 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › put respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      148 | 
      149 |     it('put respond with proper status code, headers and body content', async () => {
    > 150 |       expect.assertions(3);
          |              ^
      151 |       const response = await axios.put('/users');
      152 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      153 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:150:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › patch respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      158 | 
      159 |     it('patch respond with proper status code, headers and body content', async () => {
    > 160 |       expect.assertions(3);
          |              ^
      161 |       const response = await axios.patch('/users');
      162 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      163 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › delete respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      168 | 
      169 |     it('delete respond with proper status code, headers and body content', async () => {
    > 170 |       expect.assertions(3);
          |              ^
      171 |       const response = await axios.delete('/users');
      172 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      173 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:170:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › head respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      178 | 
      179 |     it('head respond with proper status code, headers and body content', async () => {
    > 180 |       expect.assertions(3);
          |              ^
      181 |       const response = await axios.head('/users');
      182 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      183 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (post) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      186 | 
      187 |     it('custom method (post) respond with proper status code, headers and body content', async () => {
    > 188 |       expect.assertions(3);
          |              ^
      189 |       const response = await axios.post('/categories');
      190 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      191 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:188:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › custom method (delete) respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      196 | 
      197 |     it('custom method (delete) respond with proper status code, headers and body content', async () => {
    > 198 |       expect.assertions(3);
          |              ^
      199 |       const response = await axios.delete('/categories');
      200 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      201 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:198:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › route should work with parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      206 | 
      207 |     it('route should work with parameter', async () => {
    > 208 |       expect.assertions(3);
          |              ^
      209 |       const response = await axios.get('/users/umed');
      210 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      211 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:208:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › route should work with regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      217 | 
      218 |     it('route should work with regexp parameter', async () => {
    > 219 |       expect.assertions(3);
          |              ^
      220 |       const response = await axios.get('/categories/1');
      221 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      222 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:219:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {
    > 234 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      235 |       }
      236 |     });
      237 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:234:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      228 | 
      229 |     it('should respond with 404 when regexp does not match', async () => {
    > 230 |       expect.assertions(1);
          |              ^
      231 |       try {
      232 |         await axios.get('/categories/b1');
      233 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:230:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › route should work with string regexp parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › route should work with string regexp parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › route should work with string regexp parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      237 | 
      238 |     it('route should work with string regexp parameter', async () => {
    > 239 |       expect.assertions(3);
          |              ^
      240 |       const response = await axios.get('/posts/1');
      241 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      242 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:239:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    TypeError: Cannot read properties of undefined (reading 'status')

      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {
    > 254 |         expect(err.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
          |                             ^
      255 |       }
      256 |     });
      257 | 

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:254:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 404 when regexp does not match

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      248 | 
      249 |     it('should respond with 404 when regexp does not match', async () => {
    > 250 |       expect.assertions(1);
          |              ^
      251 |       try {
      252 |         await axios.get('/posts/U');
      253 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should return result from a promise

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should return result from a promise

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › json-controller methods › should return result from a promise

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      257 | 
      258 |     it('should return result from a promise', async () => {
    > 259 |       expect.assertions(3);
          |              ^
      260 |       const response = await axios.get('/posts-from-db');
      261 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      262 |       expect(response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:259:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › json-controller methods › should respond with 500 if promise failed

    TypeError: Cannot read properties of undefined (reading 'status')

      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {
    > 274 |         expect(err.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      275 |         expect(err.response.headers).toHaveProperty('content-type', 'application/json; charset=utf-8');
      276 |         expect(err.response.data).toEqual({
      277 |           code: 10954,

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:274:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › json-controller methods › should respond with 500 if promise failed

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      268 | 
      269 |     it('should respond with 500 if promise failed', async () => {
    > 270 |       expect.assertions(3);
          |              ^
      271 |       try {
      272 |         await axios.get('/posts-from-failed-db');
      273 |       } catch (err) {

      at Object.<anonymous> (test/functional/json-controller-methods.spec.ts:270:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/auth-decorator.spec.ts
  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('without roles', async () => {
    > 53 |       expect.assertions(2);
         |              ^
      54 |       const response = await axios.get('/auth1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:53:14)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('with roles', async () => {
    > 60 |       expect.assertions(2);
         |              ^
      61 |       const response = await axios.get('/auth2');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      48 |     });
      49 | 
    > 50 |     afterEach(done => expressServer.close(done));
         |                                     ^
      51 | 
      52 |     it('without roles', async () => {
      53 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:50:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (async) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('async', async () => {
    > 67 |       expect.assertions(2);
         |              ^
      68 |       const response = await axios.get('/auth3');
      69 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      70 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:67:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › without roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      108 | 
      109 |     it('without roles', async () => {
    > 110 |       expect.assertions(2);
          |              ^
      111 |       const response = await axios.get('/auth1');
      112 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      113 |       expect(response.data).toEqual({ test: 'auth1' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:110:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › with roles

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      115 | 
      116 |     it('with roles', async () => {
    > 117 |       expect.assertions(2);
          |              ^
      118 |       const response = await axios.get('/auth2');
      119 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      120 |       expect(response.data).toEqual({ test: 'auth2' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:117:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    TypeError: Cannot read properties of undefined (reading 'close')

      105 |     });
      106 | 
    > 107 |     afterEach(done => expressServer.close(done));
          |                                     ^
      108 | 
      109 |     it('without roles', async () => {
      110 |       expect.assertions(2);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:107:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Controller responds with value when Authorization succeeds (sync) › async

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('async', async () => {
    > 124 |       expect.assertions(2);
          |              ^
      125 |       const response = await axios.get('/auth3');
      126 |       expect(response.status).toEqual(200);
      127 |       expect(response.data).toEqual({ test: 'auth3' });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'status')

      162 |         await axios.get('/auth1');
      163 |       } catch (error) {
    > 164 |         expect(error.response.status).toEqual(HttpStatusCodes.UNAUTHORIZED);
          |                               ^
      165 |       }
      166 |     });
      167 | 

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:164:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › without roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      158 | 
      159 |     it('without roles', async () => {
    > 160 |       expect.assertions(1);
          |              ^
      161 |       try {
      162 |         await axios.get('/auth1');
      163 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:160:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'status')

      171 |         await axios.get('/auth2');
      172 |       } catch (error) {
    > 173 |         expect(error.response.status).toEqual(HttpStatusCodes.FORBIDDEN);
          |                               ^
      174 |       }
      175 |     });
      176 |   });

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:173:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    TypeError: Cannot read properties of undefined (reading 'close')

      155 |     });
      156 | 
    > 157 |     afterEach(done => expressServer.close(done));
          |                                     ^
      158 | 
      159 |     it('without roles', async () => {
      160 |       expect.assertions(1);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:157:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorized Decorators Http Status Code › with roles

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      167 | 
      168 |     it('with roles', async () => {
    > 169 |       expect.assertions(1);
          |              ^
      170 |       try {
      171 |         await axios.get('/auth2');
      172 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:169:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      203 |         await axios.get('/auth1');
      204 |       } catch (error) {
    > 205 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      206 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      207 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      208 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:205:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      196 |     });
      197 | 
    > 198 |     afterEach(done => expressServer.close(done));
          |                                     ^
      199 | 
      200 |     it('custom errors', async () => {
      201 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:198:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (async) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      199 | 
      200 |     it('custom errors', async () => {
    > 201 |       expect.assertions(3);
          |              ^
      202 |       try {
      203 |         await axios.get('/auth1');
      204 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:201:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'status')

      238 |         await axios.get('/auth1');
      239 |       } catch (error) {
    > 240 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      241 |         expect(error.response.data).toHaveProperty('name', 'NotAcceptableError');
      242 |         expect(error.response.data).toHaveProperty('message', 'Custom Error');
      243 |       }

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:240:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    TypeError: Cannot read properties of undefined (reading 'close')

      231 |     });
      232 | 
    > 233 |     afterEach(done => expressServer.close(done));
          |                                     ^
      234 | 
      235 |     it('custom errors', async () => {
      236 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:233:37)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › Authorization checker allows to throw (sync) › custom errors

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      234 | 
      235 |     it('custom errors', async () => {
    > 236 |       expect.assertions(3);
          |              ^
      237 |       try {
      238 |         await axios.get('/auth1');
      239 |       } catch (error) {

      at Object.<anonymous> (test/functional/auth-decorator.spec.ts:236:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-error-handling.spec.ts
  ●  › express error handling › should not call global error handler middleware if there was no errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      120 | 
      121 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 122 |       expect.assertions(2);
          |              ^
      123 |       const response = await axios.get('/blogs');
      124 |       expect(errorHandlerCalled).toBeFalsy();
      125 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:122:14)

  ●  › express error handling › should call global error handler middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      131 |         await axios.get('/posts');
      132 |       } catch (error) {
    > 133 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      134 |         expect(errorHandledSpecifically).toBeFalsy();
      135 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      136 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:133:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      127 | 
      128 |     it('should call global error handler middleware', async () => {
    > 129 |       expect.assertions(3);
          |              ^
      130 |       try {
      131 |         await axios.get('/posts');
      132 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:129:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: undefined

      142 |         await axios.get('/videos');
      143 |       } catch (error) {
    > 144 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      145 |         expect(errorHandledSpecifically).toBeFalsy();
      146 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      147 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:144:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      138 | 
      139 |     it('should call global error handler middleware', async () => {
    > 140 |       expect.assertions(3);
          |              ^
      141 |       try {
      142 |         await axios.get('/videos');
      143 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:140:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should call error handler middleware if used

    expect(received).toBeTruthy()

    Received: undefined

      153 |         await axios.get('/questions');
      154 |       } catch (error) {
    > 155 |         expect(errorHandlerCalled).toBeTruthy();
          |                                    ^
      156 |         expect(errorHandledSpecifically).toBeTruthy();
      157 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      158 |       }

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:155:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should call error handler middleware if used

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      149 | 
      150 |     it('should call error handler middleware if used', async () => {
    > 151 |       expect.assertions(3);
          |              ^
      152 |       try {
      153 |         await axios.get('/questions');
      154 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:151:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    TypeError: Cannot read properties of undefined (reading 'status')

      166 |         expect(errorHandlerCalled).toBeFalsy();
      167 |         expect(errorHandledSpecifically).toBeFalsy();
    > 168 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      169 |       }
      170 |     });
      171 | 

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:168:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should not execute next middleware if soft error handled specifically and stopped error bubbling

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      160 | 
      161 |     it('should not execute next middleware if soft error handled specifically and stopped error bubbling', async () => {
    > 162 |       expect.assertions(3);
          |              ^
      163 |       try {
      164 |         await axios.get('/files');
      165 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:162:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    TypeError: Cannot read properties of undefined (reading 'status')

      175 |         await axios.get('/stories');
      176 |       } catch (error) {
    > 177 |         expect(error.response.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
          |                               ^
      178 |         expect(error.response.data.status).toEqual(HttpStatusCodes.SERVICE_UNAVAILABLE);
      179 |         expect(error.response.data.publicData).toEqual('sorry, try it again later (503)');
      180 |         expect(error.response.data.secretData).toBeUndefined();

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:177:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express error handling › should process JsonErrors by their toJSON method if it exists

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      171 | 
      172 |     it('should process JsonErrors by their toJSON method if it exists', async () => {
    > 173 |       expect.assertions(4);
          |              ^
      174 |       try {
      175 |         await axios.get('/stories');
      176 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-error-handling.spec.ts:173:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-global-before-error-handling.spec.ts
  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect(received).toBeTruthy()

    Received: undefined

      65 |         await axios.get('/answers');
      66 |       } catch (error) {
    > 67 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      68 |         expect(errorHandlerName).toEqual('CustomError');
      69 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
      70 |       }

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:67:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express global before middleware error handling › should call global error handler middleware with CustomError

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      61 | 
      62 |     it('should call global error handler middleware with CustomError', async () => {
    > 63 |       expect.assertions(3);
         |              ^
      64 |       try {
      65 |         await axios.get('/answers');
      66 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-global-before-error-handling.spec.ts:63:14)

FAIL test/functional/container.spec.ts
  ●  › using typedi container should be possible › typedi container

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using typedi container should be possible › typedi container

    TypeError: Cannot read properties of undefined (reading 'close')

      72 |     afterEach((done: DoneCallback) => {
      73 |       useContainer(undefined);
    > 74 |       expressServer.close(done);
         |                     ^
      75 |     });
      76 | 
      77 |     it('typedi container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:74:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using typedi container should be possible › typedi container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      76 | 
      77 |     it('typedi container', async () => {
    > 78 |       expect.assertions(4);
         |              ^
      79 |       let response;
      80 | 
      81 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:78:14)

  ●  › using custom container should be possible › custom container

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using custom container should be possible › custom container

    TypeError: Cannot read properties of undefined (reading 'close')

      180 |     afterEach((done: DoneCallback) => {
      181 |       useContainer(undefined);
    > 182 |       expressServer.close(done);
          |                     ^
      183 |     });
      184 | 
      185 |     it('custom container', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:182:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container should be possible › custom container

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      184 | 
      185 |     it('custom container', async () => {
    > 186 |       expect.assertions(4);
          |              ^
      187 |       let response;
      188 | 
      189 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:186:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using custom container with fallback should be possible › custom container with fallback

    TypeError: Cannot read properties of undefined (reading 'close')

      301 |     afterEach((done: DoneCallback) => {
      302 |       useContainer(undefined);
    > 303 |       expressServer.close(done);
          |                     ^
      304 |     });
      305 | 
      306 |     it('custom container with fallback', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:303:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback should be possible › custom container with fallback

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      305 | 
      306 |     it('custom container with fallback', async () => {
    > 307 |       expect.assertions(6);
          |              ^
      308 |       let response;
      309 | 
      310 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:307:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    TypeError: Cannot read properties of undefined (reading 'close')

      437 |     afterEach((done: DoneCallback) => {
      438 |       useContainer(undefined);
    > 439 |       expressServer.close(done);
          |                     ^
      440 |     });
      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {

      at Object.<anonymous> (test/functional/container.spec.ts:439:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › using custom container with fallback and fallback on throw error should be possible › custom container with fallback and fallback on throw error

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      441 | 
      442 |     it('custom container with fallback and fallback on throw error', async () => {
    > 443 |       expect.assertions(6);
          |              ^
      444 |       let response;
      445 | 
      446 |       try {

      at Object.<anonymous> (test/functional/container.spec.ts:443:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-base-routes.spec.ts
  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
    > 45 |       expect.assertions(3);
         |              ^
      46 |       const response = await axios.get('/posts');
      47 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      48 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:45:14)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      51 | 
      52 |     it('get should respond with proper status code, headers and body content', async () => {
    > 53 |       expect.assertions(3);
         |              ^
      54 |       const response = await axios.get('/posts/1');
      55 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      56 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:53:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › get should respond with proper status code, headers and body content - 2nd pass

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      59 | 
      60 |     it('get should respond with proper status code, headers and body content - 2nd pass', async () => {
    > 61 |       expect.assertions(3);
         |              ^
      62 |       const response = await axios.get('posts/1/users/2');
      63 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      64 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:61:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {
    > 73 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      74 |       }
      75 |     });
      76 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:73:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      67 | 
      68 |     it('wrong route should respond with 404 error', async () => {
    > 69 |       expect.assertions(1);
         |              ^
      70 |       try {
      71 |         await axios.get('/1/users/1');
      72 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {
    > 82 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      83 |       }
      84 |     });
      85 | 

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:82:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      76 | 
      77 |     it('wrong route should respond with 404 error', async () => {
    > 78 |       expect.assertions(1);
         |              ^
      79 |       try {
      80 |         await axios.get('/categories/1');
      81 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:78:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'status')

      89 |         await axios.get('/users/1');
      90 |       } catch (error) {
    > 91 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
         |                               ^
      92 |       }
      93 |     });
      94 |   });

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:91:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    TypeError: Cannot read properties of undefined (reading 'close')

      40 |     });
      41 | 
    > 42 |     afterEach((done: DoneCallback) => expressServer.close(done));
         |                                                     ^
      43 | 
      44 |     it('get should respond with proper status code, headers and body content', async () => {
      45 |       expect.assertions(3);

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:42:53)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller > base routes functionality › wrong route should respond with 404 error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      85 | 
      86 |     it('wrong route should respond with 404 error', async () => {
    > 87 |       expect.assertions(1);
         |              ^
      88 |       try {
      89 |         await axios.get('/users/1');
      90 |       } catch (error) {

      at Object.<anonymous> (test/functional/controller-base-routes.spec.ts:87:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/special-result-send.spec.ts
  ●  › special result value treatment › should pipe stream to response

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › special result value treatment › should pipe stream to response

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should pipe stream to response

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      48 |     it('should pipe stream to response', async () => {
      49 |       // expect.assertions(3);
    > 50 |       expect.assertions(2);
         |              ^
      51 |       const response = await axios.get('/stream', { responseType: 'stream' });
      52 |       // TODO: Fix me, I believe RC is working ok, I don't know how to get the buffer
      53 |       // of the response

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:50:14)

  ●  › special result value treatment › should send raw binary data from Buffer

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › special result value treatment › should send raw binary data from Buffer

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from Buffer

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      58 | 
      59 |     it('should send raw binary data from Buffer', async () => {
    > 60 |       expect.assertions(3);
         |              ^
      61 |       const response = await axios.get('/buffer');
      62 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      63 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:60:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › special result value treatment › should send raw binary data from UIntArray

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › special result value treatment › should send raw binary data from UIntArray

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › special result value treatment › should send raw binary data from UIntArray

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      66 | 
      67 |     it('should send raw binary data from UIntArray', async () => {
    > 68 |       expect.assertions(3);
         |              ^
      69 |       const response = await axios.get('/array');
      70 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      71 |       expect(response.headers['content-type']).toEqual('application/octet-stream');

      at Object.<anonymous> (test/functional/special-result-send.spec.ts:68:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/other-controller-decorators.spec.ts
  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return httpCode set by @HttpCode decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      136 | 
      137 |     it('should return httpCode set by @HttpCode decorator', async () => {
    > 138 |       expect.assertions(4);
          |              ^
      139 | 
      140 |       const response = await axios.post('/users', { name: 'Umed' });
      141 |       expect(response.status).toEqual(HttpStatusCodes.CREATED);

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:138:14)

  ●  › other controller decorators › should return custom code when @OnNull

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return custom code when @OnNull

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnNull

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      151 | 
      152 |     it('should return custom code when @OnNull', async () => {
    > 153 |       expect.assertions(6);
          |              ^
      154 |       let response = await axios.get('/posts/1');
      155 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      156 |       expect(response.data).toEqual('Post');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:153:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom error message and code when @OnUndefined is used with Error class

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      181 | 
      182 |     it('should return custom error message and code when @OnUndefined is used with Error class', async () => {
    > 183 |       expect.assertions(8);
          |              ^
      184 |       let response = await axios.get('/questions/1');
      185 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      186 |       expect(response.data).toEqual('Question');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:183:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return custom code when @OnUndefined

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return custom code when @OnUndefined

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return custom code when @OnUndefined

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      204 | 
      205 |     it('should return custom code when @OnUndefined', async () => {
    > 206 |       expect.assertions(6);
          |              ^
      207 |       let response = await axios.get('/photos/1');
      208 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      209 |       expect(response.data).toEqual('Photo');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:206:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      223 | 
      224 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 225 |       expect.assertions(3);
          |              ^
      226 |       const response = await axios.get('/homepage');
      227 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      228 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:225:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return content-type in the response when @ContentType is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      231 | 
      232 |     it('should return content-type in the response when @ContentType is used', async () => {
    > 233 |       expect.assertions(3);
          |              ^
      234 |       const response = await axios.get('/textpage');
      235 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      236 |       expect(response.headers['content-type']).toEqual('text/plain; charset=utf-8');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:233:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should return response with custom headers when @Header is used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      239 | 
      240 |     it('should return response with custom headers when @Header is used', async () => {
    > 241 |       expect.assertions(4);
          |              ^
      242 |       const response = await axios.get('/userdash');
      243 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      244 |       expect(response.headers['authorization']).toEqual('Barer abcdefg');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:241:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › other controller decorators › should relocate to new location when @Location is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › other controller decorators › should relocate to new location when @Location is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › other controller decorators › should relocate to new location when @Location is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should relocate to new location when @Location is used', async () => {
    > 250 |       expect.assertions(2);
          |              ^
      251 |       const response = await axios.get('/github');
      252 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      253 |       expect(response.headers['location']).toEqual('http://github.com');

      at Object.<anonymous> (test/functional/other-controller-decorators.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-middlewares.spec.ts
  ●  › express middlewares › should call a global middlewares

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call a global middlewares

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call a global middlewares

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      137 | 
      138 |     it('should call a global middlewares', async () => {
    > 139 |       expect.assertions(4);
          |              ^
      140 |       const response = await axios.get('/blogs');
      141 |       expect(useGlobalBefore).toEqual(true);
      142 |       expect(useGlobalAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:139:14)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should use a custom middleware when @UseBefore or @UseAfter is used

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      146 | 
      147 |     it('should use a custom middleware when @UseBefore or @UseAfter is used', async () => {
    > 148 |       expect.assertions(2);
          |              ^
      149 |       const response = await axios.get('/questions');
      150 |       expect(useCustom).toEqual(true);
      151 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:148:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it before controller action when @UseBefore is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      153 | 
      154 |     it('should call middleware and call it before controller action when @UseBefore is used', async () => {
    > 155 |       expect.assertions(3);
          |              ^
      156 |       const response = await axios.get('/users');
      157 |       expect(useBefore).toEqual(true);
      158 |       expect(useCallOrder).toEqual('setFromController');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:155:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call middleware and call it after controller action when @UseAfter is used

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      161 | 
      162 |     it('should call middleware and call it after controller action when @UseAfter is used', async () => {
    > 163 |       expect.assertions(3);
          |              ^
      164 |       const response = await axios.get('/photos');
      165 |       expect(useAfter).toEqual(true);
      166 |       expect(useCallOrder).toEqual('setFromUseAfter');

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:163:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › express middlewares › should call before middleware and call after middleware when @UseAfter and @UseAfter are used

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      169 | 
      170 |     it('should call before middleware and call after middleware when @UseAfter and @UseAfter are used', async () => {
    > 171 |       expect.assertions(4);
          |              ^
      172 |       const response = await axios.get('/posts');
      173 |       expect(useBefore).toEqual(true);
      174 |       expect(useAfter).toEqual(true);

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:171:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › express middlewares › should handle errors in custom middlewares

    TypeError: Cannot read properties of undefined (reading 'status')

      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {
    > 184 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      185 |       }
      186 |     });
      187 |   });

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:184:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › express middlewares › should handle errors in custom middlewares

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      178 | 
      179 |     it('should handle errors in custom middlewares', async () => {
    > 180 |       expect.assertions(1);
          |              ^
      181 |       try {
      182 |         await axios.get('/customMiddlewareWichThrows');
      183 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-middlewares.spec.ts:180:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-validator-options.spec.ts
  ●  › no options › should not use any options if not set

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › no options › should not use any options if not set

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › no options › should not use any options if not set

    TypeError: Cannot read properties of undefined (reading 'close')

      63 | 
      64 |     afterEach((done: DoneCallback) => {
    > 65 |       expressServer.close(done);
         |                     ^
      66 |     });
      67 | 
      68 |     it('should not use any options if not set', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:65:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › no options › should not use any options if not set

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('should not use any options if not set', async () => {
    > 69 |       expect.assertions(4);
         |              ^
      70 |       const response = await axios.get(
      71 |         '/user?' +
      72 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:69:14)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should merge local validation options with global validation options prioritizing local › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      122 | 
      123 |       afterEach(done => {
    > 124 |         expressServer.close(done);
          |                       ^
      125 |       });
      126 | 
      127 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:124:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › global options › should pass the valid param after validation › succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › global options › should pass the valid param after validation › succeed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'status')

      210 |           );
      211 |         } catch (error) {
    > 212 |           expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                                 ^
      213 |           expect(error.response.data.errors[0].property).toBe(`keyword`);
      214 |         }
      215 |       });

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:212:33)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    TypeError: Cannot read properties of undefined (reading 'close')

      169 | 
      170 |       afterEach(done => {
    > 171 |         expressServer.close(done);
          |                       ^
      172 |       });
      173 | 
      174 |       it(`succeed`, async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:171:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › global options › should pass the valid param after validation › should contain param name on validation failed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      198 | 
      199 |       it('should contain param name on validation failed', async () => {
    > 200 |         expect.assertions(2);
          |                ^
      201 |         try {
      202 |           await axios.get(
      203 |             '/user?' +

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:200:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › local options › should apply local options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › local options › should apply local options

    TypeError: Cannot read properties of undefined (reading 'close')

      244 | 
      245 |     afterEach((done: DoneCallback) => {
    > 246 |       expressServer.close(done);
          |                     ^
      247 |     });
      248 | 
      249 |     it('should apply local options', async () => {

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:246:21)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › local options › should apply local options

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      248 | 
      249 |     it('should apply local options', async () => {
    > 250 |       expect.assertions(4);
          |              ^
      251 |       const response = await axios.get(
      252 |         '/user?' +
      253 |           qs.stringify({

      at Object.<anonymous> (test/functional/class-validator-options.spec.ts:250:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/class-transformer-options.spec.ts
  ●  › should not use any options if not set › technical wrapper

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should not use any options if not set › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should not use any options if not set › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      65 | 
      66 |     it('technical wrapper', async () => {
    > 67 |       expect.assertions(4);
         |              ^
      68 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      69 |       expect(response.status).toBe(200);
      70 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:67:14)

  ●  › should apply global options › technical wrapper

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should apply global options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply global options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      121 | 
      122 |     it('technical wrapper', async () => {
    > 123 |       expect.assertions(4);
          |              ^
      124 |       const response = await axios.get('/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}');
      125 |       expect(response.status).toBe(200);
      126 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:123:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › should apply local options › technical wrapper

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › should apply local options › technical wrapper

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › should apply local options › technical wrapper

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      166 | 
      167 |     it('technical wrapper', async () => {
    > 168 |       expect.assertions(4);
          |              ^
      169 |       const response = await axios.get(`/user?filter={"keyword": "Um", "__somethingPrivate": "blablabla"}`);
      170 |       expect(response.status).toBe(200);
      171 |       expect(response.data).toEqual({

      at Object.<anonymous> (test/functional/class-transformer-options.spec.ts:168:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/global-options.spec.ts
  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    TypeError: Cannot read properties of undefined (reading 'close')

      52 | 
      53 |       afterEach((done: DoneCallback) => {
    > 54 |         expressServer.close(done);
         |                       ^
      55 |       });
      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:54:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › useClassTransformer default value › useClassTransformer by default must be set to true

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |       it('useClassTransformer by default must be set to true', async () => {
    > 58 |         expect.assertions(2);
         |                ^
      59 |         const response = await axios.post('/users', user);
      60 |         expect(initializedUser).toBeInstanceOf(User);
      61 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:58:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      88 | 
      89 |       afterEach((done: DoneCallback) => {
    > 90 |         expressServer.close(done);
         |                       ^
      91 |       });
      92 | 
      93 |       it('useClassTransformer is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:90:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to true › useClassTransformer is enabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      92 | 
      93 |       it('useClassTransformer is enabled', async () => {
    > 94 |         expect.assertions(2);
         |                ^
      95 |         const response = await axios.post('/users', user);
      96 |         expect(initializedUser).toBeInstanceOf(User);
      97 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:94:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    TypeError: Cannot read properties of undefined (reading 'close')

      124 | 
      125 |       afterEach((done: DoneCallback) => {
    > 126 |         expressServer.close(done);
          |                       ^
      127 |       });
      128 | 
      129 |       it('useClassTransformer is disabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:126:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when useClassTransformer is set to false › useClassTransformer is disabled

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      128 | 
      129 |       it('useClassTransformer is disabled', async () => {
    > 130 |         expect.assertions(2);
          |                ^
      131 |         const response = await axios.post('/users', user);
      132 |         expect(initializedUser).not.toBeInstanceOf(User);
      133 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:130:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    TypeError: Cannot read properties of undefined (reading 'close')

      160 | 
      161 |       afterEach((done: DoneCallback) => {
    > 162 |         expressServer.close(done);
          |                       ^
      163 |       });
      164 | 
      165 |       it('routePrefix is enabled', async () => {

      at Object.<anonymous> (test/functional/global-options.spec.ts:162:23)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › routing-controllers global options › when routePrefix is used all controller routes should be appended by it › routePrefix is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      164 | 
      165 |       it('routePrefix is enabled', async () => {
    > 166 |         expect.assertions(4);
          |                ^
      167 |         let response = await axios.post('/api/users', user);
      168 |         expect(initializedUser).toBeInstanceOf(User);
      169 |         expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/global-options.spec.ts:166:16)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/interceptors.spec.ts
  ●  › interceptor › custom interceptor function should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › custom interceptor function should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor function should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      87 | 
      88 |     it('custom interceptor function should replace returned content', async () => {
    > 89 |       expect.assertions(3);
         |              ^
      90 |       const response = await axios.get('/users');
      91 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      92 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:89:14)

  ●  › interceptor › custom interceptor class should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › custom interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('custom interceptor class should replace returned content', async () => {
    >  97 |       expect.assertions(3);
          |              ^
       98 |       const response = await axios.get('/posts');
       99 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      100 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › custom interceptor class used on the whole controller should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      103 | 
      104 |     it('custom interceptor class used on the whole controller should replace returned content', async () => {
    > 105 |       expect.assertions(3);
          |              ^
      106 |       const response = await axios.get('/questions');
      107 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      108 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:105:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › global interceptor class should replace returned content

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › global interceptor class should replace returned content

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › global interceptor class should replace returned content

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      111 | 
      112 |     it('global interceptor class should replace returned content', async () => {
    > 113 |       expect.assertions(3);
          |              ^
      114 |       const response = await axios.get('/files');
      115 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      116 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:113:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › interceptor › interceptors should support promises

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › interceptor › interceptors should support promises

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › interceptor › interceptors should support promises

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      119 | 
      120 |     it('interceptors should support promises', async () => {
    > 121 |       expect.assertions(3);
          |              ^
      122 |       const response = await axios.get('/photos');
      123 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      124 |       expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/interceptors.spec.ts:121:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/defaults.spec.ts
  ●  › defaults › should return undefinedResultCode from defaults config for void function

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      71 | 
      72 |     it('should return undefinedResultCode from defaults config for void function', async () => {
    > 73 |       expect.assertions(1);
         |              ^
      74 |       const response = await axios.get('/voidfunc');
      75 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      76 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:73:14)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should return undefinedResultCode from defaults config for promise void function

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      77 | 
      78 |     it('should return undefinedResultCode from defaults config for promise void function', async () => {
    > 79 |       expect.assertions(1);
         |              ^
      80 |       const response = await axios.get('/promisevoidfunc');
      81 |       expect(response.status).toEqual(defaultUndefinedResultCode);
      82 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:79:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return 400 from required paramOptions

    TypeError: Cannot read properties of undefined (reading 'status')

      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {
    > 89 |         expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
         |                               ^
      90 |       }
      91 |     });
      92 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:89:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return 400 from required paramOptions

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      83 | 
      84 |     it('should return 400 from required paramOptions', async () => {
    > 85 |       expect.assertions(1);
         |              ^
      86 |       try {
      87 |         await axios.get('/paramfunc');
      88 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:85:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return nullResultCode from defaults config

    TypeError: Cannot read properties of undefined (reading 'status')

       96 |         await axios.get('/nullfunc');
       97 |       } catch (error) {
    >  98 |         expect(error.response.status).toEqual(defaultNullResultCode);
          |                               ^
       99 |       }
      100 |     });
      101 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:98:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return nullResultCode from defaults config

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      92 | 
      93 |     it('should return nullResultCode from defaults config', async () => {
    > 94 |       expect.assertions(1);
         |              ^
      95 |       try {
      96 |         await axios.get('/nullfunc');
      97 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:94:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should return status code from OnUndefined annotation

    TypeError: Cannot read properties of undefined (reading 'status')

      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {
    > 107 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_ACCEPTABLE);
          |                               ^
      108 |       }
      109 |     });
      110 | 

      at Object.<anonymous> (test/functional/defaults.spec.ts:107:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should return status code from OnUndefined annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      101 | 
      102 |     it('should return status code from OnUndefined annotation', async () => {
    > 103 |       expect.assertions(1);
          |              ^
      104 |       try {
      105 |         await axios.get('/overridefunc');
      106 |       } catch (error) {

      at Object.<anonymous> (test/functional/defaults.spec.ts:103:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › defaults › should mark arg optional from QueryParam annotation

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › defaults › should mark arg optional from QueryParam annotation

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › defaults › should mark arg optional from QueryParam annotation

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      110 | 
      111 |     it('should mark arg optional from QueryParam annotation', async () => {
    > 112 |       expect.assertions(1);
          |              ^
      113 |       const response = await axios.get('/overrideparamfunc');
      114 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      115 |     });

      at Object.<anonymous> (test/functional/defaults.spec.ts:112:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/express-custom-error-handling.spec.ts
  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › custom express error handling › should not call global error handler middleware if there was no errors

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      56 | 
      57 |     it('should not call global error handler middleware if there was no errors', async () => {
    > 58 |       expect.assertions(2);
         |              ^
      59 |       const response = await axios.get('/blogs');
      60 |       expect(errorHandlerCalled).toBeFalsy();
      61 |       expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:58:14)

  ●  › custom express error handling › should call global error handler middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › custom express error handling › should call global error handler middleware

    expect(received).toBeTruthy()

    Received: false

      67 |         await axios.get('/videos');
      68 |       } catch (error) {
    > 69 |         expect(errorHandlerCalled).toBeTruthy();
         |                                    ^
      70 |         expect(error.response.status).toEqual(HttpStatusCodes.NOT_FOUND);
      71 |         expect(error.response.data).toEqual('Videos were not found.');
      72 |       }

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:69:36)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › custom express error handling › should call global error handler middleware

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 | 
      64 |     it('should call global error handler middleware', async () => {
    > 65 |       expect.assertions(3);
         |              ^
      66 |       try {
      67 |         await axios.get('/videos');
      68 |       } catch (error) {

      at Object.<anonymous> (test/functional/express-custom-error-handling.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/load-from-directory.spec.ts
  ●  › loading all controllers from the given directories › should load all controllers

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › loading all controllers from the given directories › should load all controllers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all controllers from the given directories › should load all controllers

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      25 | 
      26 |     it('should load all controllers', async () => {
    > 27 |       expect.assertions(10);
         |              ^
      28 |       let response = await axios.get('/posts');
      29 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      30 |       expect(response.data).toEqual([

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:27:14)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loading all express middlewares and error handlers from the given directories › should succeed

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('should succeed', async () => {
    > 86 |       expect.assertions(6);
         |              ^
      87 |       const response = await axios.get('/publications');
      88 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      89 |       expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.registerMiddleware (src/driver/express/ExpressDriver.ts:91:20)
      at src/RoutingControllers.ts:98:42
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerMiddlewares (src/RoutingControllers.ts:98:8)
      at createExecutor (src/index.ts:218:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    TypeError: Cannot read properties of undefined (reading 'status')

       99 |         await axios.get('/articles');
      100 |       } catch (error) {
    > 101 |         expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                               ^
      102 |         expect(defaultFakeService.postMiddlewareCalled).toBeTruthy();
      103 |         expect(defaultFakeService.questionMiddlewareCalled).toBeTruthy();
      104 |         expect(defaultFakeService.questionErrorMiddlewareCalled).toBeTruthy();

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:101:31)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › loading all express middlewares and error handlers from the given directories › should fail

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

       95 | 
       96 |     it('should fail', async () => {
    >  97 |       expect.assertions(6);
          |              ^
       98 |       try {
       99 |         await axios.get('/articles');
      100 |       } catch (error) {

      at Object.<anonymous> (test/functional/load-from-directory.spec.ts:97:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/controller-options.spec.ts
  ●  › controller options › controller transform is enabled by default

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller options › controller transform is enabled by default

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      71 | 
      72 |     it('controller transform is enabled by default', async () => {
    > 73 |       expect.assertions(4);
         |              ^
      74 |       try {
      75 |         const response = await axios.post('/default', user);
      76 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:73:14)

  ●  › controller options › when controller transform is enabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller options › when controller transform is enabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      84 | 
      85 |     it('when controller transform is enabled', async () => {
    > 86 |       expect.assertions(4);
         |              ^
      87 |       try {
      88 |         const response = await axios.post('/transform', user);
      89 |         expect(initializedUser).toBeInstanceOf(UserModel);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:86:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › controller options › when controller transform is disabled

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as post] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › controller options › when controller transform is disabled

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

       97 | 
       98 |     it('when controller transform is disabled', async () => {
    >  99 |       expect.assertions(4);
          |              ^
      100 |       try {
      101 |         const response = await axios.post('/noTransform', user);
      102 |         expect(initializedUser).toMatchObject(user);

      at Object.<anonymous> (test/functional/controller-options.spec.ts:99:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/middlewares-order.spec.ts
  ●  › loaded direct from array › should call middlewares in order defined by items order

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › loaded direct from array › should call middlewares in order defined by items order

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should call middlewares in order defined by items order', async () => {
    > 65 |       expect.assertions(4);
         |              ^
      66 |       const response = await axios.get('/test');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:65:14)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › specified by priority option › should call middlewares in order defined by priority parameter of decorator

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      122 | 
      123 |     it('should call middlewares in order defined by priority parameter of decorator', async () => {
    > 124 |       expect.assertions(4);
          |              ^
      125 |       const response = await axios.get('/test');
      126 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      127 |       expect(middlewaresOrder[0]).toEqual(1);

      at Object.<anonymous> (test/functional/middlewares-order.spec.ts:124:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/redirect-decorator.spec.ts
  ●  › dynamic redirect › using template

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › dynamic redirect › using template

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using template

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      53 | 
      54 |     it('using template', async () => {
    > 55 |       expect.assertions(2);
         |              ^
      56 |       const response = await axios.get('/template');
      57 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      58 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:55:14)

  ●  › dynamic redirect › using override

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › dynamic redirect › using override

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using override

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      60 | 
      61 |     it('using override', async () => {
    > 62 |       expect.assertions(2);
         |              ^
      63 |       const response = await axios.get('/override');
      64 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      65 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:62:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › dynamic redirect › using original

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › dynamic redirect › using original

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › dynamic redirect › using original

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      67 | 
      68 |     it('using original', async () => {
    > 69 |       expect.assertions(2);
         |              ^
      70 |       const response = await axios.get('/original');
      71 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      72 |       expect(response.data.login).toEqual('pleerock');

      at Object.<anonymous> (test/functional/redirect-decorator.spec.ts:69:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/render-decorator.spec.ts
  ●  › template rendering › should render a template and use given variables

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › template rendering › should render a template and use given variables

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › template rendering › should render a template and use given variables

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      52 | 
      53 |     it('should render a template and use given variables', async () => {
    > 54 |       expect.assertions(6);
         |              ^
      55 |       const response = await axios.get('/index');
      56 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      57 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:54:14)

  ●  › template rendering › should render a template with given variables and locals variables

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.app.<computed> [as get] (../../../Variants/express/variant1/express/lib/application.js:496:10)
      at ExpressDriver.registerAction (src/driver/express/ExpressDriver.ts:184:52)
      at src/RoutingControllers.ts:81:21
          at Array.forEach (<anonymous>)
      at src/RoutingControllers.ts:75:26
          at Array.forEach (<anonymous>)
      at RoutingControllers.registerControllers (src/RoutingControllers.ts:74:17)
      at createExecutor (src/index.ts:219:6)

  ●  › template rendering › should render a template with given variables and locals variables

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › template rendering › should render a template with given variables and locals variables

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      63 | 
      64 |     it('should render a template with given variables and locals variables', async () => {
    > 65 |       expect.assertions(7);
         |              ^
      66 |       const response = await axios.get('/locals');
      67 |       expect(response.status).toEqual(HttpStatusCodes.OK);
      68 |       expect(response.data).toContain('<html>');

      at Object.<anonymous> (test/functional/render-decorator.spec.ts:65:14)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

FAIL test/functional/action-params.spec.ts
  ●  › @Req and @Res should be provided as Request and Response objects

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Req and @Res should be provided as Request and Response objects

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Req and @Res should be provided as Request and Response objects

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      466 | 
      467 |   it('@Req and @Res should be provided as Request and Response objects', async () => {
    > 468 |     expect.assertions(4);
          |            ^
      469 |     const response = await axios.get('/users');
      470 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      471 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:468:12)

  ●  › @Res writing directly to the response should work

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Res writing directly to the response should work

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Res writing directly to the response should work

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      475 | 
      476 |   it('@Res writing directly to the response should work', async () => {
    > 477 |     expect.assertions(3);
          |            ^
      478 |     const response = await axios.get('/users-direct');
      479 |     expect(response.status).toEqual(HttpStatusCodes.CREATED);
      480 |     expect(response.headers['content-type']).toEqual('custom/x-sample; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:477:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param should give a param from route

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Param should give a param from route

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Param should give a param from route

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      483 | 
      484 |   it('@Param should give a param from route', async () => {
    > 485 |     expect.assertions(4);
          |            ^
      486 |     const response = await axios.get('users/1');
      487 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      488 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:485:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Param multiple params should give a proper values from route

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Param multiple params should give a proper values from route

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Param multiple params should give a proper values from route

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      492 | 
      493 |   it('@Param multiple params should give a proper values from route', async () => {
    > 494 |     expect.assertions(5);
          |            ^
      495 |     const response = await axios.get('/users/23/photos/32');
      496 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      497 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:494:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @SessionParam without middleware

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @SessionParam without middleware

    TypeError: Cannot read properties of undefined (reading 'status')

      506 |       await axios.get('/not-use-session');
      507 |     } catch (error) {
    > 508 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
          |                             ^
      509 |     }
      510 |   });
      511 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:508:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @SessionParam without middleware

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      502 | 
      503 |   it('@SessionParam without middleware', async () => {
    > 504 |     expect.assertions(1);
          |            ^
      505 |     try {
      506 |       await axios.get('/not-use-session');
      507 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:504:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session should return a value from session

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Session should return a value from session

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Session should return a value from session

    expect.assertions(7)

    Expected seven assertions to be called but received zero assertion calls.

      511 | 
      512 |   it('@Session should return a value from session', async () => {
    > 513 |     expect.assertions(7);
          |            ^
      514 |     const response = await axios.post('/session');
      515 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      516 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:513:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Session(param) should allow to inject empty property

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Session(param) should allow to inject empty property

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      554 | 
      555 |   it("@QueryParams should give a proper values from request's query parameters", async () => {
    > 556 |     expect.assertions(10);
          |            ^
      557 |     const response = await axios.get(
      558 |       '/photos-params?' +
      559 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:556:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters and one multiple value

    expect.assertions(10)

    Expected ten assertions to be called but received zero assertion calls.

      586 | 
      587 |   it("@QueryParams should give a proper values from request's query parameters and one multiple value", async () => {
    > 588 |     expect.assertions(10);
          |            ^
      589 |     const response = await axios.get(
      590 |       '/photos-params?' +
      591 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:588:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query with validate whitelist option on

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      611 | 
      612 |   it("@QueryParams should give a proper values from request's query with validate whitelist option on", async () => {
    > 613 |     expect.assertions(3);
          |            ^
      614 |     const response = await axios.get('/photos-params-whitelist?multipleBooleanValues=false');
      615 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      616 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:613:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's query parameters with nested json

    expect.assertions(13)

    Expected thirteen assertions to be called but received zero assertion calls.

      619 | 
      620 |   it("@QueryParams should give a proper values from request's query parameters with nested json", async () => {
    > 621 |     expect.assertions(13);
          |            ^
      622 |     const response = await axios.get(
      623 |       '/photos-params?' +
      624 |         'sortBy=name&' +

      at Object.<anonymous> (test/functional/action-params.spec.ts:621:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should not validate request query parameters when it's turned off in validator options

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      651 | 
      652 |   it("@QueryParams should not validate request query parameters when it's turned off in validator options", async () => {
    > 653 |     expect.assertions(6);
          |            ^
      654 |     const response = await axios.get('/photos-params-no-validate?sortBy=verylongtext&count=2&limit=1&showAll=true');
      655 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      656 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:653:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParams should give a proper values from request's optional query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      662 | 
      663 |   it("@QueryParams should give a proper values from request's optional query parameters", async () => {
    > 664 |     expect.assertions(6);
          |            ^
      665 |     const response = await axios.get('/photos-params-optional?sortBy=name&limit=10');
      666 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      667 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:664:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give a proper values from request query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give a proper values from request query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give a proper values from request query parameters

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      673 | 
      674 |   it('@QueryParam should give a proper values from request query parameters', async () => {
    > 675 |     expect.assertions(6);
          |            ^
      676 |     const response = await axios.get('/photos?sortBy=name&count=2&limit=10&showAll=true');
      677 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      678 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:675:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with only one query parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of string with only one query parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of string with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      684 | 
      685 |   it('@QueryParam should give an array of string with only one query parameter', async () => {
    > 686 |     expect.assertions(3);
          |            ^
      687 |     const response = await axios.get('/photos-query-param-string-array?multipleStringValues=a');
      688 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      689 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:686:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of string with multiple query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of string with multiple query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of string with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      692 | 
      693 |   it('@QueryParam should give an array of string with multiple query parameters', async () => {
    > 694 |     expect.assertions(3);
          |            ^
      695 |     const response = await axios.get(
      696 |       '/photos-query-param-string-array?multipleStringValues=a&multipleStringValues=b&multipleStringValues=b'
      697 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:694:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with only one query parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of number with only one query parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of number with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      702 | 
      703 |   it('@QueryParam should give an array of number with only one query parameter', async () => {
    > 704 |     expect.assertions(3);
          |            ^
      705 |     const response = await axios.get('/photos-query-param-number-array?multipleNumberValues=1');
      706 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      707 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:704:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of number with multiple query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of number with multiple query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of number with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      710 | 
      711 |   it('@QueryParam should give an array of number with multiple query parameters', async () => {
    > 712 |     expect.assertions(3);
          |            ^
      713 |     const response = await axios.get(
      714 |       '/photos-query-param-number-array?multipleNumberValues=1&multipleNumberValues=2&multipleNumberValues=2'
      715 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:712:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with only one query parameter

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of date with only one query parameter

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of date with only one query parameter

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      720 | 
      721 |   it('@QueryParam should give an array of date with only one query parameter', async () => {
    > 722 |     expect.assertions(3);
          |            ^
      723 |     const response = await axios.get('/photos-query-param-date-array?multipleDateValues=2021-01-01');
      724 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      725 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:722:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam should give an array of date with multiple query parameters

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam should give an array of date with multiple query parameters

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam should give an array of date with multiple query parameters

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      728 | 
      729 |   it('@QueryParam should give an array of date with multiple query parameters', async () => {
    > 730 |     expect.assertions(3);
          |            ^
      731 |     const response = await axios.get(
      732 |       '/photos-query-param-date-array?multipleDateValues=2021-01-01&multipleDateValues=2020-01-01&multipleDateValues=2021-05-01'
      733 |     );

      at Object.<anonymous> (test/functional/action-params.spec.ts:730:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when required params must be provided and they should not be empty

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when required params must be provided and they should not be empty

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam when required params must be provided and they should not be empty

    expect.assertions(6)

    Expected six assertions to be called but received zero assertion calls.

      738 | 
      739 |   it('@QueryParam when required params must be provided and they should not be empty', async () => {
    > 740 |     expect.assertions(6);
          |            ^
      741 |     let response = await axios.get('/photos-with-required?limit=0');
      742 |     expect(queryParamLimit).toEqual(0);
      743 |     expect(response.status).toBe(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:740:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date then it should be parsed

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when the type is Date then it should be parsed

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam when the type is Date then it should be parsed

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      759 | 
      760 |   it('@QueryParam when the type is Date then it should be parsed', async () => {
    > 761 |     expect.assertions(2);
          |            ^
      762 |     const response = await axios.get('/posts-after/?from=2017-01-01T00:00:00Z');
      763 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      764 |     expect(response.data).toEqual('2017-01-01T00:00:00.000Z');

      at Object.<anonymous> (test/functional/action-params.spec.ts:761:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    TypeError: Cannot read properties of undefined (reading 'status')

      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {
    > 772 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                             ^
      773 |       expect(error.response.data.name).toEqual('ParamNormalizationError');
      774 |     }
      775 |   });

      at Object.<anonymous> (test/functional/action-params.spec.ts:772:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when the type is Date and it is invalid then the response should be a BadRequest error

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      766 | 
      767 |   it('@QueryParam when the type is Date and it is invalid then the response should be a BadRequest error', async () => {
    > 768 |     expect.assertions(2);
          |            ^
      769 |     try {
      770 |       const response = await axios.get('/posts-after/?from=InvalidDate');
      771 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:768:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @QueryParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      776 | 
      777 |   it('@QueryParam when parseJson flag is used query param must be converted to object', async () => {
    > 778 |     expect.assertions(3);
          |            ^
      779 |     const response = await axios.get('/photos-with-json/?filter={"keyword": "name", "limit": 5}');
      780 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      781 |     expect(response.headers['content-type']).toEqual('text/html; charset=utf-8');

      at Object.<anonymous> (test/functional/action-params.spec.ts:778:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should give a proper values from request headers

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam should give a proper values from request headers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @HeaderParam when required is params must be provided and they should not be empty

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      799 | 
      800 |   it('@HeaderParam when required is params must be provided and they should not be empty', async () => {
    > 801 |     expect.assertions(3);
          |            ^
      802 |     const response = await axios.get('/posts-with-required', {
      803 |       headers: {
      804 |         limit: 0,

      at Object.<anonymous> (test/functional/action-params.spec.ts:801:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with invalid request options

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam should fail with invalid request options

    TypeError: Cannot read properties of undefined (reading 'status')

      819 |       });
      820 |     } catch (error) {
    > 821 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                             ^
      822 |     }
      823 |   });
      824 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:821:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with invalid request options

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      811 | 
      812 |   it('@HeaderParam should fail with invalid request options', async () => {
    > 813 |     expect.assertions(1);
          |            ^
      814 |     try {
      815 |       await axios.get('/posts-with-required', {
      816 |         headers: {

      at Object.<anonymous> (test/functional/action-params.spec.ts:813:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with missing required params

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @HeaderParam should fail with missing required params

    TypeError: Cannot read properties of undefined (reading 'status')

      828 |       await axios.get('/posts-with-required');
      829 |     } catch (error) {
    > 830 |       expect(error.response.status).toEqual(HttpStatusCodes.BAD_REQUEST);
          |                             ^
      831 |     }
      832 |   });
      833 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:830:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @HeaderParam should fail with missing required params

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      824 | 
      825 |   it('@HeaderParam should fail with missing required params', async () => {
    > 826 |     expect.assertions(1);
          |            ^
      827 |     try {
      828 |       await axios.get('/posts-with-required');
      829 |     } catch (error) {

      at Object.<anonymous> (test/functional/action-params.spec.ts:826:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › for @HeaderParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      833 | 
      834 |   it('for @HeaderParam when parseJson flag is used query param must be converted to object', async () => {
    > 835 |     expect.assertions(3);
          |            ^
      836 |     const response = await axios.get('/posts-with-json', {
      837 |       headers: {
      838 |         filter: '{"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:835:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam should give a proper values from request headers

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @CookieParam should give a proper values from request headers

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @CookieParam should give a proper values from request headers

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      845 | 
      846 |   it('@CookieParam should give a proper values from request headers', async () => {
    > 847 |     expect.assertions(5);
          |            ^
      848 |     const response = await axios.get('/questions', {
      849 |       headers: {
      850 |         Cookie: 'token=31ds31das231sad12; count=20; showAll=false',

      at Object.<anonymous> (test/functional/action-params.spec.ts:847:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @CookieParam when required is params must be provided and they should not be empty

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      860 | 
      861 |   it('@CookieParam when required is params must be provided and they should not be empty', async () => {
    > 862 |     expect.assertions(4);
          |            ^
      863 |     let response = await axios.get('/questions-with-required', {
      864 |       headers: {
      865 |         Cookie: 'limit=20',

      at Object.<anonymous> (test/functional/action-params.spec.ts:862:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @CookieParam when parseJson flag is used query param must be converted to object

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      879 | 
      880 |   it('@CookieParam when parseJson flag is used query param must be converted to object', async () => {
    > 881 |     expect.assertions(3);
          |            ^
      882 |     const response = await axios.get('/questions-with-json', {
      883 |       headers: {
      884 |         Cookie: 'filter={"keyword": "name", "limit": 5}',

      at Object.<anonymous> (test/functional/action-params.spec.ts:881:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a request body

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should provide a request body

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should provide a request body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      892 | 
      893 |   it('@Body should provide a request body', async () => {
    > 894 |     expect.assertions(3);
          |            ^
      895 |     const response = await axios.post('/questions', 'hello', {
      896 |       headers: {
      897 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:894:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should fail if required body was not provided

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should fail if required body was not provided

    expect.assertions(5)

    Expected five assertions to be called but received zero assertion calls.

      904 | 
      905 |   it('@Body should fail if required body was not provided', async () => {
    > 906 |     expect.assertions(5);
          |            ^
      907 |     let response = await axios.post('/questions-with-required', '0', {
      908 |       headers: {
      909 |         'Content-type': 'text/plain',

      at Object.<anonymous> (test/functional/action-params.spec.ts:906:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should provide a json object for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should provide a json object for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      936 | 
      937 |   it('@Body should provide a json object for json-typed controllers and actions', async () => {
    > 938 |     expect.assertions(4);
          |            ^
      939 |     const response = await axios.post('/posts', { hello: 'world' });
      940 |     expect(body).toEqual({ hello: 'world' });
      941 |     expect(response.status).toEqual(HttpStatusCodes.OK);

      at Object.<anonymous> (test/functional/action-params.spec.ts:938:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      945 | 
      946 |   it('@Body should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 947 |     expect.assertions(2);
          |            ^
      948 |     let response = await axios.post('posts-with-required', { hello: '' });
      949 |     expect(response.status).toEqual(HttpStatusCodes.OK);
      950 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:947:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @BodyParam should provide a json object for json-typed controllers and actions

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      957 | 
      958 |   it('@BodyParam should provide a json object for json-typed controllers and actions', async () => {
    > 959 |     expect.assertions(4);
          |            ^
      960 |     const response = await axios.post('/users', { name: 'johny', age: 27, isActive: true });
      961 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      962 |     expect(bodyParamName).toEqual('johny');

      at Object.<anonymous> (test/functional/action-params.spec.ts:959:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @BodyParam should fail if required body was not provided for json-typed controllers and actions

    expect.assertions(8)

    Expected eight assertions to be called but received zero assertion calls.

      966 | 
      967 |   it('@BodyParam should fail if required body was not provided for json-typed controllers and actions', async () => {
    > 968 |     expect.assertions(8);
          |            ^
      969 |     let response = await axios.post('/users-with-required', { name: 'johny', age: 27, isActive: true });
      970 |     expect(response.status).toEqual(HttpStatusCodes.NO_CONTENT);
      971 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:968:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @Body using application/x-www-form-urlencoded should handle url encoded form data

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1005 | 
      1006 |   it('@Body using application/x-www-form-urlencoded should handle url encoded form data', async () => {
    > 1007 |     expect.assertions(3);
           |            ^
      1008 |     const response = await axios.post(
      1009 |       '/form-data-body',
      1010 |       qs.stringify({

      at Object.<anonymous> (test/functional/action-params.spec.ts:1007:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile using multipart/form-data should provide uploaded file with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1026 | 
      1027 |   it('@UploadedFile using multipart/form-data should provide uploaded file with the given name', async () => {
    > 1028 |     expect.assertions(3);
           |            ^
      1029 |     const form = new FormData();
      1030 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1031 |     const response = await axios.post('/file', form, {

      at Object.<anonymous> (test/functional/action-params.spec.ts:1028:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @Body should return both the file and the body

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile with @Body should return both the file and the body

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile with @Body should return both the file and the body

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1038 | 
      1039 |   it('@UploadedFile with @Body should return both the file and the body', async () => {
    > 1040 |     expect.assertions(3);
           |            ^
      1041 |     const form = new FormData();
      1042 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1043 |     form.append('anotherField', 'hello');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1040:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile with @BodyParam should return both the file and the body param

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1054 | 
      1055 |   it('@UploadedFile with @BodyParam should return both the file and the body param', async () => {
    > 1056 |     expect.assertions(3);
           |            ^
      1057 |     const form = new FormData();
      1058 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1059 |     form.append('testParam', 'testParamOne');

      at Object.<anonymous> (test/functional/action-params.spec.ts:1056:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with passed uploading options (limit) should throw an error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile with passed uploading options (limit) should throw an error

    TypeError: Cannot read properties of undefined (reading 'status')

      1076 |       });
      1077 |     } catch (error) {
    > 1078 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
           |                             ^
      1079 |     }
      1080 |   });
      1081 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1078:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile with passed uploading options (limit) should throw an error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      1067 | 
      1068 |   it('@UploadedFile with passed uploading options (limit) should throw an error', async () => {
    > 1069 |     expect.assertions(1);
           |            ^
      1070 |     const form = new FormData();
      1071 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1072 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1069:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFile when required is used files must be provided

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFile when required is used files must be provided

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFile when required is used files must be provided

    expect.assertions(4)

    Expected four assertions to be called but received zero assertion calls.

      1081 | 
      1082 |   it('@UploadedFile when required is used files must be provided', async () => {
    > 1083 |     expect.assertions(4);
           |            ^
      1084 |     const form = new FormData();
      1085 |     form.append('myFile', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1086 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1083:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles should provide uploaded files with the given name

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFiles should provide uploaded files with the given name

    connect ECONNREFUSED 127.0.0.1:3001

      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1229:16)

  ●  › @UploadedFiles should provide uploaded files with the given name

    expect.assertions(3)

    Expected three assertions to be called but received zero assertion calls.

      1102 | 
      1103 |   it('@UploadedFiles should provide uploaded files with the given name', async () => {
    > 1104 |     expect.assertions(3);
           |            ^
      1105 |     const form = new FormData();
      1106 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1107 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));

      at Object.<anonymous> (test/functional/action-params.spec.ts:1104:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles with passed uploading options (limit) should throw an error

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFiles with passed uploading options (limit) should throw an error

    TypeError: Cannot read properties of undefined (reading 'status')

      1125 |       });
      1126 |     } catch (error) {
    > 1127 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
           |                             ^
      1128 |     }
      1129 |   });
      1130 | 

      at Object.<anonymous> (test/functional/action-params.spec.ts:1127:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles with passed uploading options (limit) should throw an error

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      1115 | 
      1116 |   it('@UploadedFiles with passed uploading options (limit) should throw an error', async () => {
    > 1117 |     expect.assertions(1);
           |            ^
      1118 |     const form = new FormData();
      1119 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));
      1120 |     form.append('photos', fs.createReadStream(path.resolve(__dirname, '../resources/sample-text-file.txt')));

      at Object.<anonymous> (test/functional/action-params.spec.ts:1117:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles when required is used files must be provided

    TypeError: setPrototypeOf is not a function

      49 | 
      50 |   // mixin Router class functions
    > 51 |   setPrototypeOf(router, proto)
         |   ^
      52 | 
      53 |   router.params = {};
      54 |   router._params = [];

      at new module.exports (../../../Variants/express/variant1/express/lib/router/index.js:51:3)
      at Function.lazyrouter (../../../Variants/express/variant1/express/lib/application.js:146:20)
      at Function.use (../../../Variants/express/variant1/express/lib/application.js:221:8)
      at ExpressDriver.initialize (src/driver/express/ExpressDriver.ts:49:22)
      at RoutingControllers.initialize (src/RoutingControllers.ts:53:17)
      at createExecutor (src/index.ts:216:6)
      at createServer (src/index.ts:148:3)
      at Object.createExpressServer (src/index.ts:125:10)
      at Object.<anonymous> (test/functional/action-params.spec.ts:455:21)

  ●  › @UploadedFiles when required is used files must be provided

    TypeError: Cannot read properties of undefined (reading 'status')

      1138 |       });
      1139 |     } catch (error) {
    > 1140 |       expect(error.response.status).toEqual(HttpStatusCodes.INTERNAL_SERVER_ERROR);
           |                             ^
      1141 |     }
      1142 |   });
      1143 | });

      at Object.<anonymous> (test/functional/action-params.spec.ts:1140:29)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)

  ●  › @UploadedFiles when required is used files must be provided

    expect.assertions(1)

    Expected one assertion to be called but received zero assertion calls.

      1130 | 
      1131 |   it('@UploadedFiles when required is used files must be provided', async () => {
    > 1132 |     expect.assertions(1);
           |            ^
      1133 |     const form = new FormData();
      1134 | 
      1135 |     try {

      at Object.<anonymous> (test/functional/action-params.spec.ts:1132:12)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)


Test Suites: 24 failed, 2 passed, 26 total
Tests:       170 failed, 12 passed, 182 total
Snapshots:   0 total
Time:        10.78 s
Ran all test suites.
